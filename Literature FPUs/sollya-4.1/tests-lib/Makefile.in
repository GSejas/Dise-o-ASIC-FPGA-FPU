# Makefile.in generated by automake 1.14 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = force_compilation$(EXEEXT) $(am__EXEEXT_1)
TESTS = $(am__EXEEXT_2)
subdir = tests-lib
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libraryexample_a_AR = $(AR) $(ARFLAGS)
libraryexample_a_LIBADD =
libraryexample_a_SOURCES = libraryexample.c
libraryexample_a_OBJECTS = libraryexample.$(OBJEXT)
am__EXEEXT_1 = tabs$(EXEEXT) tabsolute$(EXEEXT) tacos$(EXEEXT) \
	tacosh$(EXEEXT) tadd$(EXEEXT) tand$(EXEEXT) tappend$(EXEEXT) \
	tasin$(EXEEXT) tasinh$(EXEEXT) tasciiplot$(EXEEXT) \
	tatan$(EXEEXT) tatanh$(EXEEXT) tbashexecute$(EXEEXT) \
	tbinary$(EXEEXT) tboolean_list_ops$(EXEEXT) \
	tbuild_end_elliptic_list$(EXEEXT) tbuild_function_abs$(EXEEXT) \
	tbuild_function_acos$(EXEEXT) tbuild_function_acosh$(EXEEXT) \
	tbuild_function_add$(EXEEXT) tbuild_function_asin$(EXEEXT) \
	tbuild_function_asinh$(EXEEXT) tbuild_function_atan$(EXEEXT) \
	tbuild_function_atanh$(EXEEXT) tbuild_function_ceil$(EXEEXT) \
	tbuild_function_cos$(EXEEXT) tbuild_function_cosh$(EXEEXT) \
	tbuild_function_div$(EXEEXT) tbuild_function_double$(EXEEXT) \
	tbuild_function_double_double$(EXEEXT) \
	tbuild_function_doubleextended$(EXEEXT) \
	tbuild_function_erf$(EXEEXT) tbuild_function_erfc$(EXEEXT) \
	tbuild_function_exp$(EXEEXT) tbuild_function_expm1$(EXEEXT) \
	tbuild_function_floor$(EXEEXT) \
	tbuild_function_free_variable$(EXEEXT) \
	tbuild_function_halfprecision$(EXEEXT) \
	tbuild_function_libraryconstant$(EXEEXT) \
	tbuild_function_libraryfunction$(EXEEXT) \
	tbuild_function_log10$(EXEEXT) tbuild_function_log1p$(EXEEXT) \
	tbuild_function_log2$(EXEEXT) tbuild_function_log$(EXEEXT) \
	tbuild_function_mul$(EXEEXT) \
	tbuild_function_nearestint$(EXEEXT) \
	tbuild_function_neg$(EXEEXT) tbuild_function_pi$(EXEEXT) \
	tbuild_function_pow$(EXEEXT) \
	tbuild_function_procedurefunction$(EXEEXT) \
	tbuild_function_quad$(EXEEXT) tbuild_function_sin$(EXEEXT) \
	tbuild_function_single$(EXEEXT) tbuild_function_sinh$(EXEEXT) \
	tbuild_function_sqrt$(EXEEXT) tbuild_function_sub$(EXEEXT) \
	tbuild_function_tan$(EXEEXT) tbuild_function_tanh$(EXEEXT) \
	tbuild_function_triple_double$(EXEEXT) tbuild_list$(EXEEXT) \
	tcanonical$(EXEEXT) tceil$(EXEEXT) tcheckinfnorm$(EXEEXT) \
	tcmp_equal$(EXEEXT) tcmp_greater$(EXEEXT) \
	tcmp_greater_equal$(EXEEXT) tcmp_in$(EXEEXT) \
	tcmp_less$(EXEEXT) tcmp_less_equal$(EXEEXT) \
	tcmp_not_equal$(EXEEXT) tcmp_objs_structurally$(EXEEXT) \
	tcoeff$(EXEEXT) tconcat$(EXEEXT) tconstant$(EXEEXT) \
	tconstant_from_double$(EXEEXT) tconstant_from_int64$(EXEEXT) \
	tconstant_from_int$(EXEEXT) tconstant_from_mpq$(EXEEXT) \
	tconstant_from_mpz$(EXEEXT) tconstant_from_uint64$(EXEEXT) \
	tconstant_list_ops$(EXEEXT) tcopy_obj$(EXEEXT) tcos$(EXEEXT) \
	tcosh$(EXEEXT) tcreate_structure$(EXEEXT) tdecimal$(EXEEXT) \
	tdecompose_function$(EXEEXT) \
	tdecompose_libraryconstant$(EXEEXT) \
	tdecompose_libraryfunction$(EXEEXT) \
	tdecompose_procedurefunction$(EXEEXT) tdefault$(EXEEXT) \
	tdegree$(EXEEXT) tdenominator$(EXEEXT) tdiff$(EXEEXT) \
	tdirtyinfnorm$(EXEEXT) tdirtyintegral$(EXEEXT) \
	tdirtysimplify$(EXEEXT) tdiv$(EXEEXT) tdouble$(EXEEXT) \
	tdouble_double$(EXEEXT) tdouble_double_obj$(EXEEXT) \
	tdoubleextended$(EXEEXT) tdoubleextended_obj$(EXEEXT) \
	tdouble_obj$(EXEEXT) tdyadic$(EXEEXT) \
	tend_elliptic_list$(EXEEXT) terf$(EXEEXT) terfc$(EXEEXT) \
	terror$(EXEEXT) \
	tevaluate_function_at_constant_expression$(EXEEXT) \
	tevaluate_function_at_point$(EXEEXT) texp$(EXEEXT) \
	texpand$(EXEEXT) texpm1$(EXEEXT) tfalse$(EXEEXT) \
	tfile$(EXEEXT) tfixed$(EXEEXT) tfloating$(EXEEXT) \
	tfloor$(EXEEXT) tfpminimax$(EXEEXT) tfree_variable$(EXEEXT) \
	tget_autosimplify$(EXEEXT) tget_bounds_from_range$(EXEEXT) \
	tget_canonical$(EXEEXT) tget_constant_as_double$(EXEEXT) \
	tget_constant_as_int$(EXEEXT) tget_constant_as_int64$(EXEEXT) \
	tget_constant_as_mpq$(EXEEXT) tget_constant_as_mpz$(EXEEXT) \
	tget_constant_as_uint64$(EXEEXT) tget_diam$(EXEEXT) \
	tget_dieonerrormode$(EXEEXT) tget_display$(EXEEXT) \
	tget_element_in_list$(EXEEXT) tget_free_variable_name$(EXEEXT) \
	tget_function_arity$(EXEEXT) tget_head_function$(EXEEXT) \
	tget_hopitalrecursions$(EXEEXT) \
	tget_interval_from_range$(EXEEXT) tget_list_elements$(EXEEXT) \
	tget_midpointmode$(EXEEXT) tget_points$(EXEEXT) \
	tget_prec$(EXEEXT) tget_rationalmode$(EXEEXT) \
	tget_roundingwarnings$(EXEEXT) \
	tget_showmessagenumbers$(EXEEXT) tget_string$(EXEEXT) \
	tget_structure_elements$(EXEEXT) tget_subfunctions$(EXEEXT) \
	tget_element_in_structure$(EXEEXT) \
	tget_taylorrecursions$(EXEEXT) tget_timing$(EXEEXT) \
	tget_verbosity$(EXEEXT) thalfprecision$(EXEEXT) \
	thalfprecision_obj$(EXEEXT) thead$(EXEEXT) \
	thexadecimal$(EXEEXT) thonorcoeffprec$(EXEEXT) \
	thorner$(EXEEXT) timplementpoly$(EXEEXT) tinf$(EXEEXT) \
	tinit_with_custom_memory_functions$(EXEEXT) \
	tint_list_ops$(EXEEXT) tintegral$(EXEEXT) \
	tinterval_list_ops$(EXEEXT) tis_absolute$(EXEEXT) \
	tis_binary$(EXEEXT) tis_decimal$(EXEEXT) tis_default$(EXEEXT) \
	tis_double_double_obj$(EXEEXT) tis_doubleextended_obj$(EXEEXT) \
	tis_double_obj$(EXEEXT) tis_dyadic$(EXEEXT) tis_false$(EXEEXT) \
	tis_file$(EXEEXT) tis_fixed$(EXEEXT) tis_floating$(EXEEXT) \
	tis_halfprecision_obj$(EXEEXT) tis_hexadecimal$(EXEEXT) \
	tis_honorcoeffprec$(EXEEXT) tis_off$(EXEEXT) tis_on$(EXEEXT) \
	tis_perturb$(EXEEXT) tis_pi$(EXEEXT) tis_postscript$(EXEEXT) \
	tis_postscriptfile$(EXEEXT) tis_powers$(EXEEXT) \
	tis_quad_obj$(EXEEXT) tis_relative$(EXEEXT) \
	tis_round_down$(EXEEXT) tis_round_to_nearest$(EXEEXT) \
	tis_round_towards_zero$(EXEEXT) tis_round_up$(EXEEXT) \
	tis_single_obj$(EXEEXT) tis_triple_double_obj$(EXEEXT) \
	tis_true$(EXEEXT) tis_void$(EXEEXT) tlength$(EXEEXT) \
	tlibraryconstant$(EXEEXT) tlibraryfunction$(EXEEXT) \
	tlist$(EXEEXT) tlog10$(EXEEXT) tlog1p$(EXEEXT) tlog2$(EXEEXT) \
	tlog$(EXEEXT) tmacros_build_function$(EXEEXT) \
	tmantissa_and_exponent$(EXEEXT) tmax$(EXEEXT) tmid$(EXEEXT) \
	tmin$(EXEEXT) tmsg_callback_functions$(EXEEXT) tmul$(EXEEXT) \
	tname_free_variable$(EXEEXT) tnearestint$(EXEEXT) \
	tneg$(EXEEXT) tnegate$(EXEEXT) tnumberroots$(EXEEXT) \
	tnumerator$(EXEEXT) tobj_is_end_elliptic_list$(EXEEXT) \
	tobj_is_error$(EXEEXT) tobj_is_function$(EXEEXT) \
	tobj_is_list$(EXEEXT) tobj_is_range$(EXEEXT) \
	tobj_is_string$(EXEEXT) tobj_is_structure$(EXEEXT) \
	tobject_list_ops$(EXEEXT) toff$(EXEEXT) ton$(EXEEXT) \
	tor$(EXEEXT) tperturb$(EXEEXT) tpi$(EXEEXT) \
	tpostscript$(EXEEXT) tpostscriptfile$(EXEEXT) tpow$(EXEEXT) \
	tpowers$(EXEEXT) tprecision$(EXEEXT) tprepend$(EXEEXT) \
	tprintdouble$(EXEEXT) tprintexpansion$(EXEEXT) \
	tprintf$(EXEEXT) tprintsingle$(EXEEXT) \
	tprocedurefunction$(EXEEXT) tquad$(EXEEXT) tquad_obj$(EXEEXT) \
	trange_from_bounds$(EXEEXT) trange_from_interval$(EXEEXT) \
	trationalapprox$(EXEEXT) trelative$(EXEEXT) tremez$(EXEEXT) \
	trevert$(EXEEXT) tround_down$(EXEEXT) \
	tround_to_nearest$(EXEEXT) tround_towards_zero$(EXEEXT) \
	tround_up$(EXEEXT) troundcoefficients$(EXEEXT) \
	tsearchgal$(EXEEXT) tset_autosimplify_and_print$(EXEEXT) \
	tset_autosimplify$(EXEEXT) tset_canonical_and_print$(EXEEXT) \
	tset_canonical$(EXEEXT) tset_diam_and_print$(EXEEXT) \
	tset_diam$(EXEEXT) tset_dieonerrormode_and_print$(EXEEXT) \
	tset_dieonerrormode$(EXEEXT) tset_display_and_print$(EXEEXT) \
	tset_display$(EXEEXT) \
	tset_hopitalrecursions_and_print$(EXEEXT) \
	tset_hopitalrecursions$(EXEEXT) \
	tset_midpointmode_and_print$(EXEEXT) \
	tset_midpointmode$(EXEEXT) tset_points_and_print$(EXEEXT) \
	tset_points$(EXEEXT) tset_prec_and_print$(EXEEXT) \
	tset_prec$(EXEEXT) tset_rationalmode_and_print$(EXEEXT) \
	tset_rationalmode$(EXEEXT) \
	tset_roundingwarnings_and_print$(EXEEXT) \
	tset_roundingwarnings$(EXEEXT) \
	tset_showmessagenumbers_and_print$(EXEEXT) \
	tset_showmessagenumbers$(EXEEXT) \
	tset_taylorrecursions_and_print$(EXEEXT) \
	tset_taylorrecursions$(EXEEXT) tset_timing_and_print$(EXEEXT) \
	tset_timing$(EXEEXT) tset_verbosity_and_print$(EXEEXT) \
	tset_verbosity$(EXEEXT) tsimplify$(EXEEXT) tsin$(EXEEXT) \
	tsingle$(EXEEXT) tsingle_obj$(EXEEXT) tsinh$(EXEEXT) \
	tsort$(EXEEXT) tsqrt$(EXEEXT) tstring$(EXEEXT) \
	tstring_list_ops$(EXEEXT) tsub$(EXEEXT) tsup$(EXEEXT) \
	tsubpoly$(EXEEXT) tsubstitute$(EXEEXT) ttail$(EXEEXT) \
	ttan$(EXEEXT) ttanh$(EXEEXT) ttriple_double$(EXEEXT) \
	ttriple_double_obj$(EXEEXT) ttrue$(EXEEXT) \
	tv_build_end_elliptic_list$(EXEEXT) tv_build_list$(EXEEXT) \
	tv_decompose_function$(EXEEXT) tv_fpminimax$(EXEEXT) \
	tv_get_subfunctions$(EXEEXT) tv_implementpoly$(EXEEXT) \
	tv_max$(EXEEXT) tv_min$(EXEEXT) tv_remez$(EXEEXT) \
	tvoid$(EXEEXT)
am_force_compilation_OBJECTS =
force_compilation_OBJECTS = $(am_force_compilation_OBJECTS)
force_compilation_LDADD = $(LDADD)
force_compilation_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
tabs_SOURCES = tabs.c
tabs_OBJECTS = tabs.$(OBJEXT)
tabs_LDADD = $(LDADD)
tabs_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tabsolute_SOURCES = tabsolute.c
tabsolute_OBJECTS = tabsolute.$(OBJEXT)
tabsolute_LDADD = $(LDADD)
tabsolute_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tacos_SOURCES = tacos.c
tacos_OBJECTS = tacos.$(OBJEXT)
tacos_LDADD = $(LDADD)
tacos_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tacosh_SOURCES = tacosh.c
tacosh_OBJECTS = tacosh.$(OBJEXT)
tacosh_LDADD = $(LDADD)
tacosh_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tadd_SOURCES = tadd.c
tadd_OBJECTS = tadd.$(OBJEXT)
tadd_LDADD = $(LDADD)
tadd_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tand_SOURCES = tand.c
tand_OBJECTS = tand.$(OBJEXT)
tand_LDADD = $(LDADD)
tand_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tappend_SOURCES = tappend.c
tappend_OBJECTS = tappend.$(OBJEXT)
tappend_LDADD = $(LDADD)
tappend_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tasciiplot_SOURCES = tasciiplot.c
tasciiplot_OBJECTS = tasciiplot.$(OBJEXT)
tasciiplot_LDADD = $(LDADD)
tasciiplot_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tasin_SOURCES = tasin.c
tasin_OBJECTS = tasin.$(OBJEXT)
tasin_LDADD = $(LDADD)
tasin_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tasinh_SOURCES = tasinh.c
tasinh_OBJECTS = tasinh.$(OBJEXT)
tasinh_LDADD = $(LDADD)
tasinh_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tatan_SOURCES = tatan.c
tatan_OBJECTS = tatan.$(OBJEXT)
tatan_LDADD = $(LDADD)
tatan_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tatanh_SOURCES = tatanh.c
tatanh_OBJECTS = tatanh.$(OBJEXT)
tatanh_LDADD = $(LDADD)
tatanh_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbashexecute_SOURCES = tbashexecute.c
tbashexecute_OBJECTS = tbashexecute.$(OBJEXT)
tbashexecute_LDADD = $(LDADD)
tbashexecute_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbinary_SOURCES = tbinary.c
tbinary_OBJECTS = tbinary.$(OBJEXT)
tbinary_LDADD = $(LDADD)
tbinary_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tboolean_list_ops_SOURCES = tboolean_list_ops.c
tboolean_list_ops_OBJECTS = tboolean_list_ops.$(OBJEXT)
tboolean_list_ops_LDADD = $(LDADD)
tboolean_list_ops_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_end_elliptic_list_SOURCES = tbuild_end_elliptic_list.c
tbuild_end_elliptic_list_OBJECTS = tbuild_end_elliptic_list.$(OBJEXT)
tbuild_end_elliptic_list_LDADD = $(LDADD)
tbuild_end_elliptic_list_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_abs_SOURCES = tbuild_function_abs.c
tbuild_function_abs_OBJECTS = tbuild_function_abs.$(OBJEXT)
tbuild_function_abs_LDADD = $(LDADD)
tbuild_function_abs_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_acos_SOURCES = tbuild_function_acos.c
tbuild_function_acos_OBJECTS = tbuild_function_acos.$(OBJEXT)
tbuild_function_acos_LDADD = $(LDADD)
tbuild_function_acos_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_acosh_SOURCES = tbuild_function_acosh.c
tbuild_function_acosh_OBJECTS = tbuild_function_acosh.$(OBJEXT)
tbuild_function_acosh_LDADD = $(LDADD)
tbuild_function_acosh_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_add_SOURCES = tbuild_function_add.c
tbuild_function_add_OBJECTS = tbuild_function_add.$(OBJEXT)
tbuild_function_add_LDADD = $(LDADD)
tbuild_function_add_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_asin_SOURCES = tbuild_function_asin.c
tbuild_function_asin_OBJECTS = tbuild_function_asin.$(OBJEXT)
tbuild_function_asin_LDADD = $(LDADD)
tbuild_function_asin_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_asinh_SOURCES = tbuild_function_asinh.c
tbuild_function_asinh_OBJECTS = tbuild_function_asinh.$(OBJEXT)
tbuild_function_asinh_LDADD = $(LDADD)
tbuild_function_asinh_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_atan_SOURCES = tbuild_function_atan.c
tbuild_function_atan_OBJECTS = tbuild_function_atan.$(OBJEXT)
tbuild_function_atan_LDADD = $(LDADD)
tbuild_function_atan_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_atanh_SOURCES = tbuild_function_atanh.c
tbuild_function_atanh_OBJECTS = tbuild_function_atanh.$(OBJEXT)
tbuild_function_atanh_LDADD = $(LDADD)
tbuild_function_atanh_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_ceil_SOURCES = tbuild_function_ceil.c
tbuild_function_ceil_OBJECTS = tbuild_function_ceil.$(OBJEXT)
tbuild_function_ceil_LDADD = $(LDADD)
tbuild_function_ceil_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_cos_SOURCES = tbuild_function_cos.c
tbuild_function_cos_OBJECTS = tbuild_function_cos.$(OBJEXT)
tbuild_function_cos_LDADD = $(LDADD)
tbuild_function_cos_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_cosh_SOURCES = tbuild_function_cosh.c
tbuild_function_cosh_OBJECTS = tbuild_function_cosh.$(OBJEXT)
tbuild_function_cosh_LDADD = $(LDADD)
tbuild_function_cosh_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_div_SOURCES = tbuild_function_div.c
tbuild_function_div_OBJECTS = tbuild_function_div.$(OBJEXT)
tbuild_function_div_LDADD = $(LDADD)
tbuild_function_div_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_double_SOURCES = tbuild_function_double.c
tbuild_function_double_OBJECTS = tbuild_function_double.$(OBJEXT)
tbuild_function_double_LDADD = $(LDADD)
tbuild_function_double_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_double_double_SOURCES =  \
	tbuild_function_double_double.c
tbuild_function_double_double_OBJECTS =  \
	tbuild_function_double_double.$(OBJEXT)
tbuild_function_double_double_LDADD = $(LDADD)
tbuild_function_double_double_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_doubleextended_SOURCES =  \
	tbuild_function_doubleextended.c
tbuild_function_doubleextended_OBJECTS =  \
	tbuild_function_doubleextended.$(OBJEXT)
tbuild_function_doubleextended_LDADD = $(LDADD)
tbuild_function_doubleextended_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_erf_SOURCES = tbuild_function_erf.c
tbuild_function_erf_OBJECTS = tbuild_function_erf.$(OBJEXT)
tbuild_function_erf_LDADD = $(LDADD)
tbuild_function_erf_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_erfc_SOURCES = tbuild_function_erfc.c
tbuild_function_erfc_OBJECTS = tbuild_function_erfc.$(OBJEXT)
tbuild_function_erfc_LDADD = $(LDADD)
tbuild_function_erfc_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_exp_SOURCES = tbuild_function_exp.c
tbuild_function_exp_OBJECTS = tbuild_function_exp.$(OBJEXT)
tbuild_function_exp_LDADD = $(LDADD)
tbuild_function_exp_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_expm1_SOURCES = tbuild_function_expm1.c
tbuild_function_expm1_OBJECTS = tbuild_function_expm1.$(OBJEXT)
tbuild_function_expm1_LDADD = $(LDADD)
tbuild_function_expm1_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_floor_SOURCES = tbuild_function_floor.c
tbuild_function_floor_OBJECTS = tbuild_function_floor.$(OBJEXT)
tbuild_function_floor_LDADD = $(LDADD)
tbuild_function_floor_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_free_variable_SOURCES =  \
	tbuild_function_free_variable.c
tbuild_function_free_variable_OBJECTS =  \
	tbuild_function_free_variable.$(OBJEXT)
tbuild_function_free_variable_LDADD = $(LDADD)
tbuild_function_free_variable_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_halfprecision_SOURCES =  \
	tbuild_function_halfprecision.c
tbuild_function_halfprecision_OBJECTS =  \
	tbuild_function_halfprecision.$(OBJEXT)
tbuild_function_halfprecision_LDADD = $(LDADD)
tbuild_function_halfprecision_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_libraryconstant_SOURCES =  \
	tbuild_function_libraryconstant.c
tbuild_function_libraryconstant_OBJECTS =  \
	tbuild_function_libraryconstant.$(OBJEXT)
tbuild_function_libraryconstant_LDADD = $(LDADD)
tbuild_function_libraryconstant_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_libraryfunction_SOURCES =  \
	tbuild_function_libraryfunction.c
tbuild_function_libraryfunction_OBJECTS =  \
	tbuild_function_libraryfunction.$(OBJEXT)
tbuild_function_libraryfunction_LDADD = $(LDADD)
tbuild_function_libraryfunction_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_log_SOURCES = tbuild_function_log.c
tbuild_function_log_OBJECTS = tbuild_function_log.$(OBJEXT)
tbuild_function_log_LDADD = $(LDADD)
tbuild_function_log_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_log10_SOURCES = tbuild_function_log10.c
tbuild_function_log10_OBJECTS = tbuild_function_log10.$(OBJEXT)
tbuild_function_log10_LDADD = $(LDADD)
tbuild_function_log10_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_log1p_SOURCES = tbuild_function_log1p.c
tbuild_function_log1p_OBJECTS = tbuild_function_log1p.$(OBJEXT)
tbuild_function_log1p_LDADD = $(LDADD)
tbuild_function_log1p_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_log2_SOURCES = tbuild_function_log2.c
tbuild_function_log2_OBJECTS = tbuild_function_log2.$(OBJEXT)
tbuild_function_log2_LDADD = $(LDADD)
tbuild_function_log2_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_mul_SOURCES = tbuild_function_mul.c
tbuild_function_mul_OBJECTS = tbuild_function_mul.$(OBJEXT)
tbuild_function_mul_LDADD = $(LDADD)
tbuild_function_mul_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_nearestint_SOURCES = tbuild_function_nearestint.c
tbuild_function_nearestint_OBJECTS =  \
	tbuild_function_nearestint.$(OBJEXT)
tbuild_function_nearestint_LDADD = $(LDADD)
tbuild_function_nearestint_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_neg_SOURCES = tbuild_function_neg.c
tbuild_function_neg_OBJECTS = tbuild_function_neg.$(OBJEXT)
tbuild_function_neg_LDADD = $(LDADD)
tbuild_function_neg_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_pi_SOURCES = tbuild_function_pi.c
tbuild_function_pi_OBJECTS = tbuild_function_pi.$(OBJEXT)
tbuild_function_pi_LDADD = $(LDADD)
tbuild_function_pi_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_pow_SOURCES = tbuild_function_pow.c
tbuild_function_pow_OBJECTS = tbuild_function_pow.$(OBJEXT)
tbuild_function_pow_LDADD = $(LDADD)
tbuild_function_pow_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_procedurefunction_SOURCES =  \
	tbuild_function_procedurefunction.c
tbuild_function_procedurefunction_OBJECTS =  \
	tbuild_function_procedurefunction.$(OBJEXT)
tbuild_function_procedurefunction_LDADD = $(LDADD)
tbuild_function_procedurefunction_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_quad_SOURCES = tbuild_function_quad.c
tbuild_function_quad_OBJECTS = tbuild_function_quad.$(OBJEXT)
tbuild_function_quad_LDADD = $(LDADD)
tbuild_function_quad_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_sin_SOURCES = tbuild_function_sin.c
tbuild_function_sin_OBJECTS = tbuild_function_sin.$(OBJEXT)
tbuild_function_sin_LDADD = $(LDADD)
tbuild_function_sin_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_single_SOURCES = tbuild_function_single.c
tbuild_function_single_OBJECTS = tbuild_function_single.$(OBJEXT)
tbuild_function_single_LDADD = $(LDADD)
tbuild_function_single_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_sinh_SOURCES = tbuild_function_sinh.c
tbuild_function_sinh_OBJECTS = tbuild_function_sinh.$(OBJEXT)
tbuild_function_sinh_LDADD = $(LDADD)
tbuild_function_sinh_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_sqrt_SOURCES = tbuild_function_sqrt.c
tbuild_function_sqrt_OBJECTS = tbuild_function_sqrt.$(OBJEXT)
tbuild_function_sqrt_LDADD = $(LDADD)
tbuild_function_sqrt_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_sub_SOURCES = tbuild_function_sub.c
tbuild_function_sub_OBJECTS = tbuild_function_sub.$(OBJEXT)
tbuild_function_sub_LDADD = $(LDADD)
tbuild_function_sub_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_tan_SOURCES = tbuild_function_tan.c
tbuild_function_tan_OBJECTS = tbuild_function_tan.$(OBJEXT)
tbuild_function_tan_LDADD = $(LDADD)
tbuild_function_tan_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tbuild_function_tanh_SOURCES = tbuild_function_tanh.c
tbuild_function_tanh_OBJECTS = tbuild_function_tanh.$(OBJEXT)
tbuild_function_tanh_LDADD = $(LDADD)
tbuild_function_tanh_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_function_triple_double_SOURCES =  \
	tbuild_function_triple_double.c
tbuild_function_triple_double_OBJECTS =  \
	tbuild_function_triple_double.$(OBJEXT)
tbuild_function_triple_double_LDADD = $(LDADD)
tbuild_function_triple_double_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tbuild_list_SOURCES = tbuild_list.c
tbuild_list_OBJECTS = tbuild_list.$(OBJEXT)
tbuild_list_LDADD = $(LDADD)
tbuild_list_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcanonical_SOURCES = tcanonical.c
tcanonical_OBJECTS = tcanonical.$(OBJEXT)
tcanonical_LDADD = $(LDADD)
tcanonical_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tceil_SOURCES = tceil.c
tceil_OBJECTS = tceil.$(OBJEXT)
tceil_LDADD = $(LDADD)
tceil_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcheckinfnorm_SOURCES = tcheckinfnorm.c
tcheckinfnorm_OBJECTS = tcheckinfnorm.$(OBJEXT)
tcheckinfnorm_LDADD = $(LDADD)
tcheckinfnorm_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcmp_equal_SOURCES = tcmp_equal.c
tcmp_equal_OBJECTS = tcmp_equal.$(OBJEXT)
tcmp_equal_LDADD = $(LDADD)
tcmp_equal_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcmp_greater_SOURCES = tcmp_greater.c
tcmp_greater_OBJECTS = tcmp_greater.$(OBJEXT)
tcmp_greater_LDADD = $(LDADD)
tcmp_greater_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcmp_greater_equal_SOURCES = tcmp_greater_equal.c
tcmp_greater_equal_OBJECTS = tcmp_greater_equal.$(OBJEXT)
tcmp_greater_equal_LDADD = $(LDADD)
tcmp_greater_equal_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcmp_in_SOURCES = tcmp_in.c
tcmp_in_OBJECTS = tcmp_in.$(OBJEXT)
tcmp_in_LDADD = $(LDADD)
tcmp_in_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcmp_less_SOURCES = tcmp_less.c
tcmp_less_OBJECTS = tcmp_less.$(OBJEXT)
tcmp_less_LDADD = $(LDADD)
tcmp_less_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcmp_less_equal_SOURCES = tcmp_less_equal.c
tcmp_less_equal_OBJECTS = tcmp_less_equal.$(OBJEXT)
tcmp_less_equal_LDADD = $(LDADD)
tcmp_less_equal_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcmp_not_equal_SOURCES = tcmp_not_equal.c
tcmp_not_equal_OBJECTS = tcmp_not_equal.$(OBJEXT)
tcmp_not_equal_LDADD = $(LDADD)
tcmp_not_equal_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcmp_objs_structurally_SOURCES = tcmp_objs_structurally.c
tcmp_objs_structurally_OBJECTS = tcmp_objs_structurally.$(OBJEXT)
tcmp_objs_structurally_LDADD = $(LDADD)
tcmp_objs_structurally_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tcoeff_SOURCES = tcoeff.c
tcoeff_OBJECTS = tcoeff.$(OBJEXT)
tcoeff_LDADD = $(LDADD)
tcoeff_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tconcat_SOURCES = tconcat.c
tconcat_OBJECTS = tconcat.$(OBJEXT)
tconcat_LDADD = $(LDADD)
tconcat_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tconstant_SOURCES = tconstant.c
tconstant_OBJECTS = tconstant.$(OBJEXT)
tconstant_LDADD = $(LDADD)
tconstant_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tconstant_from_double_SOURCES = tconstant_from_double.c
tconstant_from_double_OBJECTS = tconstant_from_double.$(OBJEXT)
tconstant_from_double_LDADD = $(LDADD)
tconstant_from_double_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tconstant_from_int_SOURCES = tconstant_from_int.c
tconstant_from_int_OBJECTS = tconstant_from_int.$(OBJEXT)
tconstant_from_int_LDADD = $(LDADD)
tconstant_from_int_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tconstant_from_int64_SOURCES = tconstant_from_int64.c
tconstant_from_int64_OBJECTS = tconstant_from_int64.$(OBJEXT)
tconstant_from_int64_LDADD = $(LDADD)
tconstant_from_int64_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tconstant_from_mpq_SOURCES = tconstant_from_mpq.c
tconstant_from_mpq_OBJECTS = tconstant_from_mpq.$(OBJEXT)
tconstant_from_mpq_LDADD = $(LDADD)
tconstant_from_mpq_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tconstant_from_mpz_SOURCES = tconstant_from_mpz.c
tconstant_from_mpz_OBJECTS = tconstant_from_mpz.$(OBJEXT)
tconstant_from_mpz_LDADD = $(LDADD)
tconstant_from_mpz_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tconstant_from_uint64_SOURCES = tconstant_from_uint64.c
tconstant_from_uint64_OBJECTS = tconstant_from_uint64.$(OBJEXT)
tconstant_from_uint64_LDADD = $(LDADD)
tconstant_from_uint64_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tconstant_list_ops_SOURCES = tconstant_list_ops.c
tconstant_list_ops_OBJECTS = tconstant_list_ops.$(OBJEXT)
tconstant_list_ops_LDADD = $(LDADD)
tconstant_list_ops_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcopy_obj_SOURCES = tcopy_obj.c
tcopy_obj_OBJECTS = tcopy_obj.$(OBJEXT)
tcopy_obj_LDADD = $(LDADD)
tcopy_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcos_SOURCES = tcos.c
tcos_OBJECTS = tcos.$(OBJEXT)
tcos_LDADD = $(LDADD)
tcos_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcosh_SOURCES = tcosh.c
tcosh_OBJECTS = tcosh.$(OBJEXT)
tcosh_LDADD = $(LDADD)
tcosh_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tcreate_structure_SOURCES = tcreate_structure.c
tcreate_structure_OBJECTS = tcreate_structure.$(OBJEXT)
tcreate_structure_LDADD = $(LDADD)
tcreate_structure_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdecimal_SOURCES = tdecimal.c
tdecimal_OBJECTS = tdecimal.$(OBJEXT)
tdecimal_LDADD = $(LDADD)
tdecimal_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdecompose_function_SOURCES = tdecompose_function.c
tdecompose_function_OBJECTS = tdecompose_function.$(OBJEXT)
tdecompose_function_LDADD = $(LDADD)
tdecompose_function_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdecompose_libraryconstant_SOURCES = tdecompose_libraryconstant.c
tdecompose_libraryconstant_OBJECTS =  \
	tdecompose_libraryconstant.$(OBJEXT)
tdecompose_libraryconstant_LDADD = $(LDADD)
tdecompose_libraryconstant_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tdecompose_libraryfunction_SOURCES = tdecompose_libraryfunction.c
tdecompose_libraryfunction_OBJECTS =  \
	tdecompose_libraryfunction.$(OBJEXT)
tdecompose_libraryfunction_LDADD = $(LDADD)
tdecompose_libraryfunction_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tdecompose_procedurefunction_SOURCES = tdecompose_procedurefunction.c
tdecompose_procedurefunction_OBJECTS =  \
	tdecompose_procedurefunction.$(OBJEXT)
tdecompose_procedurefunction_LDADD = $(LDADD)
tdecompose_procedurefunction_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tdefault_SOURCES = tdefault.c
tdefault_OBJECTS = tdefault.$(OBJEXT)
tdefault_LDADD = $(LDADD)
tdefault_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdegree_SOURCES = tdegree.c
tdegree_OBJECTS = tdegree.$(OBJEXT)
tdegree_LDADD = $(LDADD)
tdegree_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdenominator_SOURCES = tdenominator.c
tdenominator_OBJECTS = tdenominator.$(OBJEXT)
tdenominator_LDADD = $(LDADD)
tdenominator_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdiff_SOURCES = tdiff.c
tdiff_OBJECTS = tdiff.$(OBJEXT)
tdiff_LDADD = $(LDADD)
tdiff_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdirtyinfnorm_SOURCES = tdirtyinfnorm.c
tdirtyinfnorm_OBJECTS = tdirtyinfnorm.$(OBJEXT)
tdirtyinfnorm_LDADD = $(LDADD)
tdirtyinfnorm_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdirtyintegral_SOURCES = tdirtyintegral.c
tdirtyintegral_OBJECTS = tdirtyintegral.$(OBJEXT)
tdirtyintegral_LDADD = $(LDADD)
tdirtyintegral_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdirtysimplify_SOURCES = tdirtysimplify.c
tdirtysimplify_OBJECTS = tdirtysimplify.$(OBJEXT)
tdirtysimplify_LDADD = $(LDADD)
tdirtysimplify_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdiv_SOURCES = tdiv.c
tdiv_OBJECTS = tdiv.$(OBJEXT)
tdiv_LDADD = $(LDADD)
tdiv_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdouble_SOURCES = tdouble.c
tdouble_OBJECTS = tdouble.$(OBJEXT)
tdouble_LDADD = $(LDADD)
tdouble_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdouble_double_SOURCES = tdouble_double.c
tdouble_double_OBJECTS = tdouble_double.$(OBJEXT)
tdouble_double_LDADD = $(LDADD)
tdouble_double_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdouble_double_obj_SOURCES = tdouble_double_obj.c
tdouble_double_obj_OBJECTS = tdouble_double_obj.$(OBJEXT)
tdouble_double_obj_LDADD = $(LDADD)
tdouble_double_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdouble_obj_SOURCES = tdouble_obj.c
tdouble_obj_OBJECTS = tdouble_obj.$(OBJEXT)
tdouble_obj_LDADD = $(LDADD)
tdouble_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdoubleextended_SOURCES = tdoubleextended.c
tdoubleextended_OBJECTS = tdoubleextended.$(OBJEXT)
tdoubleextended_LDADD = $(LDADD)
tdoubleextended_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdoubleextended_obj_SOURCES = tdoubleextended_obj.c
tdoubleextended_obj_OBJECTS = tdoubleextended_obj.$(OBJEXT)
tdoubleextended_obj_LDADD = $(LDADD)
tdoubleextended_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tdyadic_SOURCES = tdyadic.c
tdyadic_OBJECTS = tdyadic.$(OBJEXT)
tdyadic_LDADD = $(LDADD)
tdyadic_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tend_elliptic_list_SOURCES = tend_elliptic_list.c
tend_elliptic_list_OBJECTS = tend_elliptic_list.$(OBJEXT)
tend_elliptic_list_LDADD = $(LDADD)
tend_elliptic_list_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
terf_SOURCES = terf.c
terf_OBJECTS = terf.$(OBJEXT)
terf_LDADD = $(LDADD)
terf_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
terfc_SOURCES = terfc.c
terfc_OBJECTS = terfc.$(OBJEXT)
terfc_LDADD = $(LDADD)
terfc_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
terror_SOURCES = terror.c
terror_OBJECTS = terror.$(OBJEXT)
terror_LDADD = $(LDADD)
terror_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tevaluate_function_at_constant_expression_SOURCES =  \
	tevaluate_function_at_constant_expression.c
tevaluate_function_at_constant_expression_OBJECTS =  \
	tevaluate_function_at_constant_expression.$(OBJEXT)
tevaluate_function_at_constant_expression_LDADD = $(LDADD)
tevaluate_function_at_constant_expression_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tevaluate_function_at_point_SOURCES = tevaluate_function_at_point.c
tevaluate_function_at_point_OBJECTS =  \
	tevaluate_function_at_point.$(OBJEXT)
tevaluate_function_at_point_LDADD = $(LDADD)
tevaluate_function_at_point_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
texp_SOURCES = texp.c
texp_OBJECTS = texp.$(OBJEXT)
texp_LDADD = $(LDADD)
texp_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
texpand_SOURCES = texpand.c
texpand_OBJECTS = texpand.$(OBJEXT)
texpand_LDADD = $(LDADD)
texpand_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
texpm1_SOURCES = texpm1.c
texpm1_OBJECTS = texpm1.$(OBJEXT)
texpm1_LDADD = $(LDADD)
texpm1_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tfalse_SOURCES = tfalse.c
tfalse_OBJECTS = tfalse.$(OBJEXT)
tfalse_LDADD = $(LDADD)
tfalse_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tfile_SOURCES = tfile.c
tfile_OBJECTS = tfile.$(OBJEXT)
tfile_LDADD = $(LDADD)
tfile_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tfixed_SOURCES = tfixed.c
tfixed_OBJECTS = tfixed.$(OBJEXT)
tfixed_LDADD = $(LDADD)
tfixed_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tfloating_SOURCES = tfloating.c
tfloating_OBJECTS = tfloating.$(OBJEXT)
tfloating_LDADD = $(LDADD)
tfloating_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tfloor_SOURCES = tfloor.c
tfloor_OBJECTS = tfloor.$(OBJEXT)
tfloor_LDADD = $(LDADD)
tfloor_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tfpminimax_SOURCES = tfpminimax.c
tfpminimax_OBJECTS = tfpminimax.$(OBJEXT)
tfpminimax_LDADD = $(LDADD)
tfpminimax_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tfree_variable_SOURCES = tfree_variable.c
tfree_variable_OBJECTS = tfree_variable.$(OBJEXT)
tfree_variable_LDADD = $(LDADD)
tfree_variable_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_autosimplify_SOURCES = tget_autosimplify.c
tget_autosimplify_OBJECTS = tget_autosimplify.$(OBJEXT)
tget_autosimplify_LDADD = $(LDADD)
tget_autosimplify_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_bounds_from_range_SOURCES = tget_bounds_from_range.c
tget_bounds_from_range_OBJECTS = tget_bounds_from_range.$(OBJEXT)
tget_bounds_from_range_LDADD = $(LDADD)
tget_bounds_from_range_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_canonical_SOURCES = tget_canonical.c
tget_canonical_OBJECTS = tget_canonical.$(OBJEXT)
tget_canonical_LDADD = $(LDADD)
tget_canonical_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_constant_as_double_SOURCES = tget_constant_as_double.c
tget_constant_as_double_OBJECTS = tget_constant_as_double.$(OBJEXT)
tget_constant_as_double_LDADD = $(LDADD)
tget_constant_as_double_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_constant_as_int_SOURCES = tget_constant_as_int.c
tget_constant_as_int_OBJECTS = tget_constant_as_int.$(OBJEXT)
tget_constant_as_int_LDADD = $(LDADD)
tget_constant_as_int_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_constant_as_int64_SOURCES = tget_constant_as_int64.c
tget_constant_as_int64_OBJECTS = tget_constant_as_int64.$(OBJEXT)
tget_constant_as_int64_LDADD = $(LDADD)
tget_constant_as_int64_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_constant_as_mpq_SOURCES = tget_constant_as_mpq.c
tget_constant_as_mpq_OBJECTS = tget_constant_as_mpq.$(OBJEXT)
tget_constant_as_mpq_LDADD = $(LDADD)
tget_constant_as_mpq_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_constant_as_mpz_SOURCES = tget_constant_as_mpz.c
tget_constant_as_mpz_OBJECTS = tget_constant_as_mpz.$(OBJEXT)
tget_constant_as_mpz_LDADD = $(LDADD)
tget_constant_as_mpz_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_constant_as_uint64_SOURCES = tget_constant_as_uint64.c
tget_constant_as_uint64_OBJECTS = tget_constant_as_uint64.$(OBJEXT)
tget_constant_as_uint64_LDADD = $(LDADD)
tget_constant_as_uint64_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_diam_SOURCES = tget_diam.c
tget_diam_OBJECTS = tget_diam.$(OBJEXT)
tget_diam_LDADD = $(LDADD)
tget_diam_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_dieonerrormode_SOURCES = tget_dieonerrormode.c
tget_dieonerrormode_OBJECTS = tget_dieonerrormode.$(OBJEXT)
tget_dieonerrormode_LDADD = $(LDADD)
tget_dieonerrormode_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_display_SOURCES = tget_display.c
tget_display_OBJECTS = tget_display.$(OBJEXT)
tget_display_LDADD = $(LDADD)
tget_display_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_element_in_list_SOURCES = tget_element_in_list.c
tget_element_in_list_OBJECTS = tget_element_in_list.$(OBJEXT)
tget_element_in_list_LDADD = $(LDADD)
tget_element_in_list_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_element_in_structure_SOURCES = tget_element_in_structure.c
tget_element_in_structure_OBJECTS =  \
	tget_element_in_structure.$(OBJEXT)
tget_element_in_structure_LDADD = $(LDADD)
tget_element_in_structure_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_free_variable_name_SOURCES = tget_free_variable_name.c
tget_free_variable_name_OBJECTS = tget_free_variable_name.$(OBJEXT)
tget_free_variable_name_LDADD = $(LDADD)
tget_free_variable_name_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_function_arity_SOURCES = tget_function_arity.c
tget_function_arity_OBJECTS = tget_function_arity.$(OBJEXT)
tget_function_arity_LDADD = $(LDADD)
tget_function_arity_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_head_function_SOURCES = tget_head_function.c
tget_head_function_OBJECTS = tget_head_function.$(OBJEXT)
tget_head_function_LDADD = $(LDADD)
tget_head_function_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_hopitalrecursions_SOURCES = tget_hopitalrecursions.c
tget_hopitalrecursions_OBJECTS = tget_hopitalrecursions.$(OBJEXT)
tget_hopitalrecursions_LDADD = $(LDADD)
tget_hopitalrecursions_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_interval_from_range_SOURCES = tget_interval_from_range.c
tget_interval_from_range_OBJECTS = tget_interval_from_range.$(OBJEXT)
tget_interval_from_range_LDADD = $(LDADD)
tget_interval_from_range_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_list_elements_SOURCES = tget_list_elements.c
tget_list_elements_OBJECTS = tget_list_elements.$(OBJEXT)
tget_list_elements_LDADD = $(LDADD)
tget_list_elements_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_midpointmode_SOURCES = tget_midpointmode.c
tget_midpointmode_OBJECTS = tget_midpointmode.$(OBJEXT)
tget_midpointmode_LDADD = $(LDADD)
tget_midpointmode_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_points_SOURCES = tget_points.c
tget_points_OBJECTS = tget_points.$(OBJEXT)
tget_points_LDADD = $(LDADD)
tget_points_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_prec_SOURCES = tget_prec.c
tget_prec_OBJECTS = tget_prec.$(OBJEXT)
tget_prec_LDADD = $(LDADD)
tget_prec_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_rationalmode_SOURCES = tget_rationalmode.c
tget_rationalmode_OBJECTS = tget_rationalmode.$(OBJEXT)
tget_rationalmode_LDADD = $(LDADD)
tget_rationalmode_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_roundingwarnings_SOURCES = tget_roundingwarnings.c
tget_roundingwarnings_OBJECTS = tget_roundingwarnings.$(OBJEXT)
tget_roundingwarnings_LDADD = $(LDADD)
tget_roundingwarnings_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_showmessagenumbers_SOURCES = tget_showmessagenumbers.c
tget_showmessagenumbers_OBJECTS = tget_showmessagenumbers.$(OBJEXT)
tget_showmessagenumbers_LDADD = $(LDADD)
tget_showmessagenumbers_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_string_SOURCES = tget_string.c
tget_string_OBJECTS = tget_string.$(OBJEXT)
tget_string_LDADD = $(LDADD)
tget_string_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_structure_elements_SOURCES = tget_structure_elements.c
tget_structure_elements_OBJECTS = tget_structure_elements.$(OBJEXT)
tget_structure_elements_LDADD = $(LDADD)
tget_structure_elements_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_subfunctions_SOURCES = tget_subfunctions.c
tget_subfunctions_OBJECTS = tget_subfunctions.$(OBJEXT)
tget_subfunctions_LDADD = $(LDADD)
tget_subfunctions_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_taylorrecursions_SOURCES = tget_taylorrecursions.c
tget_taylorrecursions_OBJECTS = tget_taylorrecursions.$(OBJEXT)
tget_taylorrecursions_LDADD = $(LDADD)
tget_taylorrecursions_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tget_timing_SOURCES = tget_timing.c
tget_timing_OBJECTS = tget_timing.$(OBJEXT)
tget_timing_LDADD = $(LDADD)
tget_timing_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tget_verbosity_SOURCES = tget_verbosity.c
tget_verbosity_OBJECTS = tget_verbosity.$(OBJEXT)
tget_verbosity_LDADD = $(LDADD)
tget_verbosity_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
thalfprecision_SOURCES = thalfprecision.c
thalfprecision_OBJECTS = thalfprecision.$(OBJEXT)
thalfprecision_LDADD = $(LDADD)
thalfprecision_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
thalfprecision_obj_SOURCES = thalfprecision_obj.c
thalfprecision_obj_OBJECTS = thalfprecision_obj.$(OBJEXT)
thalfprecision_obj_LDADD = $(LDADD)
thalfprecision_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
thead_SOURCES = thead.c
thead_OBJECTS = thead.$(OBJEXT)
thead_LDADD = $(LDADD)
thead_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
thexadecimal_SOURCES = thexadecimal.c
thexadecimal_OBJECTS = thexadecimal.$(OBJEXT)
thexadecimal_LDADD = $(LDADD)
thexadecimal_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
thonorcoeffprec_SOURCES = thonorcoeffprec.c
thonorcoeffprec_OBJECTS = thonorcoeffprec.$(OBJEXT)
thonorcoeffprec_LDADD = $(LDADD)
thonorcoeffprec_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
thorner_SOURCES = thorner.c
thorner_OBJECTS = thorner.$(OBJEXT)
thorner_LDADD = $(LDADD)
thorner_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
timplementpoly_SOURCES = timplementpoly.c
timplementpoly_OBJECTS = timplementpoly.$(OBJEXT)
timplementpoly_LDADD = $(LDADD)
timplementpoly_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tinf_SOURCES = tinf.c
tinf_OBJECTS = tinf.$(OBJEXT)
tinf_LDADD = $(LDADD)
tinf_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tinit_with_custom_memory_functions_SOURCES =  \
	tinit_with_custom_memory_functions.c
tinit_with_custom_memory_functions_OBJECTS =  \
	tinit_with_custom_memory_functions.$(OBJEXT)
tinit_with_custom_memory_functions_LDADD = $(LDADD)
tinit_with_custom_memory_functions_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tint_list_ops_SOURCES = tint_list_ops.c
tint_list_ops_OBJECTS = tint_list_ops.$(OBJEXT)
tint_list_ops_LDADD = $(LDADD)
tint_list_ops_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tintegral_SOURCES = tintegral.c
tintegral_OBJECTS = tintegral.$(OBJEXT)
tintegral_LDADD = $(LDADD)
tintegral_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tinterval_list_ops_SOURCES = tinterval_list_ops.c
tinterval_list_ops_OBJECTS = tinterval_list_ops.$(OBJEXT)
tinterval_list_ops_LDADD = $(LDADD)
tinterval_list_ops_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_absolute_SOURCES = tis_absolute.c
tis_absolute_OBJECTS = tis_absolute.$(OBJEXT)
tis_absolute_LDADD = $(LDADD)
tis_absolute_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_binary_SOURCES = tis_binary.c
tis_binary_OBJECTS = tis_binary.$(OBJEXT)
tis_binary_LDADD = $(LDADD)
tis_binary_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_decimal_SOURCES = tis_decimal.c
tis_decimal_OBJECTS = tis_decimal.$(OBJEXT)
tis_decimal_LDADD = $(LDADD)
tis_decimal_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_default_SOURCES = tis_default.c
tis_default_OBJECTS = tis_default.$(OBJEXT)
tis_default_LDADD = $(LDADD)
tis_default_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_double_double_obj_SOURCES = tis_double_double_obj.c
tis_double_double_obj_OBJECTS = tis_double_double_obj.$(OBJEXT)
tis_double_double_obj_LDADD = $(LDADD)
tis_double_double_obj_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tis_double_obj_SOURCES = tis_double_obj.c
tis_double_obj_OBJECTS = tis_double_obj.$(OBJEXT)
tis_double_obj_LDADD = $(LDADD)
tis_double_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_doubleextended_obj_SOURCES = tis_doubleextended_obj.c
tis_doubleextended_obj_OBJECTS = tis_doubleextended_obj.$(OBJEXT)
tis_doubleextended_obj_LDADD = $(LDADD)
tis_doubleextended_obj_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tis_dyadic_SOURCES = tis_dyadic.c
tis_dyadic_OBJECTS = tis_dyadic.$(OBJEXT)
tis_dyadic_LDADD = $(LDADD)
tis_dyadic_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_false_SOURCES = tis_false.c
tis_false_OBJECTS = tis_false.$(OBJEXT)
tis_false_LDADD = $(LDADD)
tis_false_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_file_SOURCES = tis_file.c
tis_file_OBJECTS = tis_file.$(OBJEXT)
tis_file_LDADD = $(LDADD)
tis_file_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_fixed_SOURCES = tis_fixed.c
tis_fixed_OBJECTS = tis_fixed.$(OBJEXT)
tis_fixed_LDADD = $(LDADD)
tis_fixed_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_floating_SOURCES = tis_floating.c
tis_floating_OBJECTS = tis_floating.$(OBJEXT)
tis_floating_LDADD = $(LDADD)
tis_floating_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_halfprecision_obj_SOURCES = tis_halfprecision_obj.c
tis_halfprecision_obj_OBJECTS = tis_halfprecision_obj.$(OBJEXT)
tis_halfprecision_obj_LDADD = $(LDADD)
tis_halfprecision_obj_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tis_hexadecimal_SOURCES = tis_hexadecimal.c
tis_hexadecimal_OBJECTS = tis_hexadecimal.$(OBJEXT)
tis_hexadecimal_LDADD = $(LDADD)
tis_hexadecimal_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_honorcoeffprec_SOURCES = tis_honorcoeffprec.c
tis_honorcoeffprec_OBJECTS = tis_honorcoeffprec.$(OBJEXT)
tis_honorcoeffprec_LDADD = $(LDADD)
tis_honorcoeffprec_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_off_SOURCES = tis_off.c
tis_off_OBJECTS = tis_off.$(OBJEXT)
tis_off_LDADD = $(LDADD)
tis_off_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_on_SOURCES = tis_on.c
tis_on_OBJECTS = tis_on.$(OBJEXT)
tis_on_LDADD = $(LDADD)
tis_on_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_perturb_SOURCES = tis_perturb.c
tis_perturb_OBJECTS = tis_perturb.$(OBJEXT)
tis_perturb_LDADD = $(LDADD)
tis_perturb_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_pi_SOURCES = tis_pi.c
tis_pi_OBJECTS = tis_pi.$(OBJEXT)
tis_pi_LDADD = $(LDADD)
tis_pi_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_postscript_SOURCES = tis_postscript.c
tis_postscript_OBJECTS = tis_postscript.$(OBJEXT)
tis_postscript_LDADD = $(LDADD)
tis_postscript_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_postscriptfile_SOURCES = tis_postscriptfile.c
tis_postscriptfile_OBJECTS = tis_postscriptfile.$(OBJEXT)
tis_postscriptfile_LDADD = $(LDADD)
tis_postscriptfile_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_powers_SOURCES = tis_powers.c
tis_powers_OBJECTS = tis_powers.$(OBJEXT)
tis_powers_LDADD = $(LDADD)
tis_powers_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_quad_obj_SOURCES = tis_quad_obj.c
tis_quad_obj_OBJECTS = tis_quad_obj.$(OBJEXT)
tis_quad_obj_LDADD = $(LDADD)
tis_quad_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_relative_SOURCES = tis_relative.c
tis_relative_OBJECTS = tis_relative.$(OBJEXT)
tis_relative_LDADD = $(LDADD)
tis_relative_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_round_down_SOURCES = tis_round_down.c
tis_round_down_OBJECTS = tis_round_down.$(OBJEXT)
tis_round_down_LDADD = $(LDADD)
tis_round_down_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_round_to_nearest_SOURCES = tis_round_to_nearest.c
tis_round_to_nearest_OBJECTS = tis_round_to_nearest.$(OBJEXT)
tis_round_to_nearest_LDADD = $(LDADD)
tis_round_to_nearest_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tis_round_towards_zero_SOURCES = tis_round_towards_zero.c
tis_round_towards_zero_OBJECTS = tis_round_towards_zero.$(OBJEXT)
tis_round_towards_zero_LDADD = $(LDADD)
tis_round_towards_zero_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tis_round_up_SOURCES = tis_round_up.c
tis_round_up_OBJECTS = tis_round_up.$(OBJEXT)
tis_round_up_LDADD = $(LDADD)
tis_round_up_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_single_obj_SOURCES = tis_single_obj.c
tis_single_obj_OBJECTS = tis_single_obj.$(OBJEXT)
tis_single_obj_LDADD = $(LDADD)
tis_single_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_triple_double_obj_SOURCES = tis_triple_double_obj.c
tis_triple_double_obj_OBJECTS = tis_triple_double_obj.$(OBJEXT)
tis_triple_double_obj_LDADD = $(LDADD)
tis_triple_double_obj_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tis_true_SOURCES = tis_true.c
tis_true_OBJECTS = tis_true.$(OBJEXT)
tis_true_LDADD = $(LDADD)
tis_true_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tis_void_SOURCES = tis_void.c
tis_void_OBJECTS = tis_void.$(OBJEXT)
tis_void_LDADD = $(LDADD)
tis_void_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tlength_SOURCES = tlength.c
tlength_OBJECTS = tlength.$(OBJEXT)
tlength_LDADD = $(LDADD)
tlength_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tlibraryconstant_SOURCES = tlibraryconstant.c
tlibraryconstant_OBJECTS = tlibraryconstant.$(OBJEXT)
tlibraryconstant_LDADD = $(LDADD)
tlibraryconstant_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tlibraryfunction_SOURCES = tlibraryfunction.c
tlibraryfunction_OBJECTS = tlibraryfunction.$(OBJEXT)
tlibraryfunction_LDADD = $(LDADD)
tlibraryfunction_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tlist_SOURCES = tlist.c
tlist_OBJECTS = tlist.$(OBJEXT)
tlist_LDADD = $(LDADD)
tlist_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tlog_SOURCES = tlog.c
tlog_OBJECTS = tlog.$(OBJEXT)
tlog_LDADD = $(LDADD)
tlog_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tlog10_SOURCES = tlog10.c
tlog10_OBJECTS = tlog10.$(OBJEXT)
tlog10_LDADD = $(LDADD)
tlog10_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tlog1p_SOURCES = tlog1p.c
tlog1p_OBJECTS = tlog1p.$(OBJEXT)
tlog1p_LDADD = $(LDADD)
tlog1p_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tlog2_SOURCES = tlog2.c
tlog2_OBJECTS = tlog2.$(OBJEXT)
tlog2_LDADD = $(LDADD)
tlog2_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tmacros_build_function_SOURCES = tmacros_build_function.c
tmacros_build_function_OBJECTS = tmacros_build_function.$(OBJEXT)
tmacros_build_function_LDADD = $(LDADD)
tmacros_build_function_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tmantissa_and_exponent_SOURCES = tmantissa_and_exponent.c
tmantissa_and_exponent_OBJECTS = tmantissa_and_exponent.$(OBJEXT)
tmantissa_and_exponent_LDADD = $(LDADD)
tmantissa_and_exponent_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tmax_SOURCES = tmax.c
tmax_OBJECTS = tmax.$(OBJEXT)
tmax_LDADD = $(LDADD)
tmax_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tmid_SOURCES = tmid.c
tmid_OBJECTS = tmid.$(OBJEXT)
tmid_LDADD = $(LDADD)
tmid_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tmin_SOURCES = tmin.c
tmin_OBJECTS = tmin.$(OBJEXT)
tmin_LDADD = $(LDADD)
tmin_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tmsg_callback_functions_SOURCES = tmsg_callback_functions.c
tmsg_callback_functions_OBJECTS = tmsg_callback_functions.$(OBJEXT)
tmsg_callback_functions_LDADD = $(LDADD)
tmsg_callback_functions_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tmul_SOURCES = tmul.c
tmul_OBJECTS = tmul.$(OBJEXT)
tmul_LDADD = $(LDADD)
tmul_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tname_free_variable_SOURCES = tname_free_variable.c
tname_free_variable_OBJECTS = tname_free_variable.$(OBJEXT)
tname_free_variable_LDADD = $(LDADD)
tname_free_variable_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tnearestint_SOURCES = tnearestint.c
tnearestint_OBJECTS = tnearestint.$(OBJEXT)
tnearestint_LDADD = $(LDADD)
tnearestint_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tneg_SOURCES = tneg.c
tneg_OBJECTS = tneg.$(OBJEXT)
tneg_LDADD = $(LDADD)
tneg_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tnegate_SOURCES = tnegate.c
tnegate_OBJECTS = tnegate.$(OBJEXT)
tnegate_LDADD = $(LDADD)
tnegate_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tnumberroots_SOURCES = tnumberroots.c
tnumberroots_OBJECTS = tnumberroots.$(OBJEXT)
tnumberroots_LDADD = $(LDADD)
tnumberroots_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tnumerator_SOURCES = tnumerator.c
tnumerator_OBJECTS = tnumerator.$(OBJEXT)
tnumerator_LDADD = $(LDADD)
tnumerator_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tobj_is_end_elliptic_list_SOURCES = tobj_is_end_elliptic_list.c
tobj_is_end_elliptic_list_OBJECTS =  \
	tobj_is_end_elliptic_list.$(OBJEXT)
tobj_is_end_elliptic_list_LDADD = $(LDADD)
tobj_is_end_elliptic_list_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tobj_is_error_SOURCES = tobj_is_error.c
tobj_is_error_OBJECTS = tobj_is_error.$(OBJEXT)
tobj_is_error_LDADD = $(LDADD)
tobj_is_error_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tobj_is_function_SOURCES = tobj_is_function.c
tobj_is_function_OBJECTS = tobj_is_function.$(OBJEXT)
tobj_is_function_LDADD = $(LDADD)
tobj_is_function_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tobj_is_list_SOURCES = tobj_is_list.c
tobj_is_list_OBJECTS = tobj_is_list.$(OBJEXT)
tobj_is_list_LDADD = $(LDADD)
tobj_is_list_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tobj_is_range_SOURCES = tobj_is_range.c
tobj_is_range_OBJECTS = tobj_is_range.$(OBJEXT)
tobj_is_range_LDADD = $(LDADD)
tobj_is_range_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tobj_is_string_SOURCES = tobj_is_string.c
tobj_is_string_OBJECTS = tobj_is_string.$(OBJEXT)
tobj_is_string_LDADD = $(LDADD)
tobj_is_string_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tobj_is_structure_SOURCES = tobj_is_structure.c
tobj_is_structure_OBJECTS = tobj_is_structure.$(OBJEXT)
tobj_is_structure_LDADD = $(LDADD)
tobj_is_structure_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tobject_list_ops_SOURCES = tobject_list_ops.c
tobject_list_ops_OBJECTS = tobject_list_ops.$(OBJEXT)
tobject_list_ops_LDADD = $(LDADD)
tobject_list_ops_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
toff_SOURCES = toff.c
toff_OBJECTS = toff.$(OBJEXT)
toff_LDADD = $(LDADD)
toff_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
ton_SOURCES = ton.c
ton_OBJECTS = ton.$(OBJEXT)
ton_LDADD = $(LDADD)
ton_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tor_SOURCES = tor.c
tor_OBJECTS = tor.$(OBJEXT)
tor_LDADD = $(LDADD)
tor_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tperturb_SOURCES = tperturb.c
tperturb_OBJECTS = tperturb.$(OBJEXT)
tperturb_LDADD = $(LDADD)
tperturb_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tpi_SOURCES = tpi.c
tpi_OBJECTS = tpi.$(OBJEXT)
tpi_LDADD = $(LDADD)
tpi_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tpostscript_SOURCES = tpostscript.c
tpostscript_OBJECTS = tpostscript.$(OBJEXT)
tpostscript_LDADD = $(LDADD)
tpostscript_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tpostscriptfile_SOURCES = tpostscriptfile.c
tpostscriptfile_OBJECTS = tpostscriptfile.$(OBJEXT)
tpostscriptfile_LDADD = $(LDADD)
tpostscriptfile_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tpow_SOURCES = tpow.c
tpow_OBJECTS = tpow.$(OBJEXT)
tpow_LDADD = $(LDADD)
tpow_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tpowers_SOURCES = tpowers.c
tpowers_OBJECTS = tpowers.$(OBJEXT)
tpowers_LDADD = $(LDADD)
tpowers_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tprecision_SOURCES = tprecision.c
tprecision_OBJECTS = tprecision.$(OBJEXT)
tprecision_LDADD = $(LDADD)
tprecision_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tprepend_SOURCES = tprepend.c
tprepend_OBJECTS = tprepend.$(OBJEXT)
tprepend_LDADD = $(LDADD)
tprepend_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tprintdouble_SOURCES = tprintdouble.c
tprintdouble_OBJECTS = tprintdouble.$(OBJEXT)
tprintdouble_LDADD = $(LDADD)
tprintdouble_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tprintexpansion_SOURCES = tprintexpansion.c
tprintexpansion_OBJECTS = tprintexpansion.$(OBJEXT)
tprintexpansion_LDADD = $(LDADD)
tprintexpansion_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tprintf_SOURCES = tprintf.c
tprintf_OBJECTS = tprintf.$(OBJEXT)
tprintf_LDADD = $(LDADD)
tprintf_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tprintsingle_SOURCES = tprintsingle.c
tprintsingle_OBJECTS = tprintsingle.$(OBJEXT)
tprintsingle_LDADD = $(LDADD)
tprintsingle_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tprocedurefunction_SOURCES = tprocedurefunction.c
tprocedurefunction_OBJECTS = tprocedurefunction.$(OBJEXT)
tprocedurefunction_LDADD = $(LDADD)
tprocedurefunction_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tquad_SOURCES = tquad.c
tquad_OBJECTS = tquad.$(OBJEXT)
tquad_LDADD = $(LDADD)
tquad_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tquad_obj_SOURCES = tquad_obj.c
tquad_obj_OBJECTS = tquad_obj.$(OBJEXT)
tquad_obj_LDADD = $(LDADD)
tquad_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
trange_from_bounds_SOURCES = trange_from_bounds.c
trange_from_bounds_OBJECTS = trange_from_bounds.$(OBJEXT)
trange_from_bounds_LDADD = $(LDADD)
trange_from_bounds_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
trange_from_interval_SOURCES = trange_from_interval.c
trange_from_interval_OBJECTS = trange_from_interval.$(OBJEXT)
trange_from_interval_LDADD = $(LDADD)
trange_from_interval_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
trationalapprox_SOURCES = trationalapprox.c
trationalapprox_OBJECTS = trationalapprox.$(OBJEXT)
trationalapprox_LDADD = $(LDADD)
trationalapprox_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
trelative_SOURCES = trelative.c
trelative_OBJECTS = trelative.$(OBJEXT)
trelative_LDADD = $(LDADD)
trelative_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tremez_SOURCES = tremez.c
tremez_OBJECTS = tremez.$(OBJEXT)
tremez_LDADD = $(LDADD)
tremez_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
trevert_SOURCES = trevert.c
trevert_OBJECTS = trevert.$(OBJEXT)
trevert_LDADD = $(LDADD)
trevert_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tround_down_SOURCES = tround_down.c
tround_down_OBJECTS = tround_down.$(OBJEXT)
tround_down_LDADD = $(LDADD)
tround_down_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tround_to_nearest_SOURCES = tround_to_nearest.c
tround_to_nearest_OBJECTS = tround_to_nearest.$(OBJEXT)
tround_to_nearest_LDADD = $(LDADD)
tround_to_nearest_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tround_towards_zero_SOURCES = tround_towards_zero.c
tround_towards_zero_OBJECTS = tround_towards_zero.$(OBJEXT)
tround_towards_zero_LDADD = $(LDADD)
tround_towards_zero_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tround_up_SOURCES = tround_up.c
tround_up_OBJECTS = tround_up.$(OBJEXT)
tround_up_LDADD = $(LDADD)
tround_up_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
troundcoefficients_SOURCES = troundcoefficients.c
troundcoefficients_OBJECTS = troundcoefficients.$(OBJEXT)
troundcoefficients_LDADD = $(LDADD)
troundcoefficients_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsearchgal_SOURCES = tsearchgal.c
tsearchgal_OBJECTS = tsearchgal.$(OBJEXT)
tsearchgal_LDADD = $(LDADD)
tsearchgal_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_autosimplify_SOURCES = tset_autosimplify.c
tset_autosimplify_OBJECTS = tset_autosimplify.$(OBJEXT)
tset_autosimplify_LDADD = $(LDADD)
tset_autosimplify_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_autosimplify_and_print_SOURCES = tset_autosimplify_and_print.c
tset_autosimplify_and_print_OBJECTS =  \
	tset_autosimplify_and_print.$(OBJEXT)
tset_autosimplify_and_print_LDADD = $(LDADD)
tset_autosimplify_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_canonical_SOURCES = tset_canonical.c
tset_canonical_OBJECTS = tset_canonical.$(OBJEXT)
tset_canonical_LDADD = $(LDADD)
tset_canonical_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_canonical_and_print_SOURCES = tset_canonical_and_print.c
tset_canonical_and_print_OBJECTS = tset_canonical_and_print.$(OBJEXT)
tset_canonical_and_print_LDADD = $(LDADD)
tset_canonical_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_diam_SOURCES = tset_diam.c
tset_diam_OBJECTS = tset_diam.$(OBJEXT)
tset_diam_LDADD = $(LDADD)
tset_diam_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_diam_and_print_SOURCES = tset_diam_and_print.c
tset_diam_and_print_OBJECTS = tset_diam_and_print.$(OBJEXT)
tset_diam_and_print_LDADD = $(LDADD)
tset_diam_and_print_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_dieonerrormode_SOURCES = tset_dieonerrormode.c
tset_dieonerrormode_OBJECTS = tset_dieonerrormode.$(OBJEXT)
tset_dieonerrormode_LDADD = $(LDADD)
tset_dieonerrormode_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_dieonerrormode_and_print_SOURCES =  \
	tset_dieonerrormode_and_print.c
tset_dieonerrormode_and_print_OBJECTS =  \
	tset_dieonerrormode_and_print.$(OBJEXT)
tset_dieonerrormode_and_print_LDADD = $(LDADD)
tset_dieonerrormode_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_display_SOURCES = tset_display.c
tset_display_OBJECTS = tset_display.$(OBJEXT)
tset_display_LDADD = $(LDADD)
tset_display_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_display_and_print_SOURCES = tset_display_and_print.c
tset_display_and_print_OBJECTS = tset_display_and_print.$(OBJEXT)
tset_display_and_print_LDADD = $(LDADD)
tset_display_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_hopitalrecursions_SOURCES = tset_hopitalrecursions.c
tset_hopitalrecursions_OBJECTS = tset_hopitalrecursions.$(OBJEXT)
tset_hopitalrecursions_LDADD = $(LDADD)
tset_hopitalrecursions_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_hopitalrecursions_and_print_SOURCES =  \
	tset_hopitalrecursions_and_print.c
tset_hopitalrecursions_and_print_OBJECTS =  \
	tset_hopitalrecursions_and_print.$(OBJEXT)
tset_hopitalrecursions_and_print_LDADD = $(LDADD)
tset_hopitalrecursions_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_midpointmode_SOURCES = tset_midpointmode.c
tset_midpointmode_OBJECTS = tset_midpointmode.$(OBJEXT)
tset_midpointmode_LDADD = $(LDADD)
tset_midpointmode_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_midpointmode_and_print_SOURCES = tset_midpointmode_and_print.c
tset_midpointmode_and_print_OBJECTS =  \
	tset_midpointmode_and_print.$(OBJEXT)
tset_midpointmode_and_print_LDADD = $(LDADD)
tset_midpointmode_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_points_SOURCES = tset_points.c
tset_points_OBJECTS = tset_points.$(OBJEXT)
tset_points_LDADD = $(LDADD)
tset_points_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_points_and_print_SOURCES = tset_points_and_print.c
tset_points_and_print_OBJECTS = tset_points_and_print.$(OBJEXT)
tset_points_and_print_LDADD = $(LDADD)
tset_points_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_prec_SOURCES = tset_prec.c
tset_prec_OBJECTS = tset_prec.$(OBJEXT)
tset_prec_LDADD = $(LDADD)
tset_prec_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_prec_and_print_SOURCES = tset_prec_and_print.c
tset_prec_and_print_OBJECTS = tset_prec_and_print.$(OBJEXT)
tset_prec_and_print_LDADD = $(LDADD)
tset_prec_and_print_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_rationalmode_SOURCES = tset_rationalmode.c
tset_rationalmode_OBJECTS = tset_rationalmode.$(OBJEXT)
tset_rationalmode_LDADD = $(LDADD)
tset_rationalmode_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_rationalmode_and_print_SOURCES = tset_rationalmode_and_print.c
tset_rationalmode_and_print_OBJECTS =  \
	tset_rationalmode_and_print.$(OBJEXT)
tset_rationalmode_and_print_LDADD = $(LDADD)
tset_rationalmode_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_roundingwarnings_SOURCES = tset_roundingwarnings.c
tset_roundingwarnings_OBJECTS = tset_roundingwarnings.$(OBJEXT)
tset_roundingwarnings_LDADD = $(LDADD)
tset_roundingwarnings_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_roundingwarnings_and_print_SOURCES =  \
	tset_roundingwarnings_and_print.c
tset_roundingwarnings_and_print_OBJECTS =  \
	tset_roundingwarnings_and_print.$(OBJEXT)
tset_roundingwarnings_and_print_LDADD = $(LDADD)
tset_roundingwarnings_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_showmessagenumbers_SOURCES = tset_showmessagenumbers.c
tset_showmessagenumbers_OBJECTS = tset_showmessagenumbers.$(OBJEXT)
tset_showmessagenumbers_LDADD = $(LDADD)
tset_showmessagenumbers_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_showmessagenumbers_and_print_SOURCES =  \
	tset_showmessagenumbers_and_print.c
tset_showmessagenumbers_and_print_OBJECTS =  \
	tset_showmessagenumbers_and_print.$(OBJEXT)
tset_showmessagenumbers_and_print_LDADD = $(LDADD)
tset_showmessagenumbers_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_taylorrecursions_SOURCES = tset_taylorrecursions.c
tset_taylorrecursions_OBJECTS = tset_taylorrecursions.$(OBJEXT)
tset_taylorrecursions_LDADD = $(LDADD)
tset_taylorrecursions_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_taylorrecursions_and_print_SOURCES =  \
	tset_taylorrecursions_and_print.c
tset_taylorrecursions_and_print_OBJECTS =  \
	tset_taylorrecursions_and_print.$(OBJEXT)
tset_taylorrecursions_and_print_LDADD = $(LDADD)
tset_taylorrecursions_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_timing_SOURCES = tset_timing.c
tset_timing_OBJECTS = tset_timing.$(OBJEXT)
tset_timing_LDADD = $(LDADD)
tset_timing_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_timing_and_print_SOURCES = tset_timing_and_print.c
tset_timing_and_print_OBJECTS = tset_timing_and_print.$(OBJEXT)
tset_timing_and_print_LDADD = $(LDADD)
tset_timing_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tset_verbosity_SOURCES = tset_verbosity.c
tset_verbosity_OBJECTS = tset_verbosity.$(OBJEXT)
tset_verbosity_LDADD = $(LDADD)
tset_verbosity_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tset_verbosity_and_print_SOURCES = tset_verbosity_and_print.c
tset_verbosity_and_print_OBJECTS = tset_verbosity_and_print.$(OBJEXT)
tset_verbosity_and_print_LDADD = $(LDADD)
tset_verbosity_and_print_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tsimplify_SOURCES = tsimplify.c
tsimplify_OBJECTS = tsimplify.$(OBJEXT)
tsimplify_LDADD = $(LDADD)
tsimplify_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsin_SOURCES = tsin.c
tsin_OBJECTS = tsin.$(OBJEXT)
tsin_LDADD = $(LDADD)
tsin_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsingle_SOURCES = tsingle.c
tsingle_OBJECTS = tsingle.$(OBJEXT)
tsingle_LDADD = $(LDADD)
tsingle_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsingle_obj_SOURCES = tsingle_obj.c
tsingle_obj_OBJECTS = tsingle_obj.$(OBJEXT)
tsingle_obj_LDADD = $(LDADD)
tsingle_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsinh_SOURCES = tsinh.c
tsinh_OBJECTS = tsinh.$(OBJEXT)
tsinh_LDADD = $(LDADD)
tsinh_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsort_SOURCES = tsort.c
tsort_OBJECTS = tsort.$(OBJEXT)
tsort_LDADD = $(LDADD)
tsort_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsqrt_SOURCES = tsqrt.c
tsqrt_OBJECTS = tsqrt.$(OBJEXT)
tsqrt_LDADD = $(LDADD)
tsqrt_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tstring_SOURCES = tstring.c
tstring_OBJECTS = tstring.$(OBJEXT)
tstring_LDADD = $(LDADD)
tstring_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tstring_list_ops_SOURCES = tstring_list_ops.c
tstring_list_ops_OBJECTS = tstring_list_ops.$(OBJEXT)
tstring_list_ops_LDADD = $(LDADD)
tstring_list_ops_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsub_SOURCES = tsub.c
tsub_OBJECTS = tsub.$(OBJEXT)
tsub_LDADD = $(LDADD)
tsub_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsubpoly_SOURCES = tsubpoly.c
tsubpoly_OBJECTS = tsubpoly.$(OBJEXT)
tsubpoly_LDADD = $(LDADD)
tsubpoly_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsubstitute_SOURCES = tsubstitute.c
tsubstitute_OBJECTS = tsubstitute.$(OBJEXT)
tsubstitute_LDADD = $(LDADD)
tsubstitute_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tsup_SOURCES = tsup.c
tsup_OBJECTS = tsup.$(OBJEXT)
tsup_LDADD = $(LDADD)
tsup_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
ttail_SOURCES = ttail.c
ttail_OBJECTS = ttail.$(OBJEXT)
ttail_LDADD = $(LDADD)
ttail_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
ttan_SOURCES = ttan.c
ttan_OBJECTS = ttan.$(OBJEXT)
ttan_LDADD = $(LDADD)
ttan_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
ttanh_SOURCES = ttanh.c
ttanh_OBJECTS = ttanh.$(OBJEXT)
ttanh_LDADD = $(LDADD)
ttanh_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
ttriple_double_SOURCES = ttriple_double.c
ttriple_double_OBJECTS = ttriple_double.$(OBJEXT)
ttriple_double_LDADD = $(LDADD)
ttriple_double_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
ttriple_double_obj_SOURCES = ttriple_double_obj.c
ttriple_double_obj_OBJECTS = ttriple_double_obj.$(OBJEXT)
ttriple_double_obj_LDADD = $(LDADD)
ttriple_double_obj_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
ttrue_SOURCES = ttrue.c
ttrue_OBJECTS = ttrue.$(OBJEXT)
ttrue_LDADD = $(LDADD)
ttrue_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tv_build_end_elliptic_list_SOURCES = tv_build_end_elliptic_list.c
tv_build_end_elliptic_list_OBJECTS =  \
	tv_build_end_elliptic_list.$(OBJEXT)
tv_build_end_elliptic_list_LDADD = $(LDADD)
tv_build_end_elliptic_list_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tv_build_list_SOURCES = tv_build_list.c
tv_build_list_OBJECTS = tv_build_list.$(OBJEXT)
tv_build_list_LDADD = $(LDADD)
tv_build_list_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tv_decompose_function_SOURCES = tv_decompose_function.c
tv_decompose_function_OBJECTS = tv_decompose_function.$(OBJEXT)
tv_decompose_function_LDADD = $(LDADD)
tv_decompose_function_DEPENDENCIES =  \
	$(top_builddir)/.libs/libsollya.la
tv_fpminimax_SOURCES = tv_fpminimax.c
tv_fpminimax_OBJECTS = tv_fpminimax.$(OBJEXT)
tv_fpminimax_LDADD = $(LDADD)
tv_fpminimax_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tv_get_subfunctions_SOURCES = tv_get_subfunctions.c
tv_get_subfunctions_OBJECTS = tv_get_subfunctions.$(OBJEXT)
tv_get_subfunctions_LDADD = $(LDADD)
tv_get_subfunctions_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tv_implementpoly_SOURCES = tv_implementpoly.c
tv_implementpoly_OBJECTS = tv_implementpoly.$(OBJEXT)
tv_implementpoly_LDADD = $(LDADD)
tv_implementpoly_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tv_max_SOURCES = tv_max.c
tv_max_OBJECTS = tv_max.$(OBJEXT)
tv_max_LDADD = $(LDADD)
tv_max_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tv_min_SOURCES = tv_min.c
tv_min_OBJECTS = tv_min.$(OBJEXT)
tv_min_LDADD = $(LDADD)
tv_min_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tv_remez_SOURCES = tv_remez.c
tv_remez_OBJECTS = tv_remez.$(OBJEXT)
tv_remez_LDADD = $(LDADD)
tv_remez_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
tvoid_SOURCES = tvoid.c
tvoid_OBJECTS = tvoid.$(OBJEXT)
tvoid_LDADD = $(LDADD)
tvoid_DEPENDENCIES = $(top_builddir)/.libs/libsollya.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = libraryexample.c $(force_compilation_SOURCES) tabs.c \
	tabsolute.c tacos.c tacosh.c tadd.c tand.c tappend.c \
	tasciiplot.c tasin.c tasinh.c tatan.c tatanh.c tbashexecute.c \
	tbinary.c tboolean_list_ops.c tbuild_end_elliptic_list.c \
	tbuild_function_abs.c tbuild_function_acos.c \
	tbuild_function_acosh.c tbuild_function_add.c \
	tbuild_function_asin.c tbuild_function_asinh.c \
	tbuild_function_atan.c tbuild_function_atanh.c \
	tbuild_function_ceil.c tbuild_function_cos.c \
	tbuild_function_cosh.c tbuild_function_div.c \
	tbuild_function_double.c tbuild_function_double_double.c \
	tbuild_function_doubleextended.c tbuild_function_erf.c \
	tbuild_function_erfc.c tbuild_function_exp.c \
	tbuild_function_expm1.c tbuild_function_floor.c \
	tbuild_function_free_variable.c \
	tbuild_function_halfprecision.c \
	tbuild_function_libraryconstant.c \
	tbuild_function_libraryfunction.c tbuild_function_log.c \
	tbuild_function_log10.c tbuild_function_log1p.c \
	tbuild_function_log2.c tbuild_function_mul.c \
	tbuild_function_nearestint.c tbuild_function_neg.c \
	tbuild_function_pi.c tbuild_function_pow.c \
	tbuild_function_procedurefunction.c tbuild_function_quad.c \
	tbuild_function_sin.c tbuild_function_single.c \
	tbuild_function_sinh.c tbuild_function_sqrt.c \
	tbuild_function_sub.c tbuild_function_tan.c \
	tbuild_function_tanh.c tbuild_function_triple_double.c \
	tbuild_list.c tcanonical.c tceil.c tcheckinfnorm.c \
	tcmp_equal.c tcmp_greater.c tcmp_greater_equal.c tcmp_in.c \
	tcmp_less.c tcmp_less_equal.c tcmp_not_equal.c \
	tcmp_objs_structurally.c tcoeff.c tconcat.c tconstant.c \
	tconstant_from_double.c tconstant_from_int.c \
	tconstant_from_int64.c tconstant_from_mpq.c \
	tconstant_from_mpz.c tconstant_from_uint64.c \
	tconstant_list_ops.c tcopy_obj.c tcos.c tcosh.c \
	tcreate_structure.c tdecimal.c tdecompose_function.c \
	tdecompose_libraryconstant.c tdecompose_libraryfunction.c \
	tdecompose_procedurefunction.c tdefault.c tdegree.c \
	tdenominator.c tdiff.c tdirtyinfnorm.c tdirtyintegral.c \
	tdirtysimplify.c tdiv.c tdouble.c tdouble_double.c \
	tdouble_double_obj.c tdouble_obj.c tdoubleextended.c \
	tdoubleextended_obj.c tdyadic.c tend_elliptic_list.c terf.c \
	terfc.c terror.c tevaluate_function_at_constant_expression.c \
	tevaluate_function_at_point.c texp.c texpand.c texpm1.c \
	tfalse.c tfile.c tfixed.c tfloating.c tfloor.c tfpminimax.c \
	tfree_variable.c tget_autosimplify.c tget_bounds_from_range.c \
	tget_canonical.c tget_constant_as_double.c \
	tget_constant_as_int.c tget_constant_as_int64.c \
	tget_constant_as_mpq.c tget_constant_as_mpz.c \
	tget_constant_as_uint64.c tget_diam.c tget_dieonerrormode.c \
	tget_display.c tget_element_in_list.c \
	tget_element_in_structure.c tget_free_variable_name.c \
	tget_function_arity.c tget_head_function.c \
	tget_hopitalrecursions.c tget_interval_from_range.c \
	tget_list_elements.c tget_midpointmode.c tget_points.c \
	tget_prec.c tget_rationalmode.c tget_roundingwarnings.c \
	tget_showmessagenumbers.c tget_string.c \
	tget_structure_elements.c tget_subfunctions.c \
	tget_taylorrecursions.c tget_timing.c tget_verbosity.c \
	thalfprecision.c thalfprecision_obj.c thead.c thexadecimal.c \
	thonorcoeffprec.c thorner.c timplementpoly.c tinf.c \
	tinit_with_custom_memory_functions.c tint_list_ops.c \
	tintegral.c tinterval_list_ops.c tis_absolute.c tis_binary.c \
	tis_decimal.c tis_default.c tis_double_double_obj.c \
	tis_double_obj.c tis_doubleextended_obj.c tis_dyadic.c \
	tis_false.c tis_file.c tis_fixed.c tis_floating.c \
	tis_halfprecision_obj.c tis_hexadecimal.c tis_honorcoeffprec.c \
	tis_off.c tis_on.c tis_perturb.c tis_pi.c tis_postscript.c \
	tis_postscriptfile.c tis_powers.c tis_quad_obj.c \
	tis_relative.c tis_round_down.c tis_round_to_nearest.c \
	tis_round_towards_zero.c tis_round_up.c tis_single_obj.c \
	tis_triple_double_obj.c tis_true.c tis_void.c tlength.c \
	tlibraryconstant.c tlibraryfunction.c tlist.c tlog.c tlog10.c \
	tlog1p.c tlog2.c tmacros_build_function.c \
	tmantissa_and_exponent.c tmax.c tmid.c tmin.c \
	tmsg_callback_functions.c tmul.c tname_free_variable.c \
	tnearestint.c tneg.c tnegate.c tnumberroots.c tnumerator.c \
	tobj_is_end_elliptic_list.c tobj_is_error.c tobj_is_function.c \
	tobj_is_list.c tobj_is_range.c tobj_is_string.c \
	tobj_is_structure.c tobject_list_ops.c toff.c ton.c tor.c \
	tperturb.c tpi.c tpostscript.c tpostscriptfile.c tpow.c \
	tpowers.c tprecision.c tprepend.c tprintdouble.c \
	tprintexpansion.c tprintf.c tprintsingle.c \
	tprocedurefunction.c tquad.c tquad_obj.c trange_from_bounds.c \
	trange_from_interval.c trationalapprox.c trelative.c tremez.c \
	trevert.c tround_down.c tround_to_nearest.c \
	tround_towards_zero.c tround_up.c troundcoefficients.c \
	tsearchgal.c tset_autosimplify.c tset_autosimplify_and_print.c \
	tset_canonical.c tset_canonical_and_print.c tset_diam.c \
	tset_diam_and_print.c tset_dieonerrormode.c \
	tset_dieonerrormode_and_print.c tset_display.c \
	tset_display_and_print.c tset_hopitalrecursions.c \
	tset_hopitalrecursions_and_print.c tset_midpointmode.c \
	tset_midpointmode_and_print.c tset_points.c \
	tset_points_and_print.c tset_prec.c tset_prec_and_print.c \
	tset_rationalmode.c tset_rationalmode_and_print.c \
	tset_roundingwarnings.c tset_roundingwarnings_and_print.c \
	tset_showmessagenumbers.c tset_showmessagenumbers_and_print.c \
	tset_taylorrecursions.c tset_taylorrecursions_and_print.c \
	tset_timing.c tset_timing_and_print.c tset_verbosity.c \
	tset_verbosity_and_print.c tsimplify.c tsin.c tsingle.c \
	tsingle_obj.c tsinh.c tsort.c tsqrt.c tstring.c \
	tstring_list_ops.c tsub.c tsubpoly.c tsubstitute.c tsup.c \
	ttail.c ttan.c ttanh.c ttriple_double.c ttriple_double_obj.c \
	ttrue.c tv_build_end_elliptic_list.c tv_build_list.c \
	tv_decompose_function.c tv_fpminimax.c tv_get_subfunctions.c \
	tv_implementpoly.c tv_max.c tv_min.c tv_remez.c tvoid.c
DIST_SOURCES = libraryexample.c $(force_compilation_SOURCES) tabs.c \
	tabsolute.c tacos.c tacosh.c tadd.c tand.c tappend.c \
	tasciiplot.c tasin.c tasinh.c tatan.c tatanh.c tbashexecute.c \
	tbinary.c tboolean_list_ops.c tbuild_end_elliptic_list.c \
	tbuild_function_abs.c tbuild_function_acos.c \
	tbuild_function_acosh.c tbuild_function_add.c \
	tbuild_function_asin.c tbuild_function_asinh.c \
	tbuild_function_atan.c tbuild_function_atanh.c \
	tbuild_function_ceil.c tbuild_function_cos.c \
	tbuild_function_cosh.c tbuild_function_div.c \
	tbuild_function_double.c tbuild_function_double_double.c \
	tbuild_function_doubleextended.c tbuild_function_erf.c \
	tbuild_function_erfc.c tbuild_function_exp.c \
	tbuild_function_expm1.c tbuild_function_floor.c \
	tbuild_function_free_variable.c \
	tbuild_function_halfprecision.c \
	tbuild_function_libraryconstant.c \
	tbuild_function_libraryfunction.c tbuild_function_log.c \
	tbuild_function_log10.c tbuild_function_log1p.c \
	tbuild_function_log2.c tbuild_function_mul.c \
	tbuild_function_nearestint.c tbuild_function_neg.c \
	tbuild_function_pi.c tbuild_function_pow.c \
	tbuild_function_procedurefunction.c tbuild_function_quad.c \
	tbuild_function_sin.c tbuild_function_single.c \
	tbuild_function_sinh.c tbuild_function_sqrt.c \
	tbuild_function_sub.c tbuild_function_tan.c \
	tbuild_function_tanh.c tbuild_function_triple_double.c \
	tbuild_list.c tcanonical.c tceil.c tcheckinfnorm.c \
	tcmp_equal.c tcmp_greater.c tcmp_greater_equal.c tcmp_in.c \
	tcmp_less.c tcmp_less_equal.c tcmp_not_equal.c \
	tcmp_objs_structurally.c tcoeff.c tconcat.c tconstant.c \
	tconstant_from_double.c tconstant_from_int.c \
	tconstant_from_int64.c tconstant_from_mpq.c \
	tconstant_from_mpz.c tconstant_from_uint64.c \
	tconstant_list_ops.c tcopy_obj.c tcos.c tcosh.c \
	tcreate_structure.c tdecimal.c tdecompose_function.c \
	tdecompose_libraryconstant.c tdecompose_libraryfunction.c \
	tdecompose_procedurefunction.c tdefault.c tdegree.c \
	tdenominator.c tdiff.c tdirtyinfnorm.c tdirtyintegral.c \
	tdirtysimplify.c tdiv.c tdouble.c tdouble_double.c \
	tdouble_double_obj.c tdouble_obj.c tdoubleextended.c \
	tdoubleextended_obj.c tdyadic.c tend_elliptic_list.c terf.c \
	terfc.c terror.c tevaluate_function_at_constant_expression.c \
	tevaluate_function_at_point.c texp.c texpand.c texpm1.c \
	tfalse.c tfile.c tfixed.c tfloating.c tfloor.c tfpminimax.c \
	tfree_variable.c tget_autosimplify.c tget_bounds_from_range.c \
	tget_canonical.c tget_constant_as_double.c \
	tget_constant_as_int.c tget_constant_as_int64.c \
	tget_constant_as_mpq.c tget_constant_as_mpz.c \
	tget_constant_as_uint64.c tget_diam.c tget_dieonerrormode.c \
	tget_display.c tget_element_in_list.c \
	tget_element_in_structure.c tget_free_variable_name.c \
	tget_function_arity.c tget_head_function.c \
	tget_hopitalrecursions.c tget_interval_from_range.c \
	tget_list_elements.c tget_midpointmode.c tget_points.c \
	tget_prec.c tget_rationalmode.c tget_roundingwarnings.c \
	tget_showmessagenumbers.c tget_string.c \
	tget_structure_elements.c tget_subfunctions.c \
	tget_taylorrecursions.c tget_timing.c tget_verbosity.c \
	thalfprecision.c thalfprecision_obj.c thead.c thexadecimal.c \
	thonorcoeffprec.c thorner.c timplementpoly.c tinf.c \
	tinit_with_custom_memory_functions.c tint_list_ops.c \
	tintegral.c tinterval_list_ops.c tis_absolute.c tis_binary.c \
	tis_decimal.c tis_default.c tis_double_double_obj.c \
	tis_double_obj.c tis_doubleextended_obj.c tis_dyadic.c \
	tis_false.c tis_file.c tis_fixed.c tis_floating.c \
	tis_halfprecision_obj.c tis_hexadecimal.c tis_honorcoeffprec.c \
	tis_off.c tis_on.c tis_perturb.c tis_pi.c tis_postscript.c \
	tis_postscriptfile.c tis_powers.c tis_quad_obj.c \
	tis_relative.c tis_round_down.c tis_round_to_nearest.c \
	tis_round_towards_zero.c tis_round_up.c tis_single_obj.c \
	tis_triple_double_obj.c tis_true.c tis_void.c tlength.c \
	tlibraryconstant.c tlibraryfunction.c tlist.c tlog.c tlog10.c \
	tlog1p.c tlog2.c tmacros_build_function.c \
	tmantissa_and_exponent.c tmax.c tmid.c tmin.c \
	tmsg_callback_functions.c tmul.c tname_free_variable.c \
	tnearestint.c tneg.c tnegate.c tnumberroots.c tnumerator.c \
	tobj_is_end_elliptic_list.c tobj_is_error.c tobj_is_function.c \
	tobj_is_list.c tobj_is_range.c tobj_is_string.c \
	tobj_is_structure.c tobject_list_ops.c toff.c ton.c tor.c \
	tperturb.c tpi.c tpostscript.c tpostscriptfile.c tpow.c \
	tpowers.c tprecision.c tprepend.c tprintdouble.c \
	tprintexpansion.c tprintf.c tprintsingle.c \
	tprocedurefunction.c tquad.c tquad_obj.c trange_from_bounds.c \
	trange_from_interval.c trationalapprox.c trelative.c tremez.c \
	trevert.c tround_down.c tround_to_nearest.c \
	tround_towards_zero.c tround_up.c troundcoefficients.c \
	tsearchgal.c tset_autosimplify.c tset_autosimplify_and_print.c \
	tset_canonical.c tset_canonical_and_print.c tset_diam.c \
	tset_diam_and_print.c tset_dieonerrormode.c \
	tset_dieonerrormode_and_print.c tset_display.c \
	tset_display_and_print.c tset_hopitalrecursions.c \
	tset_hopitalrecursions_and_print.c tset_midpointmode.c \
	tset_midpointmode_and_print.c tset_points.c \
	tset_points_and_print.c tset_prec.c tset_prec_and_print.c \
	tset_rationalmode.c tset_rationalmode_and_print.c \
	tset_roundingwarnings.c tset_roundingwarnings_and_print.c \
	tset_showmessagenumbers.c tset_showmessagenumbers_and_print.c \
	tset_taylorrecursions.c tset_taylorrecursions_and_print.c \
	tset_timing.c tset_timing_and_print.c tset_verbosity.c \
	tset_verbosity_and_print.c tsimplify.c tsin.c tsingle.c \
	tsingle_obj.c tsinh.c tsort.c tsqrt.c tstring.c \
	tstring_list_ops.c tsub.c tsubpoly.c tsubstitute.c tsup.c \
	ttail.c ttan.c ttanh.c ttriple_double.c ttriple_double_obj.c \
	ttrue.c tv_build_end_elliptic_list.c tv_build_list.c \
	tv_decompose_function.c tv_fpminimax.c tv_get_subfunctions.c \
	tv_implementpoly.c tv_max.c tv_min.c tv_remez.c tvoid.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
am__EXEEXT_2 = tabs.sh tabsolute.sh tacos.sh tacosh.sh tadd.sh tand.sh \
	tappend.sh tasin.sh tasinh.sh tasciiplot.sh tatan.sh tatanh.sh \
	tbashexecute.sh tbinary.sh tboolean_list_ops.sh \
	tbuild_end_elliptic_list.sh tbuild_function_abs.sh \
	tbuild_function_acos.sh tbuild_function_acosh.sh \
	tbuild_function_add.sh tbuild_function_asin.sh \
	tbuild_function_asinh.sh tbuild_function_atan.sh \
	tbuild_function_atanh.sh tbuild_function_ceil.sh \
	tbuild_function_cos.sh tbuild_function_cosh.sh \
	tbuild_function_div.sh tbuild_function_double.sh \
	tbuild_function_double_double.sh \
	tbuild_function_doubleextended.sh tbuild_function_erf.sh \
	tbuild_function_erfc.sh tbuild_function_exp.sh \
	tbuild_function_expm1.sh tbuild_function_floor.sh \
	tbuild_function_free_variable.sh \
	tbuild_function_halfprecision.sh \
	tbuild_function_libraryconstant.sh \
	tbuild_function_libraryfunction.sh tbuild_function_log10.sh \
	tbuild_function_log1p.sh tbuild_function_log2.sh \
	tbuild_function_log.sh tbuild_function_mul.sh \
	tbuild_function_nearestint.sh tbuild_function_neg.sh \
	tbuild_function_pi.sh tbuild_function_pow.sh \
	tbuild_function_procedurefunction.sh tbuild_function_quad.sh \
	tbuild_function_sin.sh tbuild_function_single.sh \
	tbuild_function_sinh.sh tbuild_function_sqrt.sh \
	tbuild_function_sub.sh tbuild_function_tan.sh \
	tbuild_function_tanh.sh tbuild_function_triple_double.sh \
	tbuild_list.sh tcanonical.sh tceil.sh tcheckinfnorm.sh \
	tcmp_equal.sh tcmp_greater.sh tcmp_greater_equal.sh tcmp_in.sh \
	tcmp_less.sh tcmp_less_equal.sh tcmp_not_equal.sh \
	tcmp_objs_structurally.sh tcoeff.sh tconcat.sh tconstant.sh \
	tconstant_from_double.sh tconstant_from_int64.sh \
	tconstant_from_int.sh tconstant_from_mpq.sh \
	tconstant_from_mpz.sh tconstant_from_uint64.sh \
	tconstant_list_ops.sh tcopy_obj.sh tcos.sh tcosh.sh \
	tcreate_structure.sh tdecimal.sh tdecompose_function.sh \
	tdecompose_libraryconstant.sh tdecompose_libraryfunction.sh \
	tdecompose_procedurefunction.sh tdefault.sh tdegree.sh \
	tdenominator.sh tdiff.sh tdirtyinfnorm.sh tdirtyintegral.sh \
	tdirtysimplify.sh tdiv.sh tdouble.sh tdouble_double.sh \
	tdouble_double_obj.sh tdoubleextended.sh \
	tdoubleextended_obj.sh tdouble_obj.sh tdyadic.sh \
	tend_elliptic_list.sh terf.sh terfc.sh terror.sh \
	tevaluate_function_at_constant_expression.sh \
	tevaluate_function_at_point.sh texp.sh texpand.sh texpm1.sh \
	tfalse.sh tfile.sh tfixed.sh tfloating.sh tfloor.sh \
	tfpminimax.sh tfree_variable.sh tget_autosimplify.sh \
	tget_bounds_from_range.sh tget_canonical.sh \
	tget_constant_as_double.sh tget_constant_as_int.sh \
	tget_constant_as_int64.sh tget_constant_as_mpq.sh \
	tget_constant_as_mpz.sh tget_constant_as_uint64.sh \
	tget_diam.sh tget_dieonerrormode.sh tget_display.sh \
	tget_element_in_list.sh tget_free_variable_name.sh \
	tget_function_arity.sh tget_head_function.sh \
	tget_hopitalrecursions.sh tget_interval_from_range.sh \
	tget_list_elements.sh tget_midpointmode.sh tget_points.sh \
	tget_prec.sh tget_rationalmode.sh tget_roundingwarnings.sh \
	tget_showmessagenumbers.sh tget_string.sh \
	tget_structure_elements.sh tget_subfunctions.sh \
	tget_element_in_structure.sh tget_taylorrecursions.sh \
	tget_timing.sh tget_verbosity.sh thalfprecision.sh \
	thalfprecision_obj.sh thead.sh thexadecimal.sh \
	thonorcoeffprec.sh thorner.sh timplementpoly.sh tinf.sh \
	tinit_with_custom_memory_functions.sh tint_list_ops.sh \
	tintegral.sh tinterval_list_ops.sh tis_absolute.sh \
	tis_binary.sh tis_decimal.sh tis_default.sh \
	tis_double_double_obj.sh tis_doubleextended_obj.sh \
	tis_double_obj.sh tis_dyadic.sh tis_false.sh tis_file.sh \
	tis_fixed.sh tis_floating.sh tis_halfprecision_obj.sh \
	tis_hexadecimal.sh tis_honorcoeffprec.sh tis_off.sh tis_on.sh \
	tis_perturb.sh tis_pi.sh tis_postscript.sh \
	tis_postscriptfile.sh tis_powers.sh tis_quad_obj.sh \
	tis_relative.sh tis_round_down.sh tis_round_to_nearest.sh \
	tis_round_towards_zero.sh tis_round_up.sh tis_single_obj.sh \
	tis_triple_double_obj.sh tis_true.sh tis_void.sh tlength.sh \
	tlibraryconstant.sh tlibraryfunction.sh tlist.sh tlog10.sh \
	tlog1p.sh tlog2.sh tlog.sh tmacros_build_function.sh \
	tmantissa_and_exponent.sh tmax.sh tmid.sh tmin.sh \
	tmsg_callback_functions.sh tmul.sh tname_free_variable.sh \
	tnearestint.sh tneg.sh tnegate.sh tnumberroots.sh \
	tnumerator.sh tobj_is_end_elliptic_list.sh tobj_is_error.sh \
	tobj_is_function.sh tobj_is_list.sh tobj_is_range.sh \
	tobj_is_string.sh tobj_is_structure.sh tobject_list_ops.sh \
	toff.sh ton.sh tor.sh tperturb.sh tpi.sh tpostscript.sh \
	tpostscriptfile.sh tpow.sh tpowers.sh tprecision.sh \
	tprepend.sh tprintdouble.sh tprintexpansion.sh tprintf.sh \
	tprintsingle.sh tprocedurefunction.sh tquad.sh tquad_obj.sh \
	trange_from_bounds.sh trange_from_interval.sh \
	trationalapprox.sh trelative.sh tremez.sh trevert.sh \
	tround_down.sh tround_to_nearest.sh tround_towards_zero.sh \
	tround_up.sh troundcoefficients.sh tsearchgal.sh \
	tset_autosimplify_and_print.sh tset_autosimplify.sh \
	tset_canonical_and_print.sh tset_canonical.sh \
	tset_diam_and_print.sh tset_diam.sh \
	tset_dieonerrormode_and_print.sh tset_dieonerrormode.sh \
	tset_display_and_print.sh tset_display.sh \
	tset_hopitalrecursions_and_print.sh tset_hopitalrecursions.sh \
	tset_midpointmode_and_print.sh tset_midpointmode.sh \
	tset_points_and_print.sh tset_points.sh tset_prec_and_print.sh \
	tset_prec.sh tset_rationalmode_and_print.sh \
	tset_rationalmode.sh tset_roundingwarnings_and_print.sh \
	tset_roundingwarnings.sh tset_showmessagenumbers_and_print.sh \
	tset_showmessagenumbers.sh tset_taylorrecursions_and_print.sh \
	tset_taylorrecursions.sh tset_timing_and_print.sh \
	tset_timing.sh tset_verbosity_and_print.sh tset_verbosity.sh \
	tsimplify.sh tsin.sh tsingle.sh tsingle_obj.sh tsinh.sh \
	tsort.sh tsqrt.sh tstring.sh tstring_list_ops.sh tsub.sh \
	tsup.sh tsubpoly.sh tsubstitute.sh ttail.sh ttan.sh ttanh.sh \
	ttriple_double.sh ttriple_double_obj.sh ttrue.sh \
	tv_build_end_elliptic_list.sh tv_build_list.sh \
	tv_decompose_function.sh tv_fpminimax.sh \
	tv_get_subfunctions.sh tv_implementpoly.sh tv_max.sh tv_min.sh \
	tv_remez.sh tvoid.sh
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_CFLAGS = @AM_CFLAGS@
AM_CPPFLAGS = @AM_CPPFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = @AM_LDFLAGS@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XML2CONFIG = @XML2CONFIG@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
TESTFILES = tabs.c \
tabsolute.c \
tacos.c \
tacosh.c \
tadd.c \
tand.c \
tappend.c \
tasin.c \
tasinh.c \
tasciiplot.c \
tatan.c \
tatanh.c \
tbashexecute.c \
tbinary.c \
tboolean_list_ops.c \
tbuild_end_elliptic_list.c \
tbuild_function_abs.c \
tbuild_function_acos.c \
tbuild_function_acosh.c \
tbuild_function_add.c \
tbuild_function_asin.c \
tbuild_function_asinh.c \
tbuild_function_atan.c \
tbuild_function_atanh.c \
tbuild_function_ceil.c \
tbuild_function_cos.c \
tbuild_function_cosh.c \
tbuild_function_div.c \
tbuild_function_double.c \
tbuild_function_double_double.c \
tbuild_function_doubleextended.c \
tbuild_function_erf.c \
tbuild_function_erfc.c \
tbuild_function_exp.c \
tbuild_function_expm1.c \
tbuild_function_floor.c \
tbuild_function_free_variable.c \
tbuild_function_halfprecision.c \
tbuild_function_libraryconstant.c \
tbuild_function_libraryfunction.c \
tbuild_function_log10.c \
tbuild_function_log1p.c \
tbuild_function_log2.c \
tbuild_function_log.c \
tbuild_function_mul.c \
tbuild_function_nearestint.c \
tbuild_function_neg.c \
tbuild_function_pi.c \
tbuild_function_pow.c \
tbuild_function_procedurefunction.c \
tbuild_function_quad.c \
tbuild_function_sin.c \
tbuild_function_single.c \
tbuild_function_sinh.c \
tbuild_function_sqrt.c \
tbuild_function_sub.c \
tbuild_function_tan.c \
tbuild_function_tanh.c \
tbuild_function_triple_double.c \
tbuild_list.c \
tcanonical.c \
tceil.c \
tcheckinfnorm.c \
tcmp_equal.c \
tcmp_greater.c \
tcmp_greater_equal.c \
tcmp_in.c \
tcmp_less.c \
tcmp_less_equal.c \
tcmp_not_equal.c \
tcmp_objs_structurally.c \
tcoeff.c \
tconcat.c \
tconstant.c \
tconstant_from_double.c \
tconstant_from_int64.c \
tconstant_from_int.c \
tconstant_from_mpq.c \
tconstant_from_mpz.c \
tconstant_from_uint64.c \
tconstant_list_ops.c \
tcopy_obj.c \
tcos.c \
tcosh.c \
tcreate_structure.c \
tdecimal.c \
tdecompose_function.c \
tdecompose_libraryconstant.c \
tdecompose_libraryfunction.c \
tdecompose_procedurefunction.c \
tdefault.c \
tdegree.c \
tdenominator.c \
tdiff.c \
tdirtyinfnorm.c \
tdirtyintegral.c \
tdirtysimplify.c \
tdiv.c \
tdouble.c \
tdouble_double.c \
tdouble_double_obj.c \
tdoubleextended.c \
tdoubleextended_obj.c \
tdouble_obj.c \
tdyadic.c \
tend_elliptic_list.c \
terf.c \
terfc.c \
terror.c \
tevaluate_function_at_constant_expression.c \
tevaluate_function_at_point.c \
texp.c \
texpand.c \
texpm1.c \
tfalse.c \
tfile.c \
tfixed.c \
tfloating.c \
tfloor.c \
tfpminimax.c \
tfree_variable.c \
tget_autosimplify.c \
tget_bounds_from_range.c \
tget_canonical.c \
tget_constant_as_double.c \
tget_constant_as_int.c \
tget_constant_as_int64.c \
tget_constant_as_mpq.c \
tget_constant_as_mpz.c \
tget_constant_as_uint64.c \
tget_diam.c \
tget_dieonerrormode.c \
tget_display.c \
tget_element_in_list.c \
tget_free_variable_name.c \
tget_function_arity.c \
tget_head_function.c \
tget_hopitalrecursions.c \
tget_interval_from_range.c \
tget_list_elements.c \
tget_midpointmode.c \
tget_points.c \
tget_prec.c \
tget_rationalmode.c \
tget_roundingwarnings.c \
tget_showmessagenumbers.c \
tget_string.c \
tget_structure_elements.c \
tget_subfunctions.c \
tget_element_in_structure.c \
tget_taylorrecursions.c \
tget_timing.c \
tget_verbosity.c \
thalfprecision.c \
thalfprecision_obj.c \
thead.c \
thexadecimal.c \
thonorcoeffprec.c \
thorner.c \
timplementpoly.c \
tinf.c \
tinit_with_custom_memory_functions.c \
tint_list_ops.c \
tintegral.c \
tinterval_list_ops.c \
tis_absolute.c \
tis_binary.c \
tis_decimal.c \
tis_default.c \
tis_double_double_obj.c \
tis_doubleextended_obj.c \
tis_double_obj.c \
tis_dyadic.c \
tis_false.c \
tis_file.c \
tis_fixed.c \
tis_floating.c \
tis_halfprecision_obj.c \
tis_hexadecimal.c \
tis_honorcoeffprec.c \
tis_off.c \
tis_on.c \
tis_perturb.c \
tis_pi.c \
tis_postscript.c \
tis_postscriptfile.c \
tis_powers.c \
tis_quad_obj.c \
tis_relative.c \
tis_round_down.c \
tis_round_to_nearest.c \
tis_round_towards_zero.c \
tis_round_up.c \
tis_single_obj.c \
tis_triple_double_obj.c \
tis_true.c \
tis_void.c \
tlength.c \
tlibraryconstant.c \
tlibraryfunction.c \
tlist.c \
tlog10.c \
tlog1p.c \
tlog2.c \
tlog.c \
tmacros_build_function.c \
tmantissa_and_exponent.c \
tmax.c \
tmid.c \
tmin.c \
tmsg_callback_functions.c \
tmul.c \
tname_free_variable.c \
tnearestint.c \
tneg.c \
tnegate.c \
tnumberroots.c \
tnumerator.c \
tobj_is_end_elliptic_list.c \
tobj_is_error.c \
tobj_is_function.c \
tobj_is_list.c \
tobj_is_range.c \
tobj_is_string.c \
tobj_is_structure.c \
tobject_list_ops.c \
toff.c \
ton.c \
tor.c \
tperturb.c \
tpi.c \
tpostscript.c \
tpostscriptfile.c \
tpow.c \
tpowers.c \
tprecision.c \
tprepend.c \
tprintdouble.c \
tprintexpansion.c \
tprintf.c \
tprintsingle.c \
tprocedurefunction.c \
tquad.c \
tquad_obj.c \
trange_from_bounds.c \
trange_from_interval.c \
trationalapprox.c \
trelative.c \
tremez.c \
trevert.c \
tround_down.c \
tround_to_nearest.c \
tround_towards_zero.c \
tround_up.c \
troundcoefficients.c \
tsearchgal.c \
tset_autosimplify_and_print.c \
tset_autosimplify.c \
tset_canonical_and_print.c \
tset_canonical.c \
tset_diam_and_print.c \
tset_diam.c \
tset_dieonerrormode_and_print.c \
tset_dieonerrormode.c \
tset_display_and_print.c \
tset_display.c \
tset_hopitalrecursions_and_print.c \
tset_hopitalrecursions.c \
tset_midpointmode_and_print.c \
tset_midpointmode.c \
tset_points_and_print.c \
tset_points.c \
tset_prec_and_print.c \
tset_prec.c \
tset_rationalmode_and_print.c \
tset_rationalmode.c \
tset_roundingwarnings_and_print.c \
tset_roundingwarnings.c \
tset_showmessagenumbers_and_print.c \
tset_showmessagenumbers.c \
tset_taylorrecursions_and_print.c \
tset_taylorrecursions.c \
tset_timing_and_print.c \
tset_timing.c \
tset_verbosity_and_print.c \
tset_verbosity.c \
tsimplify.c \
tsin.c \
tsingle.c \
tsingle_obj.c \
tsinh.c \
tsort.c \
tsqrt.c \
tstring.c \
tstring_list_ops.c \
tsub.c \
tsup.c \
tsubpoly.c \
tsubstitute.c \
ttail.c \
ttan.c \
ttanh.c \
ttriple_double.c \
ttriple_double_obj.c \
ttrue.c \
tv_build_end_elliptic_list.c \
tv_build_list.c \
tv_decompose_function.c \
tv_fpminimax.c \
tv_get_subfunctions.c \
tv_implementpoly.c \
tv_max.c \
tv_min.c \
tv_remez.c \
tvoid.c

EXTRA_DIST = check.proto $(TESTFILES) $(TESTFILES:.c=.reference)
check_LIBRARIES = libraryexample.a # libraryexample.a will be a shared library actually,
LDADD = $(top_builddir)/.libs/libsollya.la -lstdc++
MOSTLYCLEANFILES = $(TESTS) libraryexample.a
force_compilation_SOURCES = 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests-lib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests-lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLIBRARIES:
	-test -z "$(check_LIBRARIES)" || rm -f $(check_LIBRARIES)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

tabs$(EXEEXT): $(tabs_OBJECTS) $(tabs_DEPENDENCIES) $(EXTRA_tabs_DEPENDENCIES) 
	@rm -f tabs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tabs_OBJECTS) $(tabs_LDADD) $(LIBS)

tabsolute$(EXEEXT): $(tabsolute_OBJECTS) $(tabsolute_DEPENDENCIES) $(EXTRA_tabsolute_DEPENDENCIES) 
	@rm -f tabsolute$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tabsolute_OBJECTS) $(tabsolute_LDADD) $(LIBS)

tacos$(EXEEXT): $(tacos_OBJECTS) $(tacos_DEPENDENCIES) $(EXTRA_tacos_DEPENDENCIES) 
	@rm -f tacos$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tacos_OBJECTS) $(tacos_LDADD) $(LIBS)

tacosh$(EXEEXT): $(tacosh_OBJECTS) $(tacosh_DEPENDENCIES) $(EXTRA_tacosh_DEPENDENCIES) 
	@rm -f tacosh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tacosh_OBJECTS) $(tacosh_LDADD) $(LIBS)

tadd$(EXEEXT): $(tadd_OBJECTS) $(tadd_DEPENDENCIES) $(EXTRA_tadd_DEPENDENCIES) 
	@rm -f tadd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tadd_OBJECTS) $(tadd_LDADD) $(LIBS)

tand$(EXEEXT): $(tand_OBJECTS) $(tand_DEPENDENCIES) $(EXTRA_tand_DEPENDENCIES) 
	@rm -f tand$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tand_OBJECTS) $(tand_LDADD) $(LIBS)

tappend$(EXEEXT): $(tappend_OBJECTS) $(tappend_DEPENDENCIES) $(EXTRA_tappend_DEPENDENCIES) 
	@rm -f tappend$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tappend_OBJECTS) $(tappend_LDADD) $(LIBS)

tasciiplot$(EXEEXT): $(tasciiplot_OBJECTS) $(tasciiplot_DEPENDENCIES) $(EXTRA_tasciiplot_DEPENDENCIES) 
	@rm -f tasciiplot$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tasciiplot_OBJECTS) $(tasciiplot_LDADD) $(LIBS)

tasin$(EXEEXT): $(tasin_OBJECTS) $(tasin_DEPENDENCIES) $(EXTRA_tasin_DEPENDENCIES) 
	@rm -f tasin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tasin_OBJECTS) $(tasin_LDADD) $(LIBS)

tasinh$(EXEEXT): $(tasinh_OBJECTS) $(tasinh_DEPENDENCIES) $(EXTRA_tasinh_DEPENDENCIES) 
	@rm -f tasinh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tasinh_OBJECTS) $(tasinh_LDADD) $(LIBS)

tatan$(EXEEXT): $(tatan_OBJECTS) $(tatan_DEPENDENCIES) $(EXTRA_tatan_DEPENDENCIES) 
	@rm -f tatan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tatan_OBJECTS) $(tatan_LDADD) $(LIBS)

tatanh$(EXEEXT): $(tatanh_OBJECTS) $(tatanh_DEPENDENCIES) $(EXTRA_tatanh_DEPENDENCIES) 
	@rm -f tatanh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tatanh_OBJECTS) $(tatanh_LDADD) $(LIBS)

tbashexecute$(EXEEXT): $(tbashexecute_OBJECTS) $(tbashexecute_DEPENDENCIES) $(EXTRA_tbashexecute_DEPENDENCIES) 
	@rm -f tbashexecute$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbashexecute_OBJECTS) $(tbashexecute_LDADD) $(LIBS)

tbinary$(EXEEXT): $(tbinary_OBJECTS) $(tbinary_DEPENDENCIES) $(EXTRA_tbinary_DEPENDENCIES) 
	@rm -f tbinary$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbinary_OBJECTS) $(tbinary_LDADD) $(LIBS)

tboolean_list_ops$(EXEEXT): $(tboolean_list_ops_OBJECTS) $(tboolean_list_ops_DEPENDENCIES) $(EXTRA_tboolean_list_ops_DEPENDENCIES) 
	@rm -f tboolean_list_ops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tboolean_list_ops_OBJECTS) $(tboolean_list_ops_LDADD) $(LIBS)

tbuild_end_elliptic_list$(EXEEXT): $(tbuild_end_elliptic_list_OBJECTS) $(tbuild_end_elliptic_list_DEPENDENCIES) $(EXTRA_tbuild_end_elliptic_list_DEPENDENCIES) 
	@rm -f tbuild_end_elliptic_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_end_elliptic_list_OBJECTS) $(tbuild_end_elliptic_list_LDADD) $(LIBS)

tbuild_function_abs$(EXEEXT): $(tbuild_function_abs_OBJECTS) $(tbuild_function_abs_DEPENDENCIES) $(EXTRA_tbuild_function_abs_DEPENDENCIES) 
	@rm -f tbuild_function_abs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_abs_OBJECTS) $(tbuild_function_abs_LDADD) $(LIBS)

tbuild_function_acos$(EXEEXT): $(tbuild_function_acos_OBJECTS) $(tbuild_function_acos_DEPENDENCIES) $(EXTRA_tbuild_function_acos_DEPENDENCIES) 
	@rm -f tbuild_function_acos$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_acos_OBJECTS) $(tbuild_function_acos_LDADD) $(LIBS)

tbuild_function_acosh$(EXEEXT): $(tbuild_function_acosh_OBJECTS) $(tbuild_function_acosh_DEPENDENCIES) $(EXTRA_tbuild_function_acosh_DEPENDENCIES) 
	@rm -f tbuild_function_acosh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_acosh_OBJECTS) $(tbuild_function_acosh_LDADD) $(LIBS)

tbuild_function_add$(EXEEXT): $(tbuild_function_add_OBJECTS) $(tbuild_function_add_DEPENDENCIES) $(EXTRA_tbuild_function_add_DEPENDENCIES) 
	@rm -f tbuild_function_add$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_add_OBJECTS) $(tbuild_function_add_LDADD) $(LIBS)

tbuild_function_asin$(EXEEXT): $(tbuild_function_asin_OBJECTS) $(tbuild_function_asin_DEPENDENCIES) $(EXTRA_tbuild_function_asin_DEPENDENCIES) 
	@rm -f tbuild_function_asin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_asin_OBJECTS) $(tbuild_function_asin_LDADD) $(LIBS)

tbuild_function_asinh$(EXEEXT): $(tbuild_function_asinh_OBJECTS) $(tbuild_function_asinh_DEPENDENCIES) $(EXTRA_tbuild_function_asinh_DEPENDENCIES) 
	@rm -f tbuild_function_asinh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_asinh_OBJECTS) $(tbuild_function_asinh_LDADD) $(LIBS)

tbuild_function_atan$(EXEEXT): $(tbuild_function_atan_OBJECTS) $(tbuild_function_atan_DEPENDENCIES) $(EXTRA_tbuild_function_atan_DEPENDENCIES) 
	@rm -f tbuild_function_atan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_atan_OBJECTS) $(tbuild_function_atan_LDADD) $(LIBS)

tbuild_function_atanh$(EXEEXT): $(tbuild_function_atanh_OBJECTS) $(tbuild_function_atanh_DEPENDENCIES) $(EXTRA_tbuild_function_atanh_DEPENDENCIES) 
	@rm -f tbuild_function_atanh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_atanh_OBJECTS) $(tbuild_function_atanh_LDADD) $(LIBS)

tbuild_function_ceil$(EXEEXT): $(tbuild_function_ceil_OBJECTS) $(tbuild_function_ceil_DEPENDENCIES) $(EXTRA_tbuild_function_ceil_DEPENDENCIES) 
	@rm -f tbuild_function_ceil$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_ceil_OBJECTS) $(tbuild_function_ceil_LDADD) $(LIBS)

tbuild_function_cos$(EXEEXT): $(tbuild_function_cos_OBJECTS) $(tbuild_function_cos_DEPENDENCIES) $(EXTRA_tbuild_function_cos_DEPENDENCIES) 
	@rm -f tbuild_function_cos$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_cos_OBJECTS) $(tbuild_function_cos_LDADD) $(LIBS)

tbuild_function_cosh$(EXEEXT): $(tbuild_function_cosh_OBJECTS) $(tbuild_function_cosh_DEPENDENCIES) $(EXTRA_tbuild_function_cosh_DEPENDENCIES) 
	@rm -f tbuild_function_cosh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_cosh_OBJECTS) $(tbuild_function_cosh_LDADD) $(LIBS)

tbuild_function_div$(EXEEXT): $(tbuild_function_div_OBJECTS) $(tbuild_function_div_DEPENDENCIES) $(EXTRA_tbuild_function_div_DEPENDENCIES) 
	@rm -f tbuild_function_div$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_div_OBJECTS) $(tbuild_function_div_LDADD) $(LIBS)

tbuild_function_double$(EXEEXT): $(tbuild_function_double_OBJECTS) $(tbuild_function_double_DEPENDENCIES) $(EXTRA_tbuild_function_double_DEPENDENCIES) 
	@rm -f tbuild_function_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_double_OBJECTS) $(tbuild_function_double_LDADD) $(LIBS)

tbuild_function_double_double$(EXEEXT): $(tbuild_function_double_double_OBJECTS) $(tbuild_function_double_double_DEPENDENCIES) $(EXTRA_tbuild_function_double_double_DEPENDENCIES) 
	@rm -f tbuild_function_double_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_double_double_OBJECTS) $(tbuild_function_double_double_LDADD) $(LIBS)

tbuild_function_doubleextended$(EXEEXT): $(tbuild_function_doubleextended_OBJECTS) $(tbuild_function_doubleextended_DEPENDENCIES) $(EXTRA_tbuild_function_doubleextended_DEPENDENCIES) 
	@rm -f tbuild_function_doubleextended$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_doubleextended_OBJECTS) $(tbuild_function_doubleextended_LDADD) $(LIBS)

tbuild_function_erf$(EXEEXT): $(tbuild_function_erf_OBJECTS) $(tbuild_function_erf_DEPENDENCIES) $(EXTRA_tbuild_function_erf_DEPENDENCIES) 
	@rm -f tbuild_function_erf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_erf_OBJECTS) $(tbuild_function_erf_LDADD) $(LIBS)

tbuild_function_erfc$(EXEEXT): $(tbuild_function_erfc_OBJECTS) $(tbuild_function_erfc_DEPENDENCIES) $(EXTRA_tbuild_function_erfc_DEPENDENCIES) 
	@rm -f tbuild_function_erfc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_erfc_OBJECTS) $(tbuild_function_erfc_LDADD) $(LIBS)

tbuild_function_exp$(EXEEXT): $(tbuild_function_exp_OBJECTS) $(tbuild_function_exp_DEPENDENCIES) $(EXTRA_tbuild_function_exp_DEPENDENCIES) 
	@rm -f tbuild_function_exp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_exp_OBJECTS) $(tbuild_function_exp_LDADD) $(LIBS)

tbuild_function_expm1$(EXEEXT): $(tbuild_function_expm1_OBJECTS) $(tbuild_function_expm1_DEPENDENCIES) $(EXTRA_tbuild_function_expm1_DEPENDENCIES) 
	@rm -f tbuild_function_expm1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_expm1_OBJECTS) $(tbuild_function_expm1_LDADD) $(LIBS)

tbuild_function_floor$(EXEEXT): $(tbuild_function_floor_OBJECTS) $(tbuild_function_floor_DEPENDENCIES) $(EXTRA_tbuild_function_floor_DEPENDENCIES) 
	@rm -f tbuild_function_floor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_floor_OBJECTS) $(tbuild_function_floor_LDADD) $(LIBS)

tbuild_function_free_variable$(EXEEXT): $(tbuild_function_free_variable_OBJECTS) $(tbuild_function_free_variable_DEPENDENCIES) $(EXTRA_tbuild_function_free_variable_DEPENDENCIES) 
	@rm -f tbuild_function_free_variable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_free_variable_OBJECTS) $(tbuild_function_free_variable_LDADD) $(LIBS)

tbuild_function_halfprecision$(EXEEXT): $(tbuild_function_halfprecision_OBJECTS) $(tbuild_function_halfprecision_DEPENDENCIES) $(EXTRA_tbuild_function_halfprecision_DEPENDENCIES) 
	@rm -f tbuild_function_halfprecision$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_halfprecision_OBJECTS) $(tbuild_function_halfprecision_LDADD) $(LIBS)

tbuild_function_libraryconstant$(EXEEXT): $(tbuild_function_libraryconstant_OBJECTS) $(tbuild_function_libraryconstant_DEPENDENCIES) $(EXTRA_tbuild_function_libraryconstant_DEPENDENCIES) 
	@rm -f tbuild_function_libraryconstant$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_libraryconstant_OBJECTS) $(tbuild_function_libraryconstant_LDADD) $(LIBS)

tbuild_function_libraryfunction$(EXEEXT): $(tbuild_function_libraryfunction_OBJECTS) $(tbuild_function_libraryfunction_DEPENDENCIES) $(EXTRA_tbuild_function_libraryfunction_DEPENDENCIES) 
	@rm -f tbuild_function_libraryfunction$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_libraryfunction_OBJECTS) $(tbuild_function_libraryfunction_LDADD) $(LIBS)

tbuild_function_log$(EXEEXT): $(tbuild_function_log_OBJECTS) $(tbuild_function_log_DEPENDENCIES) $(EXTRA_tbuild_function_log_DEPENDENCIES) 
	@rm -f tbuild_function_log$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_log_OBJECTS) $(tbuild_function_log_LDADD) $(LIBS)

tbuild_function_log10$(EXEEXT): $(tbuild_function_log10_OBJECTS) $(tbuild_function_log10_DEPENDENCIES) $(EXTRA_tbuild_function_log10_DEPENDENCIES) 
	@rm -f tbuild_function_log10$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_log10_OBJECTS) $(tbuild_function_log10_LDADD) $(LIBS)

tbuild_function_log1p$(EXEEXT): $(tbuild_function_log1p_OBJECTS) $(tbuild_function_log1p_DEPENDENCIES) $(EXTRA_tbuild_function_log1p_DEPENDENCIES) 
	@rm -f tbuild_function_log1p$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_log1p_OBJECTS) $(tbuild_function_log1p_LDADD) $(LIBS)

tbuild_function_log2$(EXEEXT): $(tbuild_function_log2_OBJECTS) $(tbuild_function_log2_DEPENDENCIES) $(EXTRA_tbuild_function_log2_DEPENDENCIES) 
	@rm -f tbuild_function_log2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_log2_OBJECTS) $(tbuild_function_log2_LDADD) $(LIBS)

tbuild_function_mul$(EXEEXT): $(tbuild_function_mul_OBJECTS) $(tbuild_function_mul_DEPENDENCIES) $(EXTRA_tbuild_function_mul_DEPENDENCIES) 
	@rm -f tbuild_function_mul$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_mul_OBJECTS) $(tbuild_function_mul_LDADD) $(LIBS)

tbuild_function_nearestint$(EXEEXT): $(tbuild_function_nearestint_OBJECTS) $(tbuild_function_nearestint_DEPENDENCIES) $(EXTRA_tbuild_function_nearestint_DEPENDENCIES) 
	@rm -f tbuild_function_nearestint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_nearestint_OBJECTS) $(tbuild_function_nearestint_LDADD) $(LIBS)

tbuild_function_neg$(EXEEXT): $(tbuild_function_neg_OBJECTS) $(tbuild_function_neg_DEPENDENCIES) $(EXTRA_tbuild_function_neg_DEPENDENCIES) 
	@rm -f tbuild_function_neg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_neg_OBJECTS) $(tbuild_function_neg_LDADD) $(LIBS)

tbuild_function_pi$(EXEEXT): $(tbuild_function_pi_OBJECTS) $(tbuild_function_pi_DEPENDENCIES) $(EXTRA_tbuild_function_pi_DEPENDENCIES) 
	@rm -f tbuild_function_pi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_pi_OBJECTS) $(tbuild_function_pi_LDADD) $(LIBS)

tbuild_function_pow$(EXEEXT): $(tbuild_function_pow_OBJECTS) $(tbuild_function_pow_DEPENDENCIES) $(EXTRA_tbuild_function_pow_DEPENDENCIES) 
	@rm -f tbuild_function_pow$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_pow_OBJECTS) $(tbuild_function_pow_LDADD) $(LIBS)

tbuild_function_procedurefunction$(EXEEXT): $(tbuild_function_procedurefunction_OBJECTS) $(tbuild_function_procedurefunction_DEPENDENCIES) $(EXTRA_tbuild_function_procedurefunction_DEPENDENCIES) 
	@rm -f tbuild_function_procedurefunction$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_procedurefunction_OBJECTS) $(tbuild_function_procedurefunction_LDADD) $(LIBS)

tbuild_function_quad$(EXEEXT): $(tbuild_function_quad_OBJECTS) $(tbuild_function_quad_DEPENDENCIES) $(EXTRA_tbuild_function_quad_DEPENDENCIES) 
	@rm -f tbuild_function_quad$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_quad_OBJECTS) $(tbuild_function_quad_LDADD) $(LIBS)

tbuild_function_sin$(EXEEXT): $(tbuild_function_sin_OBJECTS) $(tbuild_function_sin_DEPENDENCIES) $(EXTRA_tbuild_function_sin_DEPENDENCIES) 
	@rm -f tbuild_function_sin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_sin_OBJECTS) $(tbuild_function_sin_LDADD) $(LIBS)

tbuild_function_single$(EXEEXT): $(tbuild_function_single_OBJECTS) $(tbuild_function_single_DEPENDENCIES) $(EXTRA_tbuild_function_single_DEPENDENCIES) 
	@rm -f tbuild_function_single$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_single_OBJECTS) $(tbuild_function_single_LDADD) $(LIBS)

tbuild_function_sinh$(EXEEXT): $(tbuild_function_sinh_OBJECTS) $(tbuild_function_sinh_DEPENDENCIES) $(EXTRA_tbuild_function_sinh_DEPENDENCIES) 
	@rm -f tbuild_function_sinh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_sinh_OBJECTS) $(tbuild_function_sinh_LDADD) $(LIBS)

tbuild_function_sqrt$(EXEEXT): $(tbuild_function_sqrt_OBJECTS) $(tbuild_function_sqrt_DEPENDENCIES) $(EXTRA_tbuild_function_sqrt_DEPENDENCIES) 
	@rm -f tbuild_function_sqrt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_sqrt_OBJECTS) $(tbuild_function_sqrt_LDADD) $(LIBS)

tbuild_function_sub$(EXEEXT): $(tbuild_function_sub_OBJECTS) $(tbuild_function_sub_DEPENDENCIES) $(EXTRA_tbuild_function_sub_DEPENDENCIES) 
	@rm -f tbuild_function_sub$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_sub_OBJECTS) $(tbuild_function_sub_LDADD) $(LIBS)

tbuild_function_tan$(EXEEXT): $(tbuild_function_tan_OBJECTS) $(tbuild_function_tan_DEPENDENCIES) $(EXTRA_tbuild_function_tan_DEPENDENCIES) 
	@rm -f tbuild_function_tan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_tan_OBJECTS) $(tbuild_function_tan_LDADD) $(LIBS)

tbuild_function_tanh$(EXEEXT): $(tbuild_function_tanh_OBJECTS) $(tbuild_function_tanh_DEPENDENCIES) $(EXTRA_tbuild_function_tanh_DEPENDENCIES) 
	@rm -f tbuild_function_tanh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_tanh_OBJECTS) $(tbuild_function_tanh_LDADD) $(LIBS)

tbuild_function_triple_double$(EXEEXT): $(tbuild_function_triple_double_OBJECTS) $(tbuild_function_triple_double_DEPENDENCIES) $(EXTRA_tbuild_function_triple_double_DEPENDENCIES) 
	@rm -f tbuild_function_triple_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_function_triple_double_OBJECTS) $(tbuild_function_triple_double_LDADD) $(LIBS)

tbuild_list$(EXEEXT): $(tbuild_list_OBJECTS) $(tbuild_list_DEPENDENCIES) $(EXTRA_tbuild_list_DEPENDENCIES) 
	@rm -f tbuild_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tbuild_list_OBJECTS) $(tbuild_list_LDADD) $(LIBS)

tcanonical$(EXEEXT): $(tcanonical_OBJECTS) $(tcanonical_DEPENDENCIES) $(EXTRA_tcanonical_DEPENDENCIES) 
	@rm -f tcanonical$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcanonical_OBJECTS) $(tcanonical_LDADD) $(LIBS)

tceil$(EXEEXT): $(tceil_OBJECTS) $(tceil_DEPENDENCIES) $(EXTRA_tceil_DEPENDENCIES) 
	@rm -f tceil$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tceil_OBJECTS) $(tceil_LDADD) $(LIBS)

tcheckinfnorm$(EXEEXT): $(tcheckinfnorm_OBJECTS) $(tcheckinfnorm_DEPENDENCIES) $(EXTRA_tcheckinfnorm_DEPENDENCIES) 
	@rm -f tcheckinfnorm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcheckinfnorm_OBJECTS) $(tcheckinfnorm_LDADD) $(LIBS)

tcmp_equal$(EXEEXT): $(tcmp_equal_OBJECTS) $(tcmp_equal_DEPENDENCIES) $(EXTRA_tcmp_equal_DEPENDENCIES) 
	@rm -f tcmp_equal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcmp_equal_OBJECTS) $(tcmp_equal_LDADD) $(LIBS)

tcmp_greater$(EXEEXT): $(tcmp_greater_OBJECTS) $(tcmp_greater_DEPENDENCIES) $(EXTRA_tcmp_greater_DEPENDENCIES) 
	@rm -f tcmp_greater$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcmp_greater_OBJECTS) $(tcmp_greater_LDADD) $(LIBS)

tcmp_greater_equal$(EXEEXT): $(tcmp_greater_equal_OBJECTS) $(tcmp_greater_equal_DEPENDENCIES) $(EXTRA_tcmp_greater_equal_DEPENDENCIES) 
	@rm -f tcmp_greater_equal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcmp_greater_equal_OBJECTS) $(tcmp_greater_equal_LDADD) $(LIBS)

tcmp_in$(EXEEXT): $(tcmp_in_OBJECTS) $(tcmp_in_DEPENDENCIES) $(EXTRA_tcmp_in_DEPENDENCIES) 
	@rm -f tcmp_in$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcmp_in_OBJECTS) $(tcmp_in_LDADD) $(LIBS)

tcmp_less$(EXEEXT): $(tcmp_less_OBJECTS) $(tcmp_less_DEPENDENCIES) $(EXTRA_tcmp_less_DEPENDENCIES) 
	@rm -f tcmp_less$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcmp_less_OBJECTS) $(tcmp_less_LDADD) $(LIBS)

tcmp_less_equal$(EXEEXT): $(tcmp_less_equal_OBJECTS) $(tcmp_less_equal_DEPENDENCIES) $(EXTRA_tcmp_less_equal_DEPENDENCIES) 
	@rm -f tcmp_less_equal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcmp_less_equal_OBJECTS) $(tcmp_less_equal_LDADD) $(LIBS)

tcmp_not_equal$(EXEEXT): $(tcmp_not_equal_OBJECTS) $(tcmp_not_equal_DEPENDENCIES) $(EXTRA_tcmp_not_equal_DEPENDENCIES) 
	@rm -f tcmp_not_equal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcmp_not_equal_OBJECTS) $(tcmp_not_equal_LDADD) $(LIBS)

tcmp_objs_structurally$(EXEEXT): $(tcmp_objs_structurally_OBJECTS) $(tcmp_objs_structurally_DEPENDENCIES) $(EXTRA_tcmp_objs_structurally_DEPENDENCIES) 
	@rm -f tcmp_objs_structurally$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcmp_objs_structurally_OBJECTS) $(tcmp_objs_structurally_LDADD) $(LIBS)

tcoeff$(EXEEXT): $(tcoeff_OBJECTS) $(tcoeff_DEPENDENCIES) $(EXTRA_tcoeff_DEPENDENCIES) 
	@rm -f tcoeff$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcoeff_OBJECTS) $(tcoeff_LDADD) $(LIBS)

tconcat$(EXEEXT): $(tconcat_OBJECTS) $(tconcat_DEPENDENCIES) $(EXTRA_tconcat_DEPENDENCIES) 
	@rm -f tconcat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tconcat_OBJECTS) $(tconcat_LDADD) $(LIBS)

tconstant$(EXEEXT): $(tconstant_OBJECTS) $(tconstant_DEPENDENCIES) $(EXTRA_tconstant_DEPENDENCIES) 
	@rm -f tconstant$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tconstant_OBJECTS) $(tconstant_LDADD) $(LIBS)

tconstant_from_double$(EXEEXT): $(tconstant_from_double_OBJECTS) $(tconstant_from_double_DEPENDENCIES) $(EXTRA_tconstant_from_double_DEPENDENCIES) 
	@rm -f tconstant_from_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tconstant_from_double_OBJECTS) $(tconstant_from_double_LDADD) $(LIBS)

tconstant_from_int$(EXEEXT): $(tconstant_from_int_OBJECTS) $(tconstant_from_int_DEPENDENCIES) $(EXTRA_tconstant_from_int_DEPENDENCIES) 
	@rm -f tconstant_from_int$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tconstant_from_int_OBJECTS) $(tconstant_from_int_LDADD) $(LIBS)

tconstant_from_int64$(EXEEXT): $(tconstant_from_int64_OBJECTS) $(tconstant_from_int64_DEPENDENCIES) $(EXTRA_tconstant_from_int64_DEPENDENCIES) 
	@rm -f tconstant_from_int64$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tconstant_from_int64_OBJECTS) $(tconstant_from_int64_LDADD) $(LIBS)

tconstant_from_mpq$(EXEEXT): $(tconstant_from_mpq_OBJECTS) $(tconstant_from_mpq_DEPENDENCIES) $(EXTRA_tconstant_from_mpq_DEPENDENCIES) 
	@rm -f tconstant_from_mpq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tconstant_from_mpq_OBJECTS) $(tconstant_from_mpq_LDADD) $(LIBS)

tconstant_from_mpz$(EXEEXT): $(tconstant_from_mpz_OBJECTS) $(tconstant_from_mpz_DEPENDENCIES) $(EXTRA_tconstant_from_mpz_DEPENDENCIES) 
	@rm -f tconstant_from_mpz$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tconstant_from_mpz_OBJECTS) $(tconstant_from_mpz_LDADD) $(LIBS)

tconstant_from_uint64$(EXEEXT): $(tconstant_from_uint64_OBJECTS) $(tconstant_from_uint64_DEPENDENCIES) $(EXTRA_tconstant_from_uint64_DEPENDENCIES) 
	@rm -f tconstant_from_uint64$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tconstant_from_uint64_OBJECTS) $(tconstant_from_uint64_LDADD) $(LIBS)

tconstant_list_ops$(EXEEXT): $(tconstant_list_ops_OBJECTS) $(tconstant_list_ops_DEPENDENCIES) $(EXTRA_tconstant_list_ops_DEPENDENCIES) 
	@rm -f tconstant_list_ops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tconstant_list_ops_OBJECTS) $(tconstant_list_ops_LDADD) $(LIBS)

tcopy_obj$(EXEEXT): $(tcopy_obj_OBJECTS) $(tcopy_obj_DEPENDENCIES) $(EXTRA_tcopy_obj_DEPENDENCIES) 
	@rm -f tcopy_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcopy_obj_OBJECTS) $(tcopy_obj_LDADD) $(LIBS)

tcos$(EXEEXT): $(tcos_OBJECTS) $(tcos_DEPENDENCIES) $(EXTRA_tcos_DEPENDENCIES) 
	@rm -f tcos$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcos_OBJECTS) $(tcos_LDADD) $(LIBS)

tcosh$(EXEEXT): $(tcosh_OBJECTS) $(tcosh_DEPENDENCIES) $(EXTRA_tcosh_DEPENDENCIES) 
	@rm -f tcosh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcosh_OBJECTS) $(tcosh_LDADD) $(LIBS)

tcreate_structure$(EXEEXT): $(tcreate_structure_OBJECTS) $(tcreate_structure_DEPENDENCIES) $(EXTRA_tcreate_structure_DEPENDENCIES) 
	@rm -f tcreate_structure$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcreate_structure_OBJECTS) $(tcreate_structure_LDADD) $(LIBS)

tdecimal$(EXEEXT): $(tdecimal_OBJECTS) $(tdecimal_DEPENDENCIES) $(EXTRA_tdecimal_DEPENDENCIES) 
	@rm -f tdecimal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdecimal_OBJECTS) $(tdecimal_LDADD) $(LIBS)

tdecompose_function$(EXEEXT): $(tdecompose_function_OBJECTS) $(tdecompose_function_DEPENDENCIES) $(EXTRA_tdecompose_function_DEPENDENCIES) 
	@rm -f tdecompose_function$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdecompose_function_OBJECTS) $(tdecompose_function_LDADD) $(LIBS)

tdecompose_libraryconstant$(EXEEXT): $(tdecompose_libraryconstant_OBJECTS) $(tdecompose_libraryconstant_DEPENDENCIES) $(EXTRA_tdecompose_libraryconstant_DEPENDENCIES) 
	@rm -f tdecompose_libraryconstant$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdecompose_libraryconstant_OBJECTS) $(tdecompose_libraryconstant_LDADD) $(LIBS)

tdecompose_libraryfunction$(EXEEXT): $(tdecompose_libraryfunction_OBJECTS) $(tdecompose_libraryfunction_DEPENDENCIES) $(EXTRA_tdecompose_libraryfunction_DEPENDENCIES) 
	@rm -f tdecompose_libraryfunction$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdecompose_libraryfunction_OBJECTS) $(tdecompose_libraryfunction_LDADD) $(LIBS)

tdecompose_procedurefunction$(EXEEXT): $(tdecompose_procedurefunction_OBJECTS) $(tdecompose_procedurefunction_DEPENDENCIES) $(EXTRA_tdecompose_procedurefunction_DEPENDENCIES) 
	@rm -f tdecompose_procedurefunction$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdecompose_procedurefunction_OBJECTS) $(tdecompose_procedurefunction_LDADD) $(LIBS)

tdefault$(EXEEXT): $(tdefault_OBJECTS) $(tdefault_DEPENDENCIES) $(EXTRA_tdefault_DEPENDENCIES) 
	@rm -f tdefault$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdefault_OBJECTS) $(tdefault_LDADD) $(LIBS)

tdegree$(EXEEXT): $(tdegree_OBJECTS) $(tdegree_DEPENDENCIES) $(EXTRA_tdegree_DEPENDENCIES) 
	@rm -f tdegree$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdegree_OBJECTS) $(tdegree_LDADD) $(LIBS)

tdenominator$(EXEEXT): $(tdenominator_OBJECTS) $(tdenominator_DEPENDENCIES) $(EXTRA_tdenominator_DEPENDENCIES) 
	@rm -f tdenominator$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdenominator_OBJECTS) $(tdenominator_LDADD) $(LIBS)

tdiff$(EXEEXT): $(tdiff_OBJECTS) $(tdiff_DEPENDENCIES) $(EXTRA_tdiff_DEPENDENCIES) 
	@rm -f tdiff$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdiff_OBJECTS) $(tdiff_LDADD) $(LIBS)

tdirtyinfnorm$(EXEEXT): $(tdirtyinfnorm_OBJECTS) $(tdirtyinfnorm_DEPENDENCIES) $(EXTRA_tdirtyinfnorm_DEPENDENCIES) 
	@rm -f tdirtyinfnorm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdirtyinfnorm_OBJECTS) $(tdirtyinfnorm_LDADD) $(LIBS)

tdirtyintegral$(EXEEXT): $(tdirtyintegral_OBJECTS) $(tdirtyintegral_DEPENDENCIES) $(EXTRA_tdirtyintegral_DEPENDENCIES) 
	@rm -f tdirtyintegral$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdirtyintegral_OBJECTS) $(tdirtyintegral_LDADD) $(LIBS)

tdirtysimplify$(EXEEXT): $(tdirtysimplify_OBJECTS) $(tdirtysimplify_DEPENDENCIES) $(EXTRA_tdirtysimplify_DEPENDENCIES) 
	@rm -f tdirtysimplify$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdirtysimplify_OBJECTS) $(tdirtysimplify_LDADD) $(LIBS)

tdiv$(EXEEXT): $(tdiv_OBJECTS) $(tdiv_DEPENDENCIES) $(EXTRA_tdiv_DEPENDENCIES) 
	@rm -f tdiv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdiv_OBJECTS) $(tdiv_LDADD) $(LIBS)

tdouble$(EXEEXT): $(tdouble_OBJECTS) $(tdouble_DEPENDENCIES) $(EXTRA_tdouble_DEPENDENCIES) 
	@rm -f tdouble$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdouble_OBJECTS) $(tdouble_LDADD) $(LIBS)

tdouble_double$(EXEEXT): $(tdouble_double_OBJECTS) $(tdouble_double_DEPENDENCIES) $(EXTRA_tdouble_double_DEPENDENCIES) 
	@rm -f tdouble_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdouble_double_OBJECTS) $(tdouble_double_LDADD) $(LIBS)

tdouble_double_obj$(EXEEXT): $(tdouble_double_obj_OBJECTS) $(tdouble_double_obj_DEPENDENCIES) $(EXTRA_tdouble_double_obj_DEPENDENCIES) 
	@rm -f tdouble_double_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdouble_double_obj_OBJECTS) $(tdouble_double_obj_LDADD) $(LIBS)

tdouble_obj$(EXEEXT): $(tdouble_obj_OBJECTS) $(tdouble_obj_DEPENDENCIES) $(EXTRA_tdouble_obj_DEPENDENCIES) 
	@rm -f tdouble_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdouble_obj_OBJECTS) $(tdouble_obj_LDADD) $(LIBS)

tdoubleextended$(EXEEXT): $(tdoubleextended_OBJECTS) $(tdoubleextended_DEPENDENCIES) $(EXTRA_tdoubleextended_DEPENDENCIES) 
	@rm -f tdoubleextended$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdoubleextended_OBJECTS) $(tdoubleextended_LDADD) $(LIBS)

tdoubleextended_obj$(EXEEXT): $(tdoubleextended_obj_OBJECTS) $(tdoubleextended_obj_DEPENDENCIES) $(EXTRA_tdoubleextended_obj_DEPENDENCIES) 
	@rm -f tdoubleextended_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdoubleextended_obj_OBJECTS) $(tdoubleextended_obj_LDADD) $(LIBS)

tdyadic$(EXEEXT): $(tdyadic_OBJECTS) $(tdyadic_DEPENDENCIES) $(EXTRA_tdyadic_DEPENDENCIES) 
	@rm -f tdyadic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdyadic_OBJECTS) $(tdyadic_LDADD) $(LIBS)

tend_elliptic_list$(EXEEXT): $(tend_elliptic_list_OBJECTS) $(tend_elliptic_list_DEPENDENCIES) $(EXTRA_tend_elliptic_list_DEPENDENCIES) 
	@rm -f tend_elliptic_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tend_elliptic_list_OBJECTS) $(tend_elliptic_list_LDADD) $(LIBS)

terf$(EXEEXT): $(terf_OBJECTS) $(terf_DEPENDENCIES) $(EXTRA_terf_DEPENDENCIES) 
	@rm -f terf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(terf_OBJECTS) $(terf_LDADD) $(LIBS)

terfc$(EXEEXT): $(terfc_OBJECTS) $(terfc_DEPENDENCIES) $(EXTRA_terfc_DEPENDENCIES) 
	@rm -f terfc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(terfc_OBJECTS) $(terfc_LDADD) $(LIBS)

terror$(EXEEXT): $(terror_OBJECTS) $(terror_DEPENDENCIES) $(EXTRA_terror_DEPENDENCIES) 
	@rm -f terror$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(terror_OBJECTS) $(terror_LDADD) $(LIBS)

tevaluate_function_at_constant_expression$(EXEEXT): $(tevaluate_function_at_constant_expression_OBJECTS) $(tevaluate_function_at_constant_expression_DEPENDENCIES) $(EXTRA_tevaluate_function_at_constant_expression_DEPENDENCIES) 
	@rm -f tevaluate_function_at_constant_expression$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tevaluate_function_at_constant_expression_OBJECTS) $(tevaluate_function_at_constant_expression_LDADD) $(LIBS)

tevaluate_function_at_point$(EXEEXT): $(tevaluate_function_at_point_OBJECTS) $(tevaluate_function_at_point_DEPENDENCIES) $(EXTRA_tevaluate_function_at_point_DEPENDENCIES) 
	@rm -f tevaluate_function_at_point$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tevaluate_function_at_point_OBJECTS) $(tevaluate_function_at_point_LDADD) $(LIBS)

texp$(EXEEXT): $(texp_OBJECTS) $(texp_DEPENDENCIES) $(EXTRA_texp_DEPENDENCIES) 
	@rm -f texp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(texp_OBJECTS) $(texp_LDADD) $(LIBS)

texpand$(EXEEXT): $(texpand_OBJECTS) $(texpand_DEPENDENCIES) $(EXTRA_texpand_DEPENDENCIES) 
	@rm -f texpand$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(texpand_OBJECTS) $(texpand_LDADD) $(LIBS)

texpm1$(EXEEXT): $(texpm1_OBJECTS) $(texpm1_DEPENDENCIES) $(EXTRA_texpm1_DEPENDENCIES) 
	@rm -f texpm1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(texpm1_OBJECTS) $(texpm1_LDADD) $(LIBS)

tfalse$(EXEEXT): $(tfalse_OBJECTS) $(tfalse_DEPENDENCIES) $(EXTRA_tfalse_DEPENDENCIES) 
	@rm -f tfalse$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tfalse_OBJECTS) $(tfalse_LDADD) $(LIBS)

tfile$(EXEEXT): $(tfile_OBJECTS) $(tfile_DEPENDENCIES) $(EXTRA_tfile_DEPENDENCIES) 
	@rm -f tfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tfile_OBJECTS) $(tfile_LDADD) $(LIBS)

tfixed$(EXEEXT): $(tfixed_OBJECTS) $(tfixed_DEPENDENCIES) $(EXTRA_tfixed_DEPENDENCIES) 
	@rm -f tfixed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tfixed_OBJECTS) $(tfixed_LDADD) $(LIBS)

tfloating$(EXEEXT): $(tfloating_OBJECTS) $(tfloating_DEPENDENCIES) $(EXTRA_tfloating_DEPENDENCIES) 
	@rm -f tfloating$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tfloating_OBJECTS) $(tfloating_LDADD) $(LIBS)

tfloor$(EXEEXT): $(tfloor_OBJECTS) $(tfloor_DEPENDENCIES) $(EXTRA_tfloor_DEPENDENCIES) 
	@rm -f tfloor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tfloor_OBJECTS) $(tfloor_LDADD) $(LIBS)

tfpminimax$(EXEEXT): $(tfpminimax_OBJECTS) $(tfpminimax_DEPENDENCIES) $(EXTRA_tfpminimax_DEPENDENCIES) 
	@rm -f tfpminimax$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tfpminimax_OBJECTS) $(tfpminimax_LDADD) $(LIBS)

tfree_variable$(EXEEXT): $(tfree_variable_OBJECTS) $(tfree_variable_DEPENDENCIES) $(EXTRA_tfree_variable_DEPENDENCIES) 
	@rm -f tfree_variable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tfree_variable_OBJECTS) $(tfree_variable_LDADD) $(LIBS)

tget_autosimplify$(EXEEXT): $(tget_autosimplify_OBJECTS) $(tget_autosimplify_DEPENDENCIES) $(EXTRA_tget_autosimplify_DEPENDENCIES) 
	@rm -f tget_autosimplify$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_autosimplify_OBJECTS) $(tget_autosimplify_LDADD) $(LIBS)

tget_bounds_from_range$(EXEEXT): $(tget_bounds_from_range_OBJECTS) $(tget_bounds_from_range_DEPENDENCIES) $(EXTRA_tget_bounds_from_range_DEPENDENCIES) 
	@rm -f tget_bounds_from_range$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_bounds_from_range_OBJECTS) $(tget_bounds_from_range_LDADD) $(LIBS)

tget_canonical$(EXEEXT): $(tget_canonical_OBJECTS) $(tget_canonical_DEPENDENCIES) $(EXTRA_tget_canonical_DEPENDENCIES) 
	@rm -f tget_canonical$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_canonical_OBJECTS) $(tget_canonical_LDADD) $(LIBS)

tget_constant_as_double$(EXEEXT): $(tget_constant_as_double_OBJECTS) $(tget_constant_as_double_DEPENDENCIES) $(EXTRA_tget_constant_as_double_DEPENDENCIES) 
	@rm -f tget_constant_as_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_constant_as_double_OBJECTS) $(tget_constant_as_double_LDADD) $(LIBS)

tget_constant_as_int$(EXEEXT): $(tget_constant_as_int_OBJECTS) $(tget_constant_as_int_DEPENDENCIES) $(EXTRA_tget_constant_as_int_DEPENDENCIES) 
	@rm -f tget_constant_as_int$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_constant_as_int_OBJECTS) $(tget_constant_as_int_LDADD) $(LIBS)

tget_constant_as_int64$(EXEEXT): $(tget_constant_as_int64_OBJECTS) $(tget_constant_as_int64_DEPENDENCIES) $(EXTRA_tget_constant_as_int64_DEPENDENCIES) 
	@rm -f tget_constant_as_int64$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_constant_as_int64_OBJECTS) $(tget_constant_as_int64_LDADD) $(LIBS)

tget_constant_as_mpq$(EXEEXT): $(tget_constant_as_mpq_OBJECTS) $(tget_constant_as_mpq_DEPENDENCIES) $(EXTRA_tget_constant_as_mpq_DEPENDENCIES) 
	@rm -f tget_constant_as_mpq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_constant_as_mpq_OBJECTS) $(tget_constant_as_mpq_LDADD) $(LIBS)

tget_constant_as_mpz$(EXEEXT): $(tget_constant_as_mpz_OBJECTS) $(tget_constant_as_mpz_DEPENDENCIES) $(EXTRA_tget_constant_as_mpz_DEPENDENCIES) 
	@rm -f tget_constant_as_mpz$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_constant_as_mpz_OBJECTS) $(tget_constant_as_mpz_LDADD) $(LIBS)

tget_constant_as_uint64$(EXEEXT): $(tget_constant_as_uint64_OBJECTS) $(tget_constant_as_uint64_DEPENDENCIES) $(EXTRA_tget_constant_as_uint64_DEPENDENCIES) 
	@rm -f tget_constant_as_uint64$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_constant_as_uint64_OBJECTS) $(tget_constant_as_uint64_LDADD) $(LIBS)

tget_diam$(EXEEXT): $(tget_diam_OBJECTS) $(tget_diam_DEPENDENCIES) $(EXTRA_tget_diam_DEPENDENCIES) 
	@rm -f tget_diam$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_diam_OBJECTS) $(tget_diam_LDADD) $(LIBS)

tget_dieonerrormode$(EXEEXT): $(tget_dieonerrormode_OBJECTS) $(tget_dieonerrormode_DEPENDENCIES) $(EXTRA_tget_dieonerrormode_DEPENDENCIES) 
	@rm -f tget_dieonerrormode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_dieonerrormode_OBJECTS) $(tget_dieonerrormode_LDADD) $(LIBS)

tget_display$(EXEEXT): $(tget_display_OBJECTS) $(tget_display_DEPENDENCIES) $(EXTRA_tget_display_DEPENDENCIES) 
	@rm -f tget_display$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_display_OBJECTS) $(tget_display_LDADD) $(LIBS)

tget_element_in_list$(EXEEXT): $(tget_element_in_list_OBJECTS) $(tget_element_in_list_DEPENDENCIES) $(EXTRA_tget_element_in_list_DEPENDENCIES) 
	@rm -f tget_element_in_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_element_in_list_OBJECTS) $(tget_element_in_list_LDADD) $(LIBS)

tget_element_in_structure$(EXEEXT): $(tget_element_in_structure_OBJECTS) $(tget_element_in_structure_DEPENDENCIES) $(EXTRA_tget_element_in_structure_DEPENDENCIES) 
	@rm -f tget_element_in_structure$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_element_in_structure_OBJECTS) $(tget_element_in_structure_LDADD) $(LIBS)

tget_free_variable_name$(EXEEXT): $(tget_free_variable_name_OBJECTS) $(tget_free_variable_name_DEPENDENCIES) $(EXTRA_tget_free_variable_name_DEPENDENCIES) 
	@rm -f tget_free_variable_name$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_free_variable_name_OBJECTS) $(tget_free_variable_name_LDADD) $(LIBS)

tget_function_arity$(EXEEXT): $(tget_function_arity_OBJECTS) $(tget_function_arity_DEPENDENCIES) $(EXTRA_tget_function_arity_DEPENDENCIES) 
	@rm -f tget_function_arity$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_function_arity_OBJECTS) $(tget_function_arity_LDADD) $(LIBS)

tget_head_function$(EXEEXT): $(tget_head_function_OBJECTS) $(tget_head_function_DEPENDENCIES) $(EXTRA_tget_head_function_DEPENDENCIES) 
	@rm -f tget_head_function$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_head_function_OBJECTS) $(tget_head_function_LDADD) $(LIBS)

tget_hopitalrecursions$(EXEEXT): $(tget_hopitalrecursions_OBJECTS) $(tget_hopitalrecursions_DEPENDENCIES) $(EXTRA_tget_hopitalrecursions_DEPENDENCIES) 
	@rm -f tget_hopitalrecursions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_hopitalrecursions_OBJECTS) $(tget_hopitalrecursions_LDADD) $(LIBS)

tget_interval_from_range$(EXEEXT): $(tget_interval_from_range_OBJECTS) $(tget_interval_from_range_DEPENDENCIES) $(EXTRA_tget_interval_from_range_DEPENDENCIES) 
	@rm -f tget_interval_from_range$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_interval_from_range_OBJECTS) $(tget_interval_from_range_LDADD) $(LIBS)

tget_list_elements$(EXEEXT): $(tget_list_elements_OBJECTS) $(tget_list_elements_DEPENDENCIES) $(EXTRA_tget_list_elements_DEPENDENCIES) 
	@rm -f tget_list_elements$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_list_elements_OBJECTS) $(tget_list_elements_LDADD) $(LIBS)

tget_midpointmode$(EXEEXT): $(tget_midpointmode_OBJECTS) $(tget_midpointmode_DEPENDENCIES) $(EXTRA_tget_midpointmode_DEPENDENCIES) 
	@rm -f tget_midpointmode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_midpointmode_OBJECTS) $(tget_midpointmode_LDADD) $(LIBS)

tget_points$(EXEEXT): $(tget_points_OBJECTS) $(tget_points_DEPENDENCIES) $(EXTRA_tget_points_DEPENDENCIES) 
	@rm -f tget_points$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_points_OBJECTS) $(tget_points_LDADD) $(LIBS)

tget_prec$(EXEEXT): $(tget_prec_OBJECTS) $(tget_prec_DEPENDENCIES) $(EXTRA_tget_prec_DEPENDENCIES) 
	@rm -f tget_prec$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_prec_OBJECTS) $(tget_prec_LDADD) $(LIBS)

tget_rationalmode$(EXEEXT): $(tget_rationalmode_OBJECTS) $(tget_rationalmode_DEPENDENCIES) $(EXTRA_tget_rationalmode_DEPENDENCIES) 
	@rm -f tget_rationalmode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_rationalmode_OBJECTS) $(tget_rationalmode_LDADD) $(LIBS)

tget_roundingwarnings$(EXEEXT): $(tget_roundingwarnings_OBJECTS) $(tget_roundingwarnings_DEPENDENCIES) $(EXTRA_tget_roundingwarnings_DEPENDENCIES) 
	@rm -f tget_roundingwarnings$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_roundingwarnings_OBJECTS) $(tget_roundingwarnings_LDADD) $(LIBS)

tget_showmessagenumbers$(EXEEXT): $(tget_showmessagenumbers_OBJECTS) $(tget_showmessagenumbers_DEPENDENCIES) $(EXTRA_tget_showmessagenumbers_DEPENDENCIES) 
	@rm -f tget_showmessagenumbers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_showmessagenumbers_OBJECTS) $(tget_showmessagenumbers_LDADD) $(LIBS)

tget_string$(EXEEXT): $(tget_string_OBJECTS) $(tget_string_DEPENDENCIES) $(EXTRA_tget_string_DEPENDENCIES) 
	@rm -f tget_string$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_string_OBJECTS) $(tget_string_LDADD) $(LIBS)

tget_structure_elements$(EXEEXT): $(tget_structure_elements_OBJECTS) $(tget_structure_elements_DEPENDENCIES) $(EXTRA_tget_structure_elements_DEPENDENCIES) 
	@rm -f tget_structure_elements$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_structure_elements_OBJECTS) $(tget_structure_elements_LDADD) $(LIBS)

tget_subfunctions$(EXEEXT): $(tget_subfunctions_OBJECTS) $(tget_subfunctions_DEPENDENCIES) $(EXTRA_tget_subfunctions_DEPENDENCIES) 
	@rm -f tget_subfunctions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_subfunctions_OBJECTS) $(tget_subfunctions_LDADD) $(LIBS)

tget_taylorrecursions$(EXEEXT): $(tget_taylorrecursions_OBJECTS) $(tget_taylorrecursions_DEPENDENCIES) $(EXTRA_tget_taylorrecursions_DEPENDENCIES) 
	@rm -f tget_taylorrecursions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_taylorrecursions_OBJECTS) $(tget_taylorrecursions_LDADD) $(LIBS)

tget_timing$(EXEEXT): $(tget_timing_OBJECTS) $(tget_timing_DEPENDENCIES) $(EXTRA_tget_timing_DEPENDENCIES) 
	@rm -f tget_timing$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_timing_OBJECTS) $(tget_timing_LDADD) $(LIBS)

tget_verbosity$(EXEEXT): $(tget_verbosity_OBJECTS) $(tget_verbosity_DEPENDENCIES) $(EXTRA_tget_verbosity_DEPENDENCIES) 
	@rm -f tget_verbosity$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tget_verbosity_OBJECTS) $(tget_verbosity_LDADD) $(LIBS)

thalfprecision$(EXEEXT): $(thalfprecision_OBJECTS) $(thalfprecision_DEPENDENCIES) $(EXTRA_thalfprecision_DEPENDENCIES) 
	@rm -f thalfprecision$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thalfprecision_OBJECTS) $(thalfprecision_LDADD) $(LIBS)

thalfprecision_obj$(EXEEXT): $(thalfprecision_obj_OBJECTS) $(thalfprecision_obj_DEPENDENCIES) $(EXTRA_thalfprecision_obj_DEPENDENCIES) 
	@rm -f thalfprecision_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thalfprecision_obj_OBJECTS) $(thalfprecision_obj_LDADD) $(LIBS)

thead$(EXEEXT): $(thead_OBJECTS) $(thead_DEPENDENCIES) $(EXTRA_thead_DEPENDENCIES) 
	@rm -f thead$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thead_OBJECTS) $(thead_LDADD) $(LIBS)

thexadecimal$(EXEEXT): $(thexadecimal_OBJECTS) $(thexadecimal_DEPENDENCIES) $(EXTRA_thexadecimal_DEPENDENCIES) 
	@rm -f thexadecimal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thexadecimal_OBJECTS) $(thexadecimal_LDADD) $(LIBS)

thonorcoeffprec$(EXEEXT): $(thonorcoeffprec_OBJECTS) $(thonorcoeffprec_DEPENDENCIES) $(EXTRA_thonorcoeffprec_DEPENDENCIES) 
	@rm -f thonorcoeffprec$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thonorcoeffprec_OBJECTS) $(thonorcoeffprec_LDADD) $(LIBS)

thorner$(EXEEXT): $(thorner_OBJECTS) $(thorner_DEPENDENCIES) $(EXTRA_thorner_DEPENDENCIES) 
	@rm -f thorner$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thorner_OBJECTS) $(thorner_LDADD) $(LIBS)

timplementpoly$(EXEEXT): $(timplementpoly_OBJECTS) $(timplementpoly_DEPENDENCIES) $(EXTRA_timplementpoly_DEPENDENCIES) 
	@rm -f timplementpoly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(timplementpoly_OBJECTS) $(timplementpoly_LDADD) $(LIBS)

tinf$(EXEEXT): $(tinf_OBJECTS) $(tinf_DEPENDENCIES) $(EXTRA_tinf_DEPENDENCIES) 
	@rm -f tinf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinf_OBJECTS) $(tinf_LDADD) $(LIBS)

tinit_with_custom_memory_functions$(EXEEXT): $(tinit_with_custom_memory_functions_OBJECTS) $(tinit_with_custom_memory_functions_DEPENDENCIES) $(EXTRA_tinit_with_custom_memory_functions_DEPENDENCIES) 
	@rm -f tinit_with_custom_memory_functions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinit_with_custom_memory_functions_OBJECTS) $(tinit_with_custom_memory_functions_LDADD) $(LIBS)

tint_list_ops$(EXEEXT): $(tint_list_ops_OBJECTS) $(tint_list_ops_DEPENDENCIES) $(EXTRA_tint_list_ops_DEPENDENCIES) 
	@rm -f tint_list_ops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tint_list_ops_OBJECTS) $(tint_list_ops_LDADD) $(LIBS)

tintegral$(EXEEXT): $(tintegral_OBJECTS) $(tintegral_DEPENDENCIES) $(EXTRA_tintegral_DEPENDENCIES) 
	@rm -f tintegral$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tintegral_OBJECTS) $(tintegral_LDADD) $(LIBS)

tinterval_list_ops$(EXEEXT): $(tinterval_list_ops_OBJECTS) $(tinterval_list_ops_DEPENDENCIES) $(EXTRA_tinterval_list_ops_DEPENDENCIES) 
	@rm -f tinterval_list_ops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinterval_list_ops_OBJECTS) $(tinterval_list_ops_LDADD) $(LIBS)

tis_absolute$(EXEEXT): $(tis_absolute_OBJECTS) $(tis_absolute_DEPENDENCIES) $(EXTRA_tis_absolute_DEPENDENCIES) 
	@rm -f tis_absolute$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_absolute_OBJECTS) $(tis_absolute_LDADD) $(LIBS)

tis_binary$(EXEEXT): $(tis_binary_OBJECTS) $(tis_binary_DEPENDENCIES) $(EXTRA_tis_binary_DEPENDENCIES) 
	@rm -f tis_binary$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_binary_OBJECTS) $(tis_binary_LDADD) $(LIBS)

tis_decimal$(EXEEXT): $(tis_decimal_OBJECTS) $(tis_decimal_DEPENDENCIES) $(EXTRA_tis_decimal_DEPENDENCIES) 
	@rm -f tis_decimal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_decimal_OBJECTS) $(tis_decimal_LDADD) $(LIBS)

tis_default$(EXEEXT): $(tis_default_OBJECTS) $(tis_default_DEPENDENCIES) $(EXTRA_tis_default_DEPENDENCIES) 
	@rm -f tis_default$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_default_OBJECTS) $(tis_default_LDADD) $(LIBS)

tis_double_double_obj$(EXEEXT): $(tis_double_double_obj_OBJECTS) $(tis_double_double_obj_DEPENDENCIES) $(EXTRA_tis_double_double_obj_DEPENDENCIES) 
	@rm -f tis_double_double_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_double_double_obj_OBJECTS) $(tis_double_double_obj_LDADD) $(LIBS)

tis_double_obj$(EXEEXT): $(tis_double_obj_OBJECTS) $(tis_double_obj_DEPENDENCIES) $(EXTRA_tis_double_obj_DEPENDENCIES) 
	@rm -f tis_double_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_double_obj_OBJECTS) $(tis_double_obj_LDADD) $(LIBS)

tis_doubleextended_obj$(EXEEXT): $(tis_doubleextended_obj_OBJECTS) $(tis_doubleextended_obj_DEPENDENCIES) $(EXTRA_tis_doubleextended_obj_DEPENDENCIES) 
	@rm -f tis_doubleextended_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_doubleextended_obj_OBJECTS) $(tis_doubleextended_obj_LDADD) $(LIBS)

tis_dyadic$(EXEEXT): $(tis_dyadic_OBJECTS) $(tis_dyadic_DEPENDENCIES) $(EXTRA_tis_dyadic_DEPENDENCIES) 
	@rm -f tis_dyadic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_dyadic_OBJECTS) $(tis_dyadic_LDADD) $(LIBS)

tis_false$(EXEEXT): $(tis_false_OBJECTS) $(tis_false_DEPENDENCIES) $(EXTRA_tis_false_DEPENDENCIES) 
	@rm -f tis_false$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_false_OBJECTS) $(tis_false_LDADD) $(LIBS)

tis_file$(EXEEXT): $(tis_file_OBJECTS) $(tis_file_DEPENDENCIES) $(EXTRA_tis_file_DEPENDENCIES) 
	@rm -f tis_file$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_file_OBJECTS) $(tis_file_LDADD) $(LIBS)

tis_fixed$(EXEEXT): $(tis_fixed_OBJECTS) $(tis_fixed_DEPENDENCIES) $(EXTRA_tis_fixed_DEPENDENCIES) 
	@rm -f tis_fixed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_fixed_OBJECTS) $(tis_fixed_LDADD) $(LIBS)

tis_floating$(EXEEXT): $(tis_floating_OBJECTS) $(tis_floating_DEPENDENCIES) $(EXTRA_tis_floating_DEPENDENCIES) 
	@rm -f tis_floating$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_floating_OBJECTS) $(tis_floating_LDADD) $(LIBS)

tis_halfprecision_obj$(EXEEXT): $(tis_halfprecision_obj_OBJECTS) $(tis_halfprecision_obj_DEPENDENCIES) $(EXTRA_tis_halfprecision_obj_DEPENDENCIES) 
	@rm -f tis_halfprecision_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_halfprecision_obj_OBJECTS) $(tis_halfprecision_obj_LDADD) $(LIBS)

tis_hexadecimal$(EXEEXT): $(tis_hexadecimal_OBJECTS) $(tis_hexadecimal_DEPENDENCIES) $(EXTRA_tis_hexadecimal_DEPENDENCIES) 
	@rm -f tis_hexadecimal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_hexadecimal_OBJECTS) $(tis_hexadecimal_LDADD) $(LIBS)

tis_honorcoeffprec$(EXEEXT): $(tis_honorcoeffprec_OBJECTS) $(tis_honorcoeffprec_DEPENDENCIES) $(EXTRA_tis_honorcoeffprec_DEPENDENCIES) 
	@rm -f tis_honorcoeffprec$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_honorcoeffprec_OBJECTS) $(tis_honorcoeffprec_LDADD) $(LIBS)

tis_off$(EXEEXT): $(tis_off_OBJECTS) $(tis_off_DEPENDENCIES) $(EXTRA_tis_off_DEPENDENCIES) 
	@rm -f tis_off$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_off_OBJECTS) $(tis_off_LDADD) $(LIBS)

tis_on$(EXEEXT): $(tis_on_OBJECTS) $(tis_on_DEPENDENCIES) $(EXTRA_tis_on_DEPENDENCIES) 
	@rm -f tis_on$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_on_OBJECTS) $(tis_on_LDADD) $(LIBS)

tis_perturb$(EXEEXT): $(tis_perturb_OBJECTS) $(tis_perturb_DEPENDENCIES) $(EXTRA_tis_perturb_DEPENDENCIES) 
	@rm -f tis_perturb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_perturb_OBJECTS) $(tis_perturb_LDADD) $(LIBS)

tis_pi$(EXEEXT): $(tis_pi_OBJECTS) $(tis_pi_DEPENDENCIES) $(EXTRA_tis_pi_DEPENDENCIES) 
	@rm -f tis_pi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_pi_OBJECTS) $(tis_pi_LDADD) $(LIBS)

tis_postscript$(EXEEXT): $(tis_postscript_OBJECTS) $(tis_postscript_DEPENDENCIES) $(EXTRA_tis_postscript_DEPENDENCIES) 
	@rm -f tis_postscript$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_postscript_OBJECTS) $(tis_postscript_LDADD) $(LIBS)

tis_postscriptfile$(EXEEXT): $(tis_postscriptfile_OBJECTS) $(tis_postscriptfile_DEPENDENCIES) $(EXTRA_tis_postscriptfile_DEPENDENCIES) 
	@rm -f tis_postscriptfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_postscriptfile_OBJECTS) $(tis_postscriptfile_LDADD) $(LIBS)

tis_powers$(EXEEXT): $(tis_powers_OBJECTS) $(tis_powers_DEPENDENCIES) $(EXTRA_tis_powers_DEPENDENCIES) 
	@rm -f tis_powers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_powers_OBJECTS) $(tis_powers_LDADD) $(LIBS)

tis_quad_obj$(EXEEXT): $(tis_quad_obj_OBJECTS) $(tis_quad_obj_DEPENDENCIES) $(EXTRA_tis_quad_obj_DEPENDENCIES) 
	@rm -f tis_quad_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_quad_obj_OBJECTS) $(tis_quad_obj_LDADD) $(LIBS)

tis_relative$(EXEEXT): $(tis_relative_OBJECTS) $(tis_relative_DEPENDENCIES) $(EXTRA_tis_relative_DEPENDENCIES) 
	@rm -f tis_relative$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_relative_OBJECTS) $(tis_relative_LDADD) $(LIBS)

tis_round_down$(EXEEXT): $(tis_round_down_OBJECTS) $(tis_round_down_DEPENDENCIES) $(EXTRA_tis_round_down_DEPENDENCIES) 
	@rm -f tis_round_down$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_round_down_OBJECTS) $(tis_round_down_LDADD) $(LIBS)

tis_round_to_nearest$(EXEEXT): $(tis_round_to_nearest_OBJECTS) $(tis_round_to_nearest_DEPENDENCIES) $(EXTRA_tis_round_to_nearest_DEPENDENCIES) 
	@rm -f tis_round_to_nearest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_round_to_nearest_OBJECTS) $(tis_round_to_nearest_LDADD) $(LIBS)

tis_round_towards_zero$(EXEEXT): $(tis_round_towards_zero_OBJECTS) $(tis_round_towards_zero_DEPENDENCIES) $(EXTRA_tis_round_towards_zero_DEPENDENCIES) 
	@rm -f tis_round_towards_zero$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_round_towards_zero_OBJECTS) $(tis_round_towards_zero_LDADD) $(LIBS)

tis_round_up$(EXEEXT): $(tis_round_up_OBJECTS) $(tis_round_up_DEPENDENCIES) $(EXTRA_tis_round_up_DEPENDENCIES) 
	@rm -f tis_round_up$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_round_up_OBJECTS) $(tis_round_up_LDADD) $(LIBS)

tis_single_obj$(EXEEXT): $(tis_single_obj_OBJECTS) $(tis_single_obj_DEPENDENCIES) $(EXTRA_tis_single_obj_DEPENDENCIES) 
	@rm -f tis_single_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_single_obj_OBJECTS) $(tis_single_obj_LDADD) $(LIBS)

tis_triple_double_obj$(EXEEXT): $(tis_triple_double_obj_OBJECTS) $(tis_triple_double_obj_DEPENDENCIES) $(EXTRA_tis_triple_double_obj_DEPENDENCIES) 
	@rm -f tis_triple_double_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_triple_double_obj_OBJECTS) $(tis_triple_double_obj_LDADD) $(LIBS)

tis_true$(EXEEXT): $(tis_true_OBJECTS) $(tis_true_DEPENDENCIES) $(EXTRA_tis_true_DEPENDENCIES) 
	@rm -f tis_true$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_true_OBJECTS) $(tis_true_LDADD) $(LIBS)

tis_void$(EXEEXT): $(tis_void_OBJECTS) $(tis_void_DEPENDENCIES) $(EXTRA_tis_void_DEPENDENCIES) 
	@rm -f tis_void$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tis_void_OBJECTS) $(tis_void_LDADD) $(LIBS)

tlength$(EXEEXT): $(tlength_OBJECTS) $(tlength_DEPENDENCIES) $(EXTRA_tlength_DEPENDENCIES) 
	@rm -f tlength$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tlength_OBJECTS) $(tlength_LDADD) $(LIBS)

tlibraryconstant$(EXEEXT): $(tlibraryconstant_OBJECTS) $(tlibraryconstant_DEPENDENCIES) $(EXTRA_tlibraryconstant_DEPENDENCIES) 
	@rm -f tlibraryconstant$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tlibraryconstant_OBJECTS) $(tlibraryconstant_LDADD) $(LIBS)

tlibraryfunction$(EXEEXT): $(tlibraryfunction_OBJECTS) $(tlibraryfunction_DEPENDENCIES) $(EXTRA_tlibraryfunction_DEPENDENCIES) 
	@rm -f tlibraryfunction$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tlibraryfunction_OBJECTS) $(tlibraryfunction_LDADD) $(LIBS)

tlist$(EXEEXT): $(tlist_OBJECTS) $(tlist_DEPENDENCIES) $(EXTRA_tlist_DEPENDENCIES) 
	@rm -f tlist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tlist_OBJECTS) $(tlist_LDADD) $(LIBS)

tlog$(EXEEXT): $(tlog_OBJECTS) $(tlog_DEPENDENCIES) $(EXTRA_tlog_DEPENDENCIES) 
	@rm -f tlog$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tlog_OBJECTS) $(tlog_LDADD) $(LIBS)

tlog10$(EXEEXT): $(tlog10_OBJECTS) $(tlog10_DEPENDENCIES) $(EXTRA_tlog10_DEPENDENCIES) 
	@rm -f tlog10$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tlog10_OBJECTS) $(tlog10_LDADD) $(LIBS)

tlog1p$(EXEEXT): $(tlog1p_OBJECTS) $(tlog1p_DEPENDENCIES) $(EXTRA_tlog1p_DEPENDENCIES) 
	@rm -f tlog1p$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tlog1p_OBJECTS) $(tlog1p_LDADD) $(LIBS)

tlog2$(EXEEXT): $(tlog2_OBJECTS) $(tlog2_DEPENDENCIES) $(EXTRA_tlog2_DEPENDENCIES) 
	@rm -f tlog2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tlog2_OBJECTS) $(tlog2_LDADD) $(LIBS)

tmacros_build_function$(EXEEXT): $(tmacros_build_function_OBJECTS) $(tmacros_build_function_DEPENDENCIES) $(EXTRA_tmacros_build_function_DEPENDENCIES) 
	@rm -f tmacros_build_function$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tmacros_build_function_OBJECTS) $(tmacros_build_function_LDADD) $(LIBS)

tmantissa_and_exponent$(EXEEXT): $(tmantissa_and_exponent_OBJECTS) $(tmantissa_and_exponent_DEPENDENCIES) $(EXTRA_tmantissa_and_exponent_DEPENDENCIES) 
	@rm -f tmantissa_and_exponent$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tmantissa_and_exponent_OBJECTS) $(tmantissa_and_exponent_LDADD) $(LIBS)

tmax$(EXEEXT): $(tmax_OBJECTS) $(tmax_DEPENDENCIES) $(EXTRA_tmax_DEPENDENCIES) 
	@rm -f tmax$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tmax_OBJECTS) $(tmax_LDADD) $(LIBS)

tmid$(EXEEXT): $(tmid_OBJECTS) $(tmid_DEPENDENCIES) $(EXTRA_tmid_DEPENDENCIES) 
	@rm -f tmid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tmid_OBJECTS) $(tmid_LDADD) $(LIBS)

tmin$(EXEEXT): $(tmin_OBJECTS) $(tmin_DEPENDENCIES) $(EXTRA_tmin_DEPENDENCIES) 
	@rm -f tmin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tmin_OBJECTS) $(tmin_LDADD) $(LIBS)

tmsg_callback_functions$(EXEEXT): $(tmsg_callback_functions_OBJECTS) $(tmsg_callback_functions_DEPENDENCIES) $(EXTRA_tmsg_callback_functions_DEPENDENCIES) 
	@rm -f tmsg_callback_functions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tmsg_callback_functions_OBJECTS) $(tmsg_callback_functions_LDADD) $(LIBS)

tmul$(EXEEXT): $(tmul_OBJECTS) $(tmul_DEPENDENCIES) $(EXTRA_tmul_DEPENDENCIES) 
	@rm -f tmul$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tmul_OBJECTS) $(tmul_LDADD) $(LIBS)

tname_free_variable$(EXEEXT): $(tname_free_variable_OBJECTS) $(tname_free_variable_DEPENDENCIES) $(EXTRA_tname_free_variable_DEPENDENCIES) 
	@rm -f tname_free_variable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tname_free_variable_OBJECTS) $(tname_free_variable_LDADD) $(LIBS)

tnearestint$(EXEEXT): $(tnearestint_OBJECTS) $(tnearestint_DEPENDENCIES) $(EXTRA_tnearestint_DEPENDENCIES) 
	@rm -f tnearestint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tnearestint_OBJECTS) $(tnearestint_LDADD) $(LIBS)

tneg$(EXEEXT): $(tneg_OBJECTS) $(tneg_DEPENDENCIES) $(EXTRA_tneg_DEPENDENCIES) 
	@rm -f tneg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tneg_OBJECTS) $(tneg_LDADD) $(LIBS)

tnegate$(EXEEXT): $(tnegate_OBJECTS) $(tnegate_DEPENDENCIES) $(EXTRA_tnegate_DEPENDENCIES) 
	@rm -f tnegate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tnegate_OBJECTS) $(tnegate_LDADD) $(LIBS)

tnumberroots$(EXEEXT): $(tnumberroots_OBJECTS) $(tnumberroots_DEPENDENCIES) $(EXTRA_tnumberroots_DEPENDENCIES) 
	@rm -f tnumberroots$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tnumberroots_OBJECTS) $(tnumberroots_LDADD) $(LIBS)

tnumerator$(EXEEXT): $(tnumerator_OBJECTS) $(tnumerator_DEPENDENCIES) $(EXTRA_tnumerator_DEPENDENCIES) 
	@rm -f tnumerator$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tnumerator_OBJECTS) $(tnumerator_LDADD) $(LIBS)

tobj_is_end_elliptic_list$(EXEEXT): $(tobj_is_end_elliptic_list_OBJECTS) $(tobj_is_end_elliptic_list_DEPENDENCIES) $(EXTRA_tobj_is_end_elliptic_list_DEPENDENCIES) 
	@rm -f tobj_is_end_elliptic_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tobj_is_end_elliptic_list_OBJECTS) $(tobj_is_end_elliptic_list_LDADD) $(LIBS)

tobj_is_error$(EXEEXT): $(tobj_is_error_OBJECTS) $(tobj_is_error_DEPENDENCIES) $(EXTRA_tobj_is_error_DEPENDENCIES) 
	@rm -f tobj_is_error$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tobj_is_error_OBJECTS) $(tobj_is_error_LDADD) $(LIBS)

tobj_is_function$(EXEEXT): $(tobj_is_function_OBJECTS) $(tobj_is_function_DEPENDENCIES) $(EXTRA_tobj_is_function_DEPENDENCIES) 
	@rm -f tobj_is_function$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tobj_is_function_OBJECTS) $(tobj_is_function_LDADD) $(LIBS)

tobj_is_list$(EXEEXT): $(tobj_is_list_OBJECTS) $(tobj_is_list_DEPENDENCIES) $(EXTRA_tobj_is_list_DEPENDENCIES) 
	@rm -f tobj_is_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tobj_is_list_OBJECTS) $(tobj_is_list_LDADD) $(LIBS)

tobj_is_range$(EXEEXT): $(tobj_is_range_OBJECTS) $(tobj_is_range_DEPENDENCIES) $(EXTRA_tobj_is_range_DEPENDENCIES) 
	@rm -f tobj_is_range$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tobj_is_range_OBJECTS) $(tobj_is_range_LDADD) $(LIBS)

tobj_is_string$(EXEEXT): $(tobj_is_string_OBJECTS) $(tobj_is_string_DEPENDENCIES) $(EXTRA_tobj_is_string_DEPENDENCIES) 
	@rm -f tobj_is_string$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tobj_is_string_OBJECTS) $(tobj_is_string_LDADD) $(LIBS)

tobj_is_structure$(EXEEXT): $(tobj_is_structure_OBJECTS) $(tobj_is_structure_DEPENDENCIES) $(EXTRA_tobj_is_structure_DEPENDENCIES) 
	@rm -f tobj_is_structure$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tobj_is_structure_OBJECTS) $(tobj_is_structure_LDADD) $(LIBS)

tobject_list_ops$(EXEEXT): $(tobject_list_ops_OBJECTS) $(tobject_list_ops_DEPENDENCIES) $(EXTRA_tobject_list_ops_DEPENDENCIES) 
	@rm -f tobject_list_ops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tobject_list_ops_OBJECTS) $(tobject_list_ops_LDADD) $(LIBS)

toff$(EXEEXT): $(toff_OBJECTS) $(toff_DEPENDENCIES) $(EXTRA_toff_DEPENDENCIES) 
	@rm -f toff$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(toff_OBJECTS) $(toff_LDADD) $(LIBS)

ton$(EXEEXT): $(ton_OBJECTS) $(ton_DEPENDENCIES) $(EXTRA_ton_DEPENDENCIES) 
	@rm -f ton$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ton_OBJECTS) $(ton_LDADD) $(LIBS)

tor$(EXEEXT): $(tor_OBJECTS) $(tor_DEPENDENCIES) $(EXTRA_tor_DEPENDENCIES) 
	@rm -f tor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tor_OBJECTS) $(tor_LDADD) $(LIBS)

tperturb$(EXEEXT): $(tperturb_OBJECTS) $(tperturb_DEPENDENCIES) $(EXTRA_tperturb_DEPENDENCIES) 
	@rm -f tperturb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tperturb_OBJECTS) $(tperturb_LDADD) $(LIBS)

tpi$(EXEEXT): $(tpi_OBJECTS) $(tpi_DEPENDENCIES) $(EXTRA_tpi_DEPENDENCIES) 
	@rm -f tpi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tpi_OBJECTS) $(tpi_LDADD) $(LIBS)

tpostscript$(EXEEXT): $(tpostscript_OBJECTS) $(tpostscript_DEPENDENCIES) $(EXTRA_tpostscript_DEPENDENCIES) 
	@rm -f tpostscript$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tpostscript_OBJECTS) $(tpostscript_LDADD) $(LIBS)

tpostscriptfile$(EXEEXT): $(tpostscriptfile_OBJECTS) $(tpostscriptfile_DEPENDENCIES) $(EXTRA_tpostscriptfile_DEPENDENCIES) 
	@rm -f tpostscriptfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tpostscriptfile_OBJECTS) $(tpostscriptfile_LDADD) $(LIBS)

tpow$(EXEEXT): $(tpow_OBJECTS) $(tpow_DEPENDENCIES) $(EXTRA_tpow_DEPENDENCIES) 
	@rm -f tpow$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tpow_OBJECTS) $(tpow_LDADD) $(LIBS)

tpowers$(EXEEXT): $(tpowers_OBJECTS) $(tpowers_DEPENDENCIES) $(EXTRA_tpowers_DEPENDENCIES) 
	@rm -f tpowers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tpowers_OBJECTS) $(tpowers_LDADD) $(LIBS)

tprecision$(EXEEXT): $(tprecision_OBJECTS) $(tprecision_DEPENDENCIES) $(EXTRA_tprecision_DEPENDENCIES) 
	@rm -f tprecision$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tprecision_OBJECTS) $(tprecision_LDADD) $(LIBS)

tprepend$(EXEEXT): $(tprepend_OBJECTS) $(tprepend_DEPENDENCIES) $(EXTRA_tprepend_DEPENDENCIES) 
	@rm -f tprepend$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tprepend_OBJECTS) $(tprepend_LDADD) $(LIBS)

tprintdouble$(EXEEXT): $(tprintdouble_OBJECTS) $(tprintdouble_DEPENDENCIES) $(EXTRA_tprintdouble_DEPENDENCIES) 
	@rm -f tprintdouble$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tprintdouble_OBJECTS) $(tprintdouble_LDADD) $(LIBS)

tprintexpansion$(EXEEXT): $(tprintexpansion_OBJECTS) $(tprintexpansion_DEPENDENCIES) $(EXTRA_tprintexpansion_DEPENDENCIES) 
	@rm -f tprintexpansion$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tprintexpansion_OBJECTS) $(tprintexpansion_LDADD) $(LIBS)

tprintf$(EXEEXT): $(tprintf_OBJECTS) $(tprintf_DEPENDENCIES) $(EXTRA_tprintf_DEPENDENCIES) 
	@rm -f tprintf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tprintf_OBJECTS) $(tprintf_LDADD) $(LIBS)

tprintsingle$(EXEEXT): $(tprintsingle_OBJECTS) $(tprintsingle_DEPENDENCIES) $(EXTRA_tprintsingle_DEPENDENCIES) 
	@rm -f tprintsingle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tprintsingle_OBJECTS) $(tprintsingle_LDADD) $(LIBS)

tprocedurefunction$(EXEEXT): $(tprocedurefunction_OBJECTS) $(tprocedurefunction_DEPENDENCIES) $(EXTRA_tprocedurefunction_DEPENDENCIES) 
	@rm -f tprocedurefunction$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tprocedurefunction_OBJECTS) $(tprocedurefunction_LDADD) $(LIBS)

tquad$(EXEEXT): $(tquad_OBJECTS) $(tquad_DEPENDENCIES) $(EXTRA_tquad_DEPENDENCIES) 
	@rm -f tquad$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tquad_OBJECTS) $(tquad_LDADD) $(LIBS)

tquad_obj$(EXEEXT): $(tquad_obj_OBJECTS) $(tquad_obj_DEPENDENCIES) $(EXTRA_tquad_obj_DEPENDENCIES) 
	@rm -f tquad_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tquad_obj_OBJECTS) $(tquad_obj_LDADD) $(LIBS)

trange_from_bounds$(EXEEXT): $(trange_from_bounds_OBJECTS) $(trange_from_bounds_DEPENDENCIES) $(EXTRA_trange_from_bounds_DEPENDENCIES) 
	@rm -f trange_from_bounds$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trange_from_bounds_OBJECTS) $(trange_from_bounds_LDADD) $(LIBS)

trange_from_interval$(EXEEXT): $(trange_from_interval_OBJECTS) $(trange_from_interval_DEPENDENCIES) $(EXTRA_trange_from_interval_DEPENDENCIES) 
	@rm -f trange_from_interval$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trange_from_interval_OBJECTS) $(trange_from_interval_LDADD) $(LIBS)

trationalapprox$(EXEEXT): $(trationalapprox_OBJECTS) $(trationalapprox_DEPENDENCIES) $(EXTRA_trationalapprox_DEPENDENCIES) 
	@rm -f trationalapprox$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trationalapprox_OBJECTS) $(trationalapprox_LDADD) $(LIBS)

trelative$(EXEEXT): $(trelative_OBJECTS) $(trelative_DEPENDENCIES) $(EXTRA_trelative_DEPENDENCIES) 
	@rm -f trelative$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trelative_OBJECTS) $(trelative_LDADD) $(LIBS)

tremez$(EXEEXT): $(tremez_OBJECTS) $(tremez_DEPENDENCIES) $(EXTRA_tremez_DEPENDENCIES) 
	@rm -f tremez$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tremez_OBJECTS) $(tremez_LDADD) $(LIBS)

trevert$(EXEEXT): $(trevert_OBJECTS) $(trevert_DEPENDENCIES) $(EXTRA_trevert_DEPENDENCIES) 
	@rm -f trevert$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trevert_OBJECTS) $(trevert_LDADD) $(LIBS)

tround_down$(EXEEXT): $(tround_down_OBJECTS) $(tround_down_DEPENDENCIES) $(EXTRA_tround_down_DEPENDENCIES) 
	@rm -f tround_down$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tround_down_OBJECTS) $(tround_down_LDADD) $(LIBS)

tround_to_nearest$(EXEEXT): $(tround_to_nearest_OBJECTS) $(tround_to_nearest_DEPENDENCIES) $(EXTRA_tround_to_nearest_DEPENDENCIES) 
	@rm -f tround_to_nearest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tround_to_nearest_OBJECTS) $(tround_to_nearest_LDADD) $(LIBS)

tround_towards_zero$(EXEEXT): $(tround_towards_zero_OBJECTS) $(tround_towards_zero_DEPENDENCIES) $(EXTRA_tround_towards_zero_DEPENDENCIES) 
	@rm -f tround_towards_zero$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tround_towards_zero_OBJECTS) $(tround_towards_zero_LDADD) $(LIBS)

tround_up$(EXEEXT): $(tround_up_OBJECTS) $(tround_up_DEPENDENCIES) $(EXTRA_tround_up_DEPENDENCIES) 
	@rm -f tround_up$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tround_up_OBJECTS) $(tround_up_LDADD) $(LIBS)

troundcoefficients$(EXEEXT): $(troundcoefficients_OBJECTS) $(troundcoefficients_DEPENDENCIES) $(EXTRA_troundcoefficients_DEPENDENCIES) 
	@rm -f troundcoefficients$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(troundcoefficients_OBJECTS) $(troundcoefficients_LDADD) $(LIBS)

tsearchgal$(EXEEXT): $(tsearchgal_OBJECTS) $(tsearchgal_DEPENDENCIES) $(EXTRA_tsearchgal_DEPENDENCIES) 
	@rm -f tsearchgal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsearchgal_OBJECTS) $(tsearchgal_LDADD) $(LIBS)

tset_autosimplify$(EXEEXT): $(tset_autosimplify_OBJECTS) $(tset_autosimplify_DEPENDENCIES) $(EXTRA_tset_autosimplify_DEPENDENCIES) 
	@rm -f tset_autosimplify$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_autosimplify_OBJECTS) $(tset_autosimplify_LDADD) $(LIBS)

tset_autosimplify_and_print$(EXEEXT): $(tset_autosimplify_and_print_OBJECTS) $(tset_autosimplify_and_print_DEPENDENCIES) $(EXTRA_tset_autosimplify_and_print_DEPENDENCIES) 
	@rm -f tset_autosimplify_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_autosimplify_and_print_OBJECTS) $(tset_autosimplify_and_print_LDADD) $(LIBS)

tset_canonical$(EXEEXT): $(tset_canonical_OBJECTS) $(tset_canonical_DEPENDENCIES) $(EXTRA_tset_canonical_DEPENDENCIES) 
	@rm -f tset_canonical$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_canonical_OBJECTS) $(tset_canonical_LDADD) $(LIBS)

tset_canonical_and_print$(EXEEXT): $(tset_canonical_and_print_OBJECTS) $(tset_canonical_and_print_DEPENDENCIES) $(EXTRA_tset_canonical_and_print_DEPENDENCIES) 
	@rm -f tset_canonical_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_canonical_and_print_OBJECTS) $(tset_canonical_and_print_LDADD) $(LIBS)

tset_diam$(EXEEXT): $(tset_diam_OBJECTS) $(tset_diam_DEPENDENCIES) $(EXTRA_tset_diam_DEPENDENCIES) 
	@rm -f tset_diam$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_diam_OBJECTS) $(tset_diam_LDADD) $(LIBS)

tset_diam_and_print$(EXEEXT): $(tset_diam_and_print_OBJECTS) $(tset_diam_and_print_DEPENDENCIES) $(EXTRA_tset_diam_and_print_DEPENDENCIES) 
	@rm -f tset_diam_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_diam_and_print_OBJECTS) $(tset_diam_and_print_LDADD) $(LIBS)

tset_dieonerrormode$(EXEEXT): $(tset_dieonerrormode_OBJECTS) $(tset_dieonerrormode_DEPENDENCIES) $(EXTRA_tset_dieonerrormode_DEPENDENCIES) 
	@rm -f tset_dieonerrormode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_dieonerrormode_OBJECTS) $(tset_dieonerrormode_LDADD) $(LIBS)

tset_dieonerrormode_and_print$(EXEEXT): $(tset_dieonerrormode_and_print_OBJECTS) $(tset_dieonerrormode_and_print_DEPENDENCIES) $(EXTRA_tset_dieonerrormode_and_print_DEPENDENCIES) 
	@rm -f tset_dieonerrormode_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_dieonerrormode_and_print_OBJECTS) $(tset_dieonerrormode_and_print_LDADD) $(LIBS)

tset_display$(EXEEXT): $(tset_display_OBJECTS) $(tset_display_DEPENDENCIES) $(EXTRA_tset_display_DEPENDENCIES) 
	@rm -f tset_display$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_display_OBJECTS) $(tset_display_LDADD) $(LIBS)

tset_display_and_print$(EXEEXT): $(tset_display_and_print_OBJECTS) $(tset_display_and_print_DEPENDENCIES) $(EXTRA_tset_display_and_print_DEPENDENCIES) 
	@rm -f tset_display_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_display_and_print_OBJECTS) $(tset_display_and_print_LDADD) $(LIBS)

tset_hopitalrecursions$(EXEEXT): $(tset_hopitalrecursions_OBJECTS) $(tset_hopitalrecursions_DEPENDENCIES) $(EXTRA_tset_hopitalrecursions_DEPENDENCIES) 
	@rm -f tset_hopitalrecursions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_hopitalrecursions_OBJECTS) $(tset_hopitalrecursions_LDADD) $(LIBS)

tset_hopitalrecursions_and_print$(EXEEXT): $(tset_hopitalrecursions_and_print_OBJECTS) $(tset_hopitalrecursions_and_print_DEPENDENCIES) $(EXTRA_tset_hopitalrecursions_and_print_DEPENDENCIES) 
	@rm -f tset_hopitalrecursions_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_hopitalrecursions_and_print_OBJECTS) $(tset_hopitalrecursions_and_print_LDADD) $(LIBS)

tset_midpointmode$(EXEEXT): $(tset_midpointmode_OBJECTS) $(tset_midpointmode_DEPENDENCIES) $(EXTRA_tset_midpointmode_DEPENDENCIES) 
	@rm -f tset_midpointmode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_midpointmode_OBJECTS) $(tset_midpointmode_LDADD) $(LIBS)

tset_midpointmode_and_print$(EXEEXT): $(tset_midpointmode_and_print_OBJECTS) $(tset_midpointmode_and_print_DEPENDENCIES) $(EXTRA_tset_midpointmode_and_print_DEPENDENCIES) 
	@rm -f tset_midpointmode_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_midpointmode_and_print_OBJECTS) $(tset_midpointmode_and_print_LDADD) $(LIBS)

tset_points$(EXEEXT): $(tset_points_OBJECTS) $(tset_points_DEPENDENCIES) $(EXTRA_tset_points_DEPENDENCIES) 
	@rm -f tset_points$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_points_OBJECTS) $(tset_points_LDADD) $(LIBS)

tset_points_and_print$(EXEEXT): $(tset_points_and_print_OBJECTS) $(tset_points_and_print_DEPENDENCIES) $(EXTRA_tset_points_and_print_DEPENDENCIES) 
	@rm -f tset_points_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_points_and_print_OBJECTS) $(tset_points_and_print_LDADD) $(LIBS)

tset_prec$(EXEEXT): $(tset_prec_OBJECTS) $(tset_prec_DEPENDENCIES) $(EXTRA_tset_prec_DEPENDENCIES) 
	@rm -f tset_prec$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_prec_OBJECTS) $(tset_prec_LDADD) $(LIBS)

tset_prec_and_print$(EXEEXT): $(tset_prec_and_print_OBJECTS) $(tset_prec_and_print_DEPENDENCIES) $(EXTRA_tset_prec_and_print_DEPENDENCIES) 
	@rm -f tset_prec_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_prec_and_print_OBJECTS) $(tset_prec_and_print_LDADD) $(LIBS)

tset_rationalmode$(EXEEXT): $(tset_rationalmode_OBJECTS) $(tset_rationalmode_DEPENDENCIES) $(EXTRA_tset_rationalmode_DEPENDENCIES) 
	@rm -f tset_rationalmode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_rationalmode_OBJECTS) $(tset_rationalmode_LDADD) $(LIBS)

tset_rationalmode_and_print$(EXEEXT): $(tset_rationalmode_and_print_OBJECTS) $(tset_rationalmode_and_print_DEPENDENCIES) $(EXTRA_tset_rationalmode_and_print_DEPENDENCIES) 
	@rm -f tset_rationalmode_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_rationalmode_and_print_OBJECTS) $(tset_rationalmode_and_print_LDADD) $(LIBS)

tset_roundingwarnings$(EXEEXT): $(tset_roundingwarnings_OBJECTS) $(tset_roundingwarnings_DEPENDENCIES) $(EXTRA_tset_roundingwarnings_DEPENDENCIES) 
	@rm -f tset_roundingwarnings$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_roundingwarnings_OBJECTS) $(tset_roundingwarnings_LDADD) $(LIBS)

tset_roundingwarnings_and_print$(EXEEXT): $(tset_roundingwarnings_and_print_OBJECTS) $(tset_roundingwarnings_and_print_DEPENDENCIES) $(EXTRA_tset_roundingwarnings_and_print_DEPENDENCIES) 
	@rm -f tset_roundingwarnings_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_roundingwarnings_and_print_OBJECTS) $(tset_roundingwarnings_and_print_LDADD) $(LIBS)

tset_showmessagenumbers$(EXEEXT): $(tset_showmessagenumbers_OBJECTS) $(tset_showmessagenumbers_DEPENDENCIES) $(EXTRA_tset_showmessagenumbers_DEPENDENCIES) 
	@rm -f tset_showmessagenumbers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_showmessagenumbers_OBJECTS) $(tset_showmessagenumbers_LDADD) $(LIBS)

tset_showmessagenumbers_and_print$(EXEEXT): $(tset_showmessagenumbers_and_print_OBJECTS) $(tset_showmessagenumbers_and_print_DEPENDENCIES) $(EXTRA_tset_showmessagenumbers_and_print_DEPENDENCIES) 
	@rm -f tset_showmessagenumbers_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_showmessagenumbers_and_print_OBJECTS) $(tset_showmessagenumbers_and_print_LDADD) $(LIBS)

tset_taylorrecursions$(EXEEXT): $(tset_taylorrecursions_OBJECTS) $(tset_taylorrecursions_DEPENDENCIES) $(EXTRA_tset_taylorrecursions_DEPENDENCIES) 
	@rm -f tset_taylorrecursions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_taylorrecursions_OBJECTS) $(tset_taylorrecursions_LDADD) $(LIBS)

tset_taylorrecursions_and_print$(EXEEXT): $(tset_taylorrecursions_and_print_OBJECTS) $(tset_taylorrecursions_and_print_DEPENDENCIES) $(EXTRA_tset_taylorrecursions_and_print_DEPENDENCIES) 
	@rm -f tset_taylorrecursions_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_taylorrecursions_and_print_OBJECTS) $(tset_taylorrecursions_and_print_LDADD) $(LIBS)

tset_timing$(EXEEXT): $(tset_timing_OBJECTS) $(tset_timing_DEPENDENCIES) $(EXTRA_tset_timing_DEPENDENCIES) 
	@rm -f tset_timing$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_timing_OBJECTS) $(tset_timing_LDADD) $(LIBS)

tset_timing_and_print$(EXEEXT): $(tset_timing_and_print_OBJECTS) $(tset_timing_and_print_DEPENDENCIES) $(EXTRA_tset_timing_and_print_DEPENDENCIES) 
	@rm -f tset_timing_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_timing_and_print_OBJECTS) $(tset_timing_and_print_LDADD) $(LIBS)

tset_verbosity$(EXEEXT): $(tset_verbosity_OBJECTS) $(tset_verbosity_DEPENDENCIES) $(EXTRA_tset_verbosity_DEPENDENCIES) 
	@rm -f tset_verbosity$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_verbosity_OBJECTS) $(tset_verbosity_LDADD) $(LIBS)

tset_verbosity_and_print$(EXEEXT): $(tset_verbosity_and_print_OBJECTS) $(tset_verbosity_and_print_DEPENDENCIES) $(EXTRA_tset_verbosity_and_print_DEPENDENCIES) 
	@rm -f tset_verbosity_and_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_verbosity_and_print_OBJECTS) $(tset_verbosity_and_print_LDADD) $(LIBS)

tsimplify$(EXEEXT): $(tsimplify_OBJECTS) $(tsimplify_DEPENDENCIES) $(EXTRA_tsimplify_DEPENDENCIES) 
	@rm -f tsimplify$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsimplify_OBJECTS) $(tsimplify_LDADD) $(LIBS)

tsin$(EXEEXT): $(tsin_OBJECTS) $(tsin_DEPENDENCIES) $(EXTRA_tsin_DEPENDENCIES) 
	@rm -f tsin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsin_OBJECTS) $(tsin_LDADD) $(LIBS)

tsingle$(EXEEXT): $(tsingle_OBJECTS) $(tsingle_DEPENDENCIES) $(EXTRA_tsingle_DEPENDENCIES) 
	@rm -f tsingle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsingle_OBJECTS) $(tsingle_LDADD) $(LIBS)

tsingle_obj$(EXEEXT): $(tsingle_obj_OBJECTS) $(tsingle_obj_DEPENDENCIES) $(EXTRA_tsingle_obj_DEPENDENCIES) 
	@rm -f tsingle_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsingle_obj_OBJECTS) $(tsingle_obj_LDADD) $(LIBS)

tsinh$(EXEEXT): $(tsinh_OBJECTS) $(tsinh_DEPENDENCIES) $(EXTRA_tsinh_DEPENDENCIES) 
	@rm -f tsinh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsinh_OBJECTS) $(tsinh_LDADD) $(LIBS)

tsort$(EXEEXT): $(tsort_OBJECTS) $(tsort_DEPENDENCIES) $(EXTRA_tsort_DEPENDENCIES) 
	@rm -f tsort$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsort_OBJECTS) $(tsort_LDADD) $(LIBS)

tsqrt$(EXEEXT): $(tsqrt_OBJECTS) $(tsqrt_DEPENDENCIES) $(EXTRA_tsqrt_DEPENDENCIES) 
	@rm -f tsqrt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsqrt_OBJECTS) $(tsqrt_LDADD) $(LIBS)

tstring$(EXEEXT): $(tstring_OBJECTS) $(tstring_DEPENDENCIES) $(EXTRA_tstring_DEPENDENCIES) 
	@rm -f tstring$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tstring_OBJECTS) $(tstring_LDADD) $(LIBS)

tstring_list_ops$(EXEEXT): $(tstring_list_ops_OBJECTS) $(tstring_list_ops_DEPENDENCIES) $(EXTRA_tstring_list_ops_DEPENDENCIES) 
	@rm -f tstring_list_ops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tstring_list_ops_OBJECTS) $(tstring_list_ops_LDADD) $(LIBS)

tsub$(EXEEXT): $(tsub_OBJECTS) $(tsub_DEPENDENCIES) $(EXTRA_tsub_DEPENDENCIES) 
	@rm -f tsub$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsub_OBJECTS) $(tsub_LDADD) $(LIBS)

tsubpoly$(EXEEXT): $(tsubpoly_OBJECTS) $(tsubpoly_DEPENDENCIES) $(EXTRA_tsubpoly_DEPENDENCIES) 
	@rm -f tsubpoly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsubpoly_OBJECTS) $(tsubpoly_LDADD) $(LIBS)

tsubstitute$(EXEEXT): $(tsubstitute_OBJECTS) $(tsubstitute_DEPENDENCIES) $(EXTRA_tsubstitute_DEPENDENCIES) 
	@rm -f tsubstitute$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsubstitute_OBJECTS) $(tsubstitute_LDADD) $(LIBS)

tsup$(EXEEXT): $(tsup_OBJECTS) $(tsup_DEPENDENCIES) $(EXTRA_tsup_DEPENDENCIES) 
	@rm -f tsup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsup_OBJECTS) $(tsup_LDADD) $(LIBS)

ttail$(EXEEXT): $(ttail_OBJECTS) $(ttail_DEPENDENCIES) $(EXTRA_ttail_DEPENDENCIES) 
	@rm -f ttail$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ttail_OBJECTS) $(ttail_LDADD) $(LIBS)

ttan$(EXEEXT): $(ttan_OBJECTS) $(ttan_DEPENDENCIES) $(EXTRA_ttan_DEPENDENCIES) 
	@rm -f ttan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ttan_OBJECTS) $(ttan_LDADD) $(LIBS)

ttanh$(EXEEXT): $(ttanh_OBJECTS) $(ttanh_DEPENDENCIES) $(EXTRA_ttanh_DEPENDENCIES) 
	@rm -f ttanh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ttanh_OBJECTS) $(ttanh_LDADD) $(LIBS)

ttriple_double$(EXEEXT): $(ttriple_double_OBJECTS) $(ttriple_double_DEPENDENCIES) $(EXTRA_ttriple_double_DEPENDENCIES) 
	@rm -f ttriple_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ttriple_double_OBJECTS) $(ttriple_double_LDADD) $(LIBS)

ttriple_double_obj$(EXEEXT): $(ttriple_double_obj_OBJECTS) $(ttriple_double_obj_DEPENDENCIES) $(EXTRA_ttriple_double_obj_DEPENDENCIES) 
	@rm -f ttriple_double_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ttriple_double_obj_OBJECTS) $(ttriple_double_obj_LDADD) $(LIBS)

ttrue$(EXEEXT): $(ttrue_OBJECTS) $(ttrue_DEPENDENCIES) $(EXTRA_ttrue_DEPENDENCIES) 
	@rm -f ttrue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ttrue_OBJECTS) $(ttrue_LDADD) $(LIBS)

tv_build_end_elliptic_list$(EXEEXT): $(tv_build_end_elliptic_list_OBJECTS) $(tv_build_end_elliptic_list_DEPENDENCIES) $(EXTRA_tv_build_end_elliptic_list_DEPENDENCIES) 
	@rm -f tv_build_end_elliptic_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tv_build_end_elliptic_list_OBJECTS) $(tv_build_end_elliptic_list_LDADD) $(LIBS)

tv_build_list$(EXEEXT): $(tv_build_list_OBJECTS) $(tv_build_list_DEPENDENCIES) $(EXTRA_tv_build_list_DEPENDENCIES) 
	@rm -f tv_build_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tv_build_list_OBJECTS) $(tv_build_list_LDADD) $(LIBS)

tv_decompose_function$(EXEEXT): $(tv_decompose_function_OBJECTS) $(tv_decompose_function_DEPENDENCIES) $(EXTRA_tv_decompose_function_DEPENDENCIES) 
	@rm -f tv_decompose_function$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tv_decompose_function_OBJECTS) $(tv_decompose_function_LDADD) $(LIBS)

tv_fpminimax$(EXEEXT): $(tv_fpminimax_OBJECTS) $(tv_fpminimax_DEPENDENCIES) $(EXTRA_tv_fpminimax_DEPENDENCIES) 
	@rm -f tv_fpminimax$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tv_fpminimax_OBJECTS) $(tv_fpminimax_LDADD) $(LIBS)

tv_get_subfunctions$(EXEEXT): $(tv_get_subfunctions_OBJECTS) $(tv_get_subfunctions_DEPENDENCIES) $(EXTRA_tv_get_subfunctions_DEPENDENCIES) 
	@rm -f tv_get_subfunctions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tv_get_subfunctions_OBJECTS) $(tv_get_subfunctions_LDADD) $(LIBS)

tv_implementpoly$(EXEEXT): $(tv_implementpoly_OBJECTS) $(tv_implementpoly_DEPENDENCIES) $(EXTRA_tv_implementpoly_DEPENDENCIES) 
	@rm -f tv_implementpoly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tv_implementpoly_OBJECTS) $(tv_implementpoly_LDADD) $(LIBS)

tv_max$(EXEEXT): $(tv_max_OBJECTS) $(tv_max_DEPENDENCIES) $(EXTRA_tv_max_DEPENDENCIES) 
	@rm -f tv_max$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tv_max_OBJECTS) $(tv_max_LDADD) $(LIBS)

tv_min$(EXEEXT): $(tv_min_OBJECTS) $(tv_min_DEPENDENCIES) $(EXTRA_tv_min_DEPENDENCIES) 
	@rm -f tv_min$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tv_min_OBJECTS) $(tv_min_LDADD) $(LIBS)

tv_remez$(EXEEXT): $(tv_remez_OBJECTS) $(tv_remez_DEPENDENCIES) $(EXTRA_tv_remez_DEPENDENCIES) 
	@rm -f tv_remez$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tv_remez_OBJECTS) $(tv_remez_LDADD) $(LIBS)

tvoid$(EXEEXT): $(tvoid_OBJECTS) $(tvoid_DEPENDENCIES) $(EXTRA_tvoid_DEPENDENCIES) 
	@rm -f tvoid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tvoid_OBJECTS) $(tvoid_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libraryexample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabsolute.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tacos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tacosh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tappend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasciiplot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasinh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tatan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tatanh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbashexecute.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbinary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tboolean_list_ops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_end_elliptic_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_abs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_acos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_acosh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_add.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_asin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_asinh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_atan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_atanh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_ceil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_cos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_cosh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_div.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_double_double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_doubleextended.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_erf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_erfc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_exp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_expm1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_floor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_free_variable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_halfprecision.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_libraryconstant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_libraryfunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_log10.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_log1p.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_log2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_mul.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_nearestint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_neg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_pi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_pow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_procedurefunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_quad.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_sin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_single.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_sinh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_sqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_sub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_tan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_tanh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_function_triple_double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuild_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcanonical.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tceil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcheckinfnorm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_equal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_greater.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_greater_equal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_in.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_less.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_less_equal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_not_equal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_objs_structurally.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcoeff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconcat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconstant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconstant_from_double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconstant_from_int.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconstant_from_int64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconstant_from_mpq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconstant_from_mpz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconstant_from_uint64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconstant_list_ops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcopy_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcosh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcreate_structure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdecimal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdecompose_function.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdecompose_libraryconstant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdecompose_libraryfunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdecompose_procedurefunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdefault.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdegree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdenominator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdirtyinfnorm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdirtyintegral.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdirtysimplify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdouble.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdouble_double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdouble_double_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdouble_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdoubleextended.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdoubleextended_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdyadic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tend_elliptic_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/terf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/terfc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/terror.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tevaluate_function_at_constant_expression.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tevaluate_function_at_point.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texpand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texpm1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfalse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfixed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfloating.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfloor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfpminimax.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfree_variable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_autosimplify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_bounds_from_range.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_canonical.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_constant_as_double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_constant_as_int.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_constant_as_int64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_constant_as_mpq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_constant_as_mpz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_constant_as_uint64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_diam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_dieonerrormode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_display.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_element_in_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_element_in_structure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_free_variable_name.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_function_arity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_head_function.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_hopitalrecursions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_interval_from_range.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_list_elements.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_midpointmode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_points.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_prec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_rationalmode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_roundingwarnings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_showmessagenumbers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_string.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_structure_elements.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_subfunctions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_taylorrecursions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_timing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_verbosity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thalfprecision.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thalfprecision_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thead.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thexadecimal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thonorcoeffprec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thorner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timplementpoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinit_with_custom_memory_functions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tint_list_ops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tintegral.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinterval_list_ops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_absolute.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_binary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_decimal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_default.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_double_double_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_double_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_doubleextended_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_dyadic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_false.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_fixed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_floating.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_halfprecision_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_hexadecimal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_honorcoeffprec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_off.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_on.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_perturb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_pi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_postscript.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_postscriptfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_powers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_quad_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_relative.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_round_down.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_round_to_nearest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_round_towards_zero.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_round_up.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_single_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_triple_double_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_true.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tis_void.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlength.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlibraryconstant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlibraryfunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog10.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog1p.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmacros_build_function.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmantissa_and_exponent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmax.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmsg_callback_functions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tname_free_variable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tnearestint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tneg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tnegate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tnumberroots.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tnumerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tobj_is_end_elliptic_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tobj_is_error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tobj_is_function.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tobj_is_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tobj_is_range.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tobj_is_string.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tobj_is_structure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tobject_list_ops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tperturb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpostscript.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpostscriptfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpowers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tprecision.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tprepend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tprintdouble.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tprintexpansion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tprintf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tprintsingle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tprocedurefunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tquad.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tquad_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trange_from_bounds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trange_from_interval.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trationalapprox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trelative.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tremez.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trevert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tround_down.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tround_to_nearest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tround_towards_zero.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tround_up.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/troundcoefficients.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsearchgal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_autosimplify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_autosimplify_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_canonical.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_canonical_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_diam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_diam_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_dieonerrormode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_dieonerrormode_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_display.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_display_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_hopitalrecursions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_hopitalrecursions_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_midpointmode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_midpointmode_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_points.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_points_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_prec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_prec_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_rationalmode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_rationalmode_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_roundingwarnings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_roundingwarnings_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_showmessagenumbers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_showmessagenumbers_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_taylorrecursions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_taylorrecursions_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_timing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_timing_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_verbosity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_verbosity_and_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsimplify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsingle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsingle_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsinh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstring_list_ops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsubpoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsubstitute.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttail.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttanh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttriple_double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttriple_double_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttrue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tv_build_end_elliptic_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tv_build_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tv_decompose_function.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tv_fpminimax.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tv_get_subfunctions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tv_implementpoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tv_max.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tv_min.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tv_remez.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tvoid.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_LIBRARIES) $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tabs.sh.log: tabs.sh
	@p='tabs.sh'; \
	b='tabs.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tabsolute.sh.log: tabsolute.sh
	@p='tabsolute.sh'; \
	b='tabsolute.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tacos.sh.log: tacos.sh
	@p='tacos.sh'; \
	b='tacos.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tacosh.sh.log: tacosh.sh
	@p='tacosh.sh'; \
	b='tacosh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tadd.sh.log: tadd.sh
	@p='tadd.sh'; \
	b='tadd.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tand.sh.log: tand.sh
	@p='tand.sh'; \
	b='tand.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tappend.sh.log: tappend.sh
	@p='tappend.sh'; \
	b='tappend.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tasin.sh.log: tasin.sh
	@p='tasin.sh'; \
	b='tasin.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tasinh.sh.log: tasinh.sh
	@p='tasinh.sh'; \
	b='tasinh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tasciiplot.sh.log: tasciiplot.sh
	@p='tasciiplot.sh'; \
	b='tasciiplot.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tatan.sh.log: tatan.sh
	@p='tatan.sh'; \
	b='tatan.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tatanh.sh.log: tatanh.sh
	@p='tatanh.sh'; \
	b='tatanh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbashexecute.sh.log: tbashexecute.sh
	@p='tbashexecute.sh'; \
	b='tbashexecute.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbinary.sh.log: tbinary.sh
	@p='tbinary.sh'; \
	b='tbinary.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tboolean_list_ops.sh.log: tboolean_list_ops.sh
	@p='tboolean_list_ops.sh'; \
	b='tboolean_list_ops.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_end_elliptic_list.sh.log: tbuild_end_elliptic_list.sh
	@p='tbuild_end_elliptic_list.sh'; \
	b='tbuild_end_elliptic_list.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_abs.sh.log: tbuild_function_abs.sh
	@p='tbuild_function_abs.sh'; \
	b='tbuild_function_abs.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_acos.sh.log: tbuild_function_acos.sh
	@p='tbuild_function_acos.sh'; \
	b='tbuild_function_acos.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_acosh.sh.log: tbuild_function_acosh.sh
	@p='tbuild_function_acosh.sh'; \
	b='tbuild_function_acosh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_add.sh.log: tbuild_function_add.sh
	@p='tbuild_function_add.sh'; \
	b='tbuild_function_add.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_asin.sh.log: tbuild_function_asin.sh
	@p='tbuild_function_asin.sh'; \
	b='tbuild_function_asin.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_asinh.sh.log: tbuild_function_asinh.sh
	@p='tbuild_function_asinh.sh'; \
	b='tbuild_function_asinh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_atan.sh.log: tbuild_function_atan.sh
	@p='tbuild_function_atan.sh'; \
	b='tbuild_function_atan.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_atanh.sh.log: tbuild_function_atanh.sh
	@p='tbuild_function_atanh.sh'; \
	b='tbuild_function_atanh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_ceil.sh.log: tbuild_function_ceil.sh
	@p='tbuild_function_ceil.sh'; \
	b='tbuild_function_ceil.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_cos.sh.log: tbuild_function_cos.sh
	@p='tbuild_function_cos.sh'; \
	b='tbuild_function_cos.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_cosh.sh.log: tbuild_function_cosh.sh
	@p='tbuild_function_cosh.sh'; \
	b='tbuild_function_cosh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_div.sh.log: tbuild_function_div.sh
	@p='tbuild_function_div.sh'; \
	b='tbuild_function_div.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_double.sh.log: tbuild_function_double.sh
	@p='tbuild_function_double.sh'; \
	b='tbuild_function_double.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_double_double.sh.log: tbuild_function_double_double.sh
	@p='tbuild_function_double_double.sh'; \
	b='tbuild_function_double_double.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_doubleextended.sh.log: tbuild_function_doubleextended.sh
	@p='tbuild_function_doubleextended.sh'; \
	b='tbuild_function_doubleextended.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_erf.sh.log: tbuild_function_erf.sh
	@p='tbuild_function_erf.sh'; \
	b='tbuild_function_erf.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_erfc.sh.log: tbuild_function_erfc.sh
	@p='tbuild_function_erfc.sh'; \
	b='tbuild_function_erfc.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_exp.sh.log: tbuild_function_exp.sh
	@p='tbuild_function_exp.sh'; \
	b='tbuild_function_exp.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_expm1.sh.log: tbuild_function_expm1.sh
	@p='tbuild_function_expm1.sh'; \
	b='tbuild_function_expm1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_floor.sh.log: tbuild_function_floor.sh
	@p='tbuild_function_floor.sh'; \
	b='tbuild_function_floor.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_free_variable.sh.log: tbuild_function_free_variable.sh
	@p='tbuild_function_free_variable.sh'; \
	b='tbuild_function_free_variable.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_halfprecision.sh.log: tbuild_function_halfprecision.sh
	@p='tbuild_function_halfprecision.sh'; \
	b='tbuild_function_halfprecision.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_libraryconstant.sh.log: tbuild_function_libraryconstant.sh
	@p='tbuild_function_libraryconstant.sh'; \
	b='tbuild_function_libraryconstant.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_libraryfunction.sh.log: tbuild_function_libraryfunction.sh
	@p='tbuild_function_libraryfunction.sh'; \
	b='tbuild_function_libraryfunction.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_log10.sh.log: tbuild_function_log10.sh
	@p='tbuild_function_log10.sh'; \
	b='tbuild_function_log10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_log1p.sh.log: tbuild_function_log1p.sh
	@p='tbuild_function_log1p.sh'; \
	b='tbuild_function_log1p.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_log2.sh.log: tbuild_function_log2.sh
	@p='tbuild_function_log2.sh'; \
	b='tbuild_function_log2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_log.sh.log: tbuild_function_log.sh
	@p='tbuild_function_log.sh'; \
	b='tbuild_function_log.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_mul.sh.log: tbuild_function_mul.sh
	@p='tbuild_function_mul.sh'; \
	b='tbuild_function_mul.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_nearestint.sh.log: tbuild_function_nearestint.sh
	@p='tbuild_function_nearestint.sh'; \
	b='tbuild_function_nearestint.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_neg.sh.log: tbuild_function_neg.sh
	@p='tbuild_function_neg.sh'; \
	b='tbuild_function_neg.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_pi.sh.log: tbuild_function_pi.sh
	@p='tbuild_function_pi.sh'; \
	b='tbuild_function_pi.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_pow.sh.log: tbuild_function_pow.sh
	@p='tbuild_function_pow.sh'; \
	b='tbuild_function_pow.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_procedurefunction.sh.log: tbuild_function_procedurefunction.sh
	@p='tbuild_function_procedurefunction.sh'; \
	b='tbuild_function_procedurefunction.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_quad.sh.log: tbuild_function_quad.sh
	@p='tbuild_function_quad.sh'; \
	b='tbuild_function_quad.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_sin.sh.log: tbuild_function_sin.sh
	@p='tbuild_function_sin.sh'; \
	b='tbuild_function_sin.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_single.sh.log: tbuild_function_single.sh
	@p='tbuild_function_single.sh'; \
	b='tbuild_function_single.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_sinh.sh.log: tbuild_function_sinh.sh
	@p='tbuild_function_sinh.sh'; \
	b='tbuild_function_sinh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_sqrt.sh.log: tbuild_function_sqrt.sh
	@p='tbuild_function_sqrt.sh'; \
	b='tbuild_function_sqrt.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_sub.sh.log: tbuild_function_sub.sh
	@p='tbuild_function_sub.sh'; \
	b='tbuild_function_sub.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_tan.sh.log: tbuild_function_tan.sh
	@p='tbuild_function_tan.sh'; \
	b='tbuild_function_tan.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_tanh.sh.log: tbuild_function_tanh.sh
	@p='tbuild_function_tanh.sh'; \
	b='tbuild_function_tanh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_function_triple_double.sh.log: tbuild_function_triple_double.sh
	@p='tbuild_function_triple_double.sh'; \
	b='tbuild_function_triple_double.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tbuild_list.sh.log: tbuild_list.sh
	@p='tbuild_list.sh'; \
	b='tbuild_list.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcanonical.sh.log: tcanonical.sh
	@p='tcanonical.sh'; \
	b='tcanonical.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tceil.sh.log: tceil.sh
	@p='tceil.sh'; \
	b='tceil.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcheckinfnorm.sh.log: tcheckinfnorm.sh
	@p='tcheckinfnorm.sh'; \
	b='tcheckinfnorm.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmp_equal.sh.log: tcmp_equal.sh
	@p='tcmp_equal.sh'; \
	b='tcmp_equal.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmp_greater.sh.log: tcmp_greater.sh
	@p='tcmp_greater.sh'; \
	b='tcmp_greater.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmp_greater_equal.sh.log: tcmp_greater_equal.sh
	@p='tcmp_greater_equal.sh'; \
	b='tcmp_greater_equal.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmp_in.sh.log: tcmp_in.sh
	@p='tcmp_in.sh'; \
	b='tcmp_in.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmp_less.sh.log: tcmp_less.sh
	@p='tcmp_less.sh'; \
	b='tcmp_less.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmp_less_equal.sh.log: tcmp_less_equal.sh
	@p='tcmp_less_equal.sh'; \
	b='tcmp_less_equal.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmp_not_equal.sh.log: tcmp_not_equal.sh
	@p='tcmp_not_equal.sh'; \
	b='tcmp_not_equal.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmp_objs_structurally.sh.log: tcmp_objs_structurally.sh
	@p='tcmp_objs_structurally.sh'; \
	b='tcmp_objs_structurally.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcoeff.sh.log: tcoeff.sh
	@p='tcoeff.sh'; \
	b='tcoeff.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tconcat.sh.log: tconcat.sh
	@p='tconcat.sh'; \
	b='tconcat.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tconstant.sh.log: tconstant.sh
	@p='tconstant.sh'; \
	b='tconstant.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tconstant_from_double.sh.log: tconstant_from_double.sh
	@p='tconstant_from_double.sh'; \
	b='tconstant_from_double.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tconstant_from_int64.sh.log: tconstant_from_int64.sh
	@p='tconstant_from_int64.sh'; \
	b='tconstant_from_int64.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tconstant_from_int.sh.log: tconstant_from_int.sh
	@p='tconstant_from_int.sh'; \
	b='tconstant_from_int.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tconstant_from_mpq.sh.log: tconstant_from_mpq.sh
	@p='tconstant_from_mpq.sh'; \
	b='tconstant_from_mpq.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tconstant_from_mpz.sh.log: tconstant_from_mpz.sh
	@p='tconstant_from_mpz.sh'; \
	b='tconstant_from_mpz.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tconstant_from_uint64.sh.log: tconstant_from_uint64.sh
	@p='tconstant_from_uint64.sh'; \
	b='tconstant_from_uint64.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tconstant_list_ops.sh.log: tconstant_list_ops.sh
	@p='tconstant_list_ops.sh'; \
	b='tconstant_list_ops.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcopy_obj.sh.log: tcopy_obj.sh
	@p='tcopy_obj.sh'; \
	b='tcopy_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcos.sh.log: tcos.sh
	@p='tcos.sh'; \
	b='tcos.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcosh.sh.log: tcosh.sh
	@p='tcosh.sh'; \
	b='tcosh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcreate_structure.sh.log: tcreate_structure.sh
	@p='tcreate_structure.sh'; \
	b='tcreate_structure.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdecimal.sh.log: tdecimal.sh
	@p='tdecimal.sh'; \
	b='tdecimal.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdecompose_function.sh.log: tdecompose_function.sh
	@p='tdecompose_function.sh'; \
	b='tdecompose_function.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdecompose_libraryconstant.sh.log: tdecompose_libraryconstant.sh
	@p='tdecompose_libraryconstant.sh'; \
	b='tdecompose_libraryconstant.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdecompose_libraryfunction.sh.log: tdecompose_libraryfunction.sh
	@p='tdecompose_libraryfunction.sh'; \
	b='tdecompose_libraryfunction.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdecompose_procedurefunction.sh.log: tdecompose_procedurefunction.sh
	@p='tdecompose_procedurefunction.sh'; \
	b='tdecompose_procedurefunction.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdefault.sh.log: tdefault.sh
	@p='tdefault.sh'; \
	b='tdefault.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdegree.sh.log: tdegree.sh
	@p='tdegree.sh'; \
	b='tdegree.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdenominator.sh.log: tdenominator.sh
	@p='tdenominator.sh'; \
	b='tdenominator.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdiff.sh.log: tdiff.sh
	@p='tdiff.sh'; \
	b='tdiff.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdirtyinfnorm.sh.log: tdirtyinfnorm.sh
	@p='tdirtyinfnorm.sh'; \
	b='tdirtyinfnorm.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdirtyintegral.sh.log: tdirtyintegral.sh
	@p='tdirtyintegral.sh'; \
	b='tdirtyintegral.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdirtysimplify.sh.log: tdirtysimplify.sh
	@p='tdirtysimplify.sh'; \
	b='tdirtysimplify.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdiv.sh.log: tdiv.sh
	@p='tdiv.sh'; \
	b='tdiv.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdouble.sh.log: tdouble.sh
	@p='tdouble.sh'; \
	b='tdouble.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdouble_double.sh.log: tdouble_double.sh
	@p='tdouble_double.sh'; \
	b='tdouble_double.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdouble_double_obj.sh.log: tdouble_double_obj.sh
	@p='tdouble_double_obj.sh'; \
	b='tdouble_double_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdoubleextended.sh.log: tdoubleextended.sh
	@p='tdoubleextended.sh'; \
	b='tdoubleextended.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdoubleextended_obj.sh.log: tdoubleextended_obj.sh
	@p='tdoubleextended_obj.sh'; \
	b='tdoubleextended_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdouble_obj.sh.log: tdouble_obj.sh
	@p='tdouble_obj.sh'; \
	b='tdouble_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdyadic.sh.log: tdyadic.sh
	@p='tdyadic.sh'; \
	b='tdyadic.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tend_elliptic_list.sh.log: tend_elliptic_list.sh
	@p='tend_elliptic_list.sh'; \
	b='tend_elliptic_list.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
terf.sh.log: terf.sh
	@p='terf.sh'; \
	b='terf.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
terfc.sh.log: terfc.sh
	@p='terfc.sh'; \
	b='terfc.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
terror.sh.log: terror.sh
	@p='terror.sh'; \
	b='terror.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tevaluate_function_at_constant_expression.sh.log: tevaluate_function_at_constant_expression.sh
	@p='tevaluate_function_at_constant_expression.sh'; \
	b='tevaluate_function_at_constant_expression.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tevaluate_function_at_point.sh.log: tevaluate_function_at_point.sh
	@p='tevaluate_function_at_point.sh'; \
	b='tevaluate_function_at_point.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
texp.sh.log: texp.sh
	@p='texp.sh'; \
	b='texp.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
texpand.sh.log: texpand.sh
	@p='texpand.sh'; \
	b='texpand.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
texpm1.sh.log: texpm1.sh
	@p='texpm1.sh'; \
	b='texpm1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tfalse.sh.log: tfalse.sh
	@p='tfalse.sh'; \
	b='tfalse.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tfile.sh.log: tfile.sh
	@p='tfile.sh'; \
	b='tfile.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tfixed.sh.log: tfixed.sh
	@p='tfixed.sh'; \
	b='tfixed.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tfloating.sh.log: tfloating.sh
	@p='tfloating.sh'; \
	b='tfloating.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tfloor.sh.log: tfloor.sh
	@p='tfloor.sh'; \
	b='tfloor.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tfpminimax.sh.log: tfpminimax.sh
	@p='tfpminimax.sh'; \
	b='tfpminimax.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tfree_variable.sh.log: tfree_variable.sh
	@p='tfree_variable.sh'; \
	b='tfree_variable.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_autosimplify.sh.log: tget_autosimplify.sh
	@p='tget_autosimplify.sh'; \
	b='tget_autosimplify.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_bounds_from_range.sh.log: tget_bounds_from_range.sh
	@p='tget_bounds_from_range.sh'; \
	b='tget_bounds_from_range.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_canonical.sh.log: tget_canonical.sh
	@p='tget_canonical.sh'; \
	b='tget_canonical.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_constant_as_double.sh.log: tget_constant_as_double.sh
	@p='tget_constant_as_double.sh'; \
	b='tget_constant_as_double.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_constant_as_int.sh.log: tget_constant_as_int.sh
	@p='tget_constant_as_int.sh'; \
	b='tget_constant_as_int.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_constant_as_int64.sh.log: tget_constant_as_int64.sh
	@p='tget_constant_as_int64.sh'; \
	b='tget_constant_as_int64.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_constant_as_mpq.sh.log: tget_constant_as_mpq.sh
	@p='tget_constant_as_mpq.sh'; \
	b='tget_constant_as_mpq.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_constant_as_mpz.sh.log: tget_constant_as_mpz.sh
	@p='tget_constant_as_mpz.sh'; \
	b='tget_constant_as_mpz.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_constant_as_uint64.sh.log: tget_constant_as_uint64.sh
	@p='tget_constant_as_uint64.sh'; \
	b='tget_constant_as_uint64.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_diam.sh.log: tget_diam.sh
	@p='tget_diam.sh'; \
	b='tget_diam.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_dieonerrormode.sh.log: tget_dieonerrormode.sh
	@p='tget_dieonerrormode.sh'; \
	b='tget_dieonerrormode.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_display.sh.log: tget_display.sh
	@p='tget_display.sh'; \
	b='tget_display.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_element_in_list.sh.log: tget_element_in_list.sh
	@p='tget_element_in_list.sh'; \
	b='tget_element_in_list.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_free_variable_name.sh.log: tget_free_variable_name.sh
	@p='tget_free_variable_name.sh'; \
	b='tget_free_variable_name.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_function_arity.sh.log: tget_function_arity.sh
	@p='tget_function_arity.sh'; \
	b='tget_function_arity.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_head_function.sh.log: tget_head_function.sh
	@p='tget_head_function.sh'; \
	b='tget_head_function.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_hopitalrecursions.sh.log: tget_hopitalrecursions.sh
	@p='tget_hopitalrecursions.sh'; \
	b='tget_hopitalrecursions.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_interval_from_range.sh.log: tget_interval_from_range.sh
	@p='tget_interval_from_range.sh'; \
	b='tget_interval_from_range.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_list_elements.sh.log: tget_list_elements.sh
	@p='tget_list_elements.sh'; \
	b='tget_list_elements.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_midpointmode.sh.log: tget_midpointmode.sh
	@p='tget_midpointmode.sh'; \
	b='tget_midpointmode.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_points.sh.log: tget_points.sh
	@p='tget_points.sh'; \
	b='tget_points.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_prec.sh.log: tget_prec.sh
	@p='tget_prec.sh'; \
	b='tget_prec.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_rationalmode.sh.log: tget_rationalmode.sh
	@p='tget_rationalmode.sh'; \
	b='tget_rationalmode.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_roundingwarnings.sh.log: tget_roundingwarnings.sh
	@p='tget_roundingwarnings.sh'; \
	b='tget_roundingwarnings.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_showmessagenumbers.sh.log: tget_showmessagenumbers.sh
	@p='tget_showmessagenumbers.sh'; \
	b='tget_showmessagenumbers.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_string.sh.log: tget_string.sh
	@p='tget_string.sh'; \
	b='tget_string.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_structure_elements.sh.log: tget_structure_elements.sh
	@p='tget_structure_elements.sh'; \
	b='tget_structure_elements.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_subfunctions.sh.log: tget_subfunctions.sh
	@p='tget_subfunctions.sh'; \
	b='tget_subfunctions.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_element_in_structure.sh.log: tget_element_in_structure.sh
	@p='tget_element_in_structure.sh'; \
	b='tget_element_in_structure.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_taylorrecursions.sh.log: tget_taylorrecursions.sh
	@p='tget_taylorrecursions.sh'; \
	b='tget_taylorrecursions.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_timing.sh.log: tget_timing.sh
	@p='tget_timing.sh'; \
	b='tget_timing.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tget_verbosity.sh.log: tget_verbosity.sh
	@p='tget_verbosity.sh'; \
	b='tget_verbosity.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thalfprecision.sh.log: thalfprecision.sh
	@p='thalfprecision.sh'; \
	b='thalfprecision.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thalfprecision_obj.sh.log: thalfprecision_obj.sh
	@p='thalfprecision_obj.sh'; \
	b='thalfprecision_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thead.sh.log: thead.sh
	@p='thead.sh'; \
	b='thead.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thexadecimal.sh.log: thexadecimal.sh
	@p='thexadecimal.sh'; \
	b='thexadecimal.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thonorcoeffprec.sh.log: thonorcoeffprec.sh
	@p='thonorcoeffprec.sh'; \
	b='thonorcoeffprec.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thorner.sh.log: thorner.sh
	@p='thorner.sh'; \
	b='thorner.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
timplementpoly.sh.log: timplementpoly.sh
	@p='timplementpoly.sh'; \
	b='timplementpoly.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinf.sh.log: tinf.sh
	@p='tinf.sh'; \
	b='tinf.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinit_with_custom_memory_functions.sh.log: tinit_with_custom_memory_functions.sh
	@p='tinit_with_custom_memory_functions.sh'; \
	b='tinit_with_custom_memory_functions.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tint_list_ops.sh.log: tint_list_ops.sh
	@p='tint_list_ops.sh'; \
	b='tint_list_ops.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tintegral.sh.log: tintegral.sh
	@p='tintegral.sh'; \
	b='tintegral.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinterval_list_ops.sh.log: tinterval_list_ops.sh
	@p='tinterval_list_ops.sh'; \
	b='tinterval_list_ops.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_absolute.sh.log: tis_absolute.sh
	@p='tis_absolute.sh'; \
	b='tis_absolute.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_binary.sh.log: tis_binary.sh
	@p='tis_binary.sh'; \
	b='tis_binary.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_decimal.sh.log: tis_decimal.sh
	@p='tis_decimal.sh'; \
	b='tis_decimal.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_default.sh.log: tis_default.sh
	@p='tis_default.sh'; \
	b='tis_default.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_double_double_obj.sh.log: tis_double_double_obj.sh
	@p='tis_double_double_obj.sh'; \
	b='tis_double_double_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_doubleextended_obj.sh.log: tis_doubleextended_obj.sh
	@p='tis_doubleextended_obj.sh'; \
	b='tis_doubleextended_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_double_obj.sh.log: tis_double_obj.sh
	@p='tis_double_obj.sh'; \
	b='tis_double_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_dyadic.sh.log: tis_dyadic.sh
	@p='tis_dyadic.sh'; \
	b='tis_dyadic.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_false.sh.log: tis_false.sh
	@p='tis_false.sh'; \
	b='tis_false.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_file.sh.log: tis_file.sh
	@p='tis_file.sh'; \
	b='tis_file.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_fixed.sh.log: tis_fixed.sh
	@p='tis_fixed.sh'; \
	b='tis_fixed.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_floating.sh.log: tis_floating.sh
	@p='tis_floating.sh'; \
	b='tis_floating.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_halfprecision_obj.sh.log: tis_halfprecision_obj.sh
	@p='tis_halfprecision_obj.sh'; \
	b='tis_halfprecision_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_hexadecimal.sh.log: tis_hexadecimal.sh
	@p='tis_hexadecimal.sh'; \
	b='tis_hexadecimal.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_honorcoeffprec.sh.log: tis_honorcoeffprec.sh
	@p='tis_honorcoeffprec.sh'; \
	b='tis_honorcoeffprec.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_off.sh.log: tis_off.sh
	@p='tis_off.sh'; \
	b='tis_off.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_on.sh.log: tis_on.sh
	@p='tis_on.sh'; \
	b='tis_on.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_perturb.sh.log: tis_perturb.sh
	@p='tis_perturb.sh'; \
	b='tis_perturb.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_pi.sh.log: tis_pi.sh
	@p='tis_pi.sh'; \
	b='tis_pi.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_postscript.sh.log: tis_postscript.sh
	@p='tis_postscript.sh'; \
	b='tis_postscript.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_postscriptfile.sh.log: tis_postscriptfile.sh
	@p='tis_postscriptfile.sh'; \
	b='tis_postscriptfile.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_powers.sh.log: tis_powers.sh
	@p='tis_powers.sh'; \
	b='tis_powers.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_quad_obj.sh.log: tis_quad_obj.sh
	@p='tis_quad_obj.sh'; \
	b='tis_quad_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_relative.sh.log: tis_relative.sh
	@p='tis_relative.sh'; \
	b='tis_relative.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_round_down.sh.log: tis_round_down.sh
	@p='tis_round_down.sh'; \
	b='tis_round_down.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_round_to_nearest.sh.log: tis_round_to_nearest.sh
	@p='tis_round_to_nearest.sh'; \
	b='tis_round_to_nearest.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_round_towards_zero.sh.log: tis_round_towards_zero.sh
	@p='tis_round_towards_zero.sh'; \
	b='tis_round_towards_zero.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_round_up.sh.log: tis_round_up.sh
	@p='tis_round_up.sh'; \
	b='tis_round_up.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_single_obj.sh.log: tis_single_obj.sh
	@p='tis_single_obj.sh'; \
	b='tis_single_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_triple_double_obj.sh.log: tis_triple_double_obj.sh
	@p='tis_triple_double_obj.sh'; \
	b='tis_triple_double_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_true.sh.log: tis_true.sh
	@p='tis_true.sh'; \
	b='tis_true.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tis_void.sh.log: tis_void.sh
	@p='tis_void.sh'; \
	b='tis_void.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tlength.sh.log: tlength.sh
	@p='tlength.sh'; \
	b='tlength.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tlibraryconstant.sh.log: tlibraryconstant.sh
	@p='tlibraryconstant.sh'; \
	b='tlibraryconstant.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tlibraryfunction.sh.log: tlibraryfunction.sh
	@p='tlibraryfunction.sh'; \
	b='tlibraryfunction.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tlist.sh.log: tlist.sh
	@p='tlist.sh'; \
	b='tlist.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tlog10.sh.log: tlog10.sh
	@p='tlog10.sh'; \
	b='tlog10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tlog1p.sh.log: tlog1p.sh
	@p='tlog1p.sh'; \
	b='tlog1p.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tlog2.sh.log: tlog2.sh
	@p='tlog2.sh'; \
	b='tlog2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tlog.sh.log: tlog.sh
	@p='tlog.sh'; \
	b='tlog.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tmacros_build_function.sh.log: tmacros_build_function.sh
	@p='tmacros_build_function.sh'; \
	b='tmacros_build_function.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tmantissa_and_exponent.sh.log: tmantissa_and_exponent.sh
	@p='tmantissa_and_exponent.sh'; \
	b='tmantissa_and_exponent.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tmax.sh.log: tmax.sh
	@p='tmax.sh'; \
	b='tmax.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tmid.sh.log: tmid.sh
	@p='tmid.sh'; \
	b='tmid.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tmin.sh.log: tmin.sh
	@p='tmin.sh'; \
	b='tmin.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tmsg_callback_functions.sh.log: tmsg_callback_functions.sh
	@p='tmsg_callback_functions.sh'; \
	b='tmsg_callback_functions.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tmul.sh.log: tmul.sh
	@p='tmul.sh'; \
	b='tmul.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tname_free_variable.sh.log: tname_free_variable.sh
	@p='tname_free_variable.sh'; \
	b='tname_free_variable.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tnearestint.sh.log: tnearestint.sh
	@p='tnearestint.sh'; \
	b='tnearestint.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tneg.sh.log: tneg.sh
	@p='tneg.sh'; \
	b='tneg.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tnegate.sh.log: tnegate.sh
	@p='tnegate.sh'; \
	b='tnegate.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tnumberroots.sh.log: tnumberroots.sh
	@p='tnumberroots.sh'; \
	b='tnumberroots.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tnumerator.sh.log: tnumerator.sh
	@p='tnumerator.sh'; \
	b='tnumerator.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tobj_is_end_elliptic_list.sh.log: tobj_is_end_elliptic_list.sh
	@p='tobj_is_end_elliptic_list.sh'; \
	b='tobj_is_end_elliptic_list.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tobj_is_error.sh.log: tobj_is_error.sh
	@p='tobj_is_error.sh'; \
	b='tobj_is_error.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tobj_is_function.sh.log: tobj_is_function.sh
	@p='tobj_is_function.sh'; \
	b='tobj_is_function.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tobj_is_list.sh.log: tobj_is_list.sh
	@p='tobj_is_list.sh'; \
	b='tobj_is_list.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tobj_is_range.sh.log: tobj_is_range.sh
	@p='tobj_is_range.sh'; \
	b='tobj_is_range.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tobj_is_string.sh.log: tobj_is_string.sh
	@p='tobj_is_string.sh'; \
	b='tobj_is_string.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tobj_is_structure.sh.log: tobj_is_structure.sh
	@p='tobj_is_structure.sh'; \
	b='tobj_is_structure.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tobject_list_ops.sh.log: tobject_list_ops.sh
	@p='tobject_list_ops.sh'; \
	b='tobject_list_ops.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
toff.sh.log: toff.sh
	@p='toff.sh'; \
	b='toff.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ton.sh.log: ton.sh
	@p='ton.sh'; \
	b='ton.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tor.sh.log: tor.sh
	@p='tor.sh'; \
	b='tor.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tperturb.sh.log: tperturb.sh
	@p='tperturb.sh'; \
	b='tperturb.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tpi.sh.log: tpi.sh
	@p='tpi.sh'; \
	b='tpi.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tpostscript.sh.log: tpostscript.sh
	@p='tpostscript.sh'; \
	b='tpostscript.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tpostscriptfile.sh.log: tpostscriptfile.sh
	@p='tpostscriptfile.sh'; \
	b='tpostscriptfile.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tpow.sh.log: tpow.sh
	@p='tpow.sh'; \
	b='tpow.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tpowers.sh.log: tpowers.sh
	@p='tpowers.sh'; \
	b='tpowers.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tprecision.sh.log: tprecision.sh
	@p='tprecision.sh'; \
	b='tprecision.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tprepend.sh.log: tprepend.sh
	@p='tprepend.sh'; \
	b='tprepend.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tprintdouble.sh.log: tprintdouble.sh
	@p='tprintdouble.sh'; \
	b='tprintdouble.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tprintexpansion.sh.log: tprintexpansion.sh
	@p='tprintexpansion.sh'; \
	b='tprintexpansion.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tprintf.sh.log: tprintf.sh
	@p='tprintf.sh'; \
	b='tprintf.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tprintsingle.sh.log: tprintsingle.sh
	@p='tprintsingle.sh'; \
	b='tprintsingle.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tprocedurefunction.sh.log: tprocedurefunction.sh
	@p='tprocedurefunction.sh'; \
	b='tprocedurefunction.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tquad.sh.log: tquad.sh
	@p='tquad.sh'; \
	b='tquad.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tquad_obj.sh.log: tquad_obj.sh
	@p='tquad_obj.sh'; \
	b='tquad_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
trange_from_bounds.sh.log: trange_from_bounds.sh
	@p='trange_from_bounds.sh'; \
	b='trange_from_bounds.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
trange_from_interval.sh.log: trange_from_interval.sh
	@p='trange_from_interval.sh'; \
	b='trange_from_interval.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
trationalapprox.sh.log: trationalapprox.sh
	@p='trationalapprox.sh'; \
	b='trationalapprox.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
trelative.sh.log: trelative.sh
	@p='trelative.sh'; \
	b='trelative.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tremez.sh.log: tremez.sh
	@p='tremez.sh'; \
	b='tremez.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
trevert.sh.log: trevert.sh
	@p='trevert.sh'; \
	b='trevert.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tround_down.sh.log: tround_down.sh
	@p='tround_down.sh'; \
	b='tround_down.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tround_to_nearest.sh.log: tround_to_nearest.sh
	@p='tround_to_nearest.sh'; \
	b='tround_to_nearest.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tround_towards_zero.sh.log: tround_towards_zero.sh
	@p='tround_towards_zero.sh'; \
	b='tround_towards_zero.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tround_up.sh.log: tround_up.sh
	@p='tround_up.sh'; \
	b='tround_up.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
troundcoefficients.sh.log: troundcoefficients.sh
	@p='troundcoefficients.sh'; \
	b='troundcoefficients.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsearchgal.sh.log: tsearchgal.sh
	@p='tsearchgal.sh'; \
	b='tsearchgal.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_autosimplify_and_print.sh.log: tset_autosimplify_and_print.sh
	@p='tset_autosimplify_and_print.sh'; \
	b='tset_autosimplify_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_autosimplify.sh.log: tset_autosimplify.sh
	@p='tset_autosimplify.sh'; \
	b='tset_autosimplify.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_canonical_and_print.sh.log: tset_canonical_and_print.sh
	@p='tset_canonical_and_print.sh'; \
	b='tset_canonical_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_canonical.sh.log: tset_canonical.sh
	@p='tset_canonical.sh'; \
	b='tset_canonical.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_diam_and_print.sh.log: tset_diam_and_print.sh
	@p='tset_diam_and_print.sh'; \
	b='tset_diam_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_diam.sh.log: tset_diam.sh
	@p='tset_diam.sh'; \
	b='tset_diam.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_dieonerrormode_and_print.sh.log: tset_dieonerrormode_and_print.sh
	@p='tset_dieonerrormode_and_print.sh'; \
	b='tset_dieonerrormode_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_dieonerrormode.sh.log: tset_dieonerrormode.sh
	@p='tset_dieonerrormode.sh'; \
	b='tset_dieonerrormode.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_display_and_print.sh.log: tset_display_and_print.sh
	@p='tset_display_and_print.sh'; \
	b='tset_display_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_display.sh.log: tset_display.sh
	@p='tset_display.sh'; \
	b='tset_display.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_hopitalrecursions_and_print.sh.log: tset_hopitalrecursions_and_print.sh
	@p='tset_hopitalrecursions_and_print.sh'; \
	b='tset_hopitalrecursions_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_hopitalrecursions.sh.log: tset_hopitalrecursions.sh
	@p='tset_hopitalrecursions.sh'; \
	b='tset_hopitalrecursions.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_midpointmode_and_print.sh.log: tset_midpointmode_and_print.sh
	@p='tset_midpointmode_and_print.sh'; \
	b='tset_midpointmode_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_midpointmode.sh.log: tset_midpointmode.sh
	@p='tset_midpointmode.sh'; \
	b='tset_midpointmode.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_points_and_print.sh.log: tset_points_and_print.sh
	@p='tset_points_and_print.sh'; \
	b='tset_points_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_points.sh.log: tset_points.sh
	@p='tset_points.sh'; \
	b='tset_points.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_prec_and_print.sh.log: tset_prec_and_print.sh
	@p='tset_prec_and_print.sh'; \
	b='tset_prec_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_prec.sh.log: tset_prec.sh
	@p='tset_prec.sh'; \
	b='tset_prec.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_rationalmode_and_print.sh.log: tset_rationalmode_and_print.sh
	@p='tset_rationalmode_and_print.sh'; \
	b='tset_rationalmode_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_rationalmode.sh.log: tset_rationalmode.sh
	@p='tset_rationalmode.sh'; \
	b='tset_rationalmode.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_roundingwarnings_and_print.sh.log: tset_roundingwarnings_and_print.sh
	@p='tset_roundingwarnings_and_print.sh'; \
	b='tset_roundingwarnings_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_roundingwarnings.sh.log: tset_roundingwarnings.sh
	@p='tset_roundingwarnings.sh'; \
	b='tset_roundingwarnings.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_showmessagenumbers_and_print.sh.log: tset_showmessagenumbers_and_print.sh
	@p='tset_showmessagenumbers_and_print.sh'; \
	b='tset_showmessagenumbers_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_showmessagenumbers.sh.log: tset_showmessagenumbers.sh
	@p='tset_showmessagenumbers.sh'; \
	b='tset_showmessagenumbers.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_taylorrecursions_and_print.sh.log: tset_taylorrecursions_and_print.sh
	@p='tset_taylorrecursions_and_print.sh'; \
	b='tset_taylorrecursions_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_taylorrecursions.sh.log: tset_taylorrecursions.sh
	@p='tset_taylorrecursions.sh'; \
	b='tset_taylorrecursions.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_timing_and_print.sh.log: tset_timing_and_print.sh
	@p='tset_timing_and_print.sh'; \
	b='tset_timing_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_timing.sh.log: tset_timing.sh
	@p='tset_timing.sh'; \
	b='tset_timing.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_verbosity_and_print.sh.log: tset_verbosity_and_print.sh
	@p='tset_verbosity_and_print.sh'; \
	b='tset_verbosity_and_print.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_verbosity.sh.log: tset_verbosity.sh
	@p='tset_verbosity.sh'; \
	b='tset_verbosity.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsimplify.sh.log: tsimplify.sh
	@p='tsimplify.sh'; \
	b='tsimplify.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsin.sh.log: tsin.sh
	@p='tsin.sh'; \
	b='tsin.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsingle.sh.log: tsingle.sh
	@p='tsingle.sh'; \
	b='tsingle.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsingle_obj.sh.log: tsingle_obj.sh
	@p='tsingle_obj.sh'; \
	b='tsingle_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsinh.sh.log: tsinh.sh
	@p='tsinh.sh'; \
	b='tsinh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsort.sh.log: tsort.sh
	@p='tsort.sh'; \
	b='tsort.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsqrt.sh.log: tsqrt.sh
	@p='tsqrt.sh'; \
	b='tsqrt.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tstring.sh.log: tstring.sh
	@p='tstring.sh'; \
	b='tstring.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tstring_list_ops.sh.log: tstring_list_ops.sh
	@p='tstring_list_ops.sh'; \
	b='tstring_list_ops.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsub.sh.log: tsub.sh
	@p='tsub.sh'; \
	b='tsub.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsup.sh.log: tsup.sh
	@p='tsup.sh'; \
	b='tsup.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsubpoly.sh.log: tsubpoly.sh
	@p='tsubpoly.sh'; \
	b='tsubpoly.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsubstitute.sh.log: tsubstitute.sh
	@p='tsubstitute.sh'; \
	b='tsubstitute.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ttail.sh.log: ttail.sh
	@p='ttail.sh'; \
	b='ttail.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ttan.sh.log: ttan.sh
	@p='ttan.sh'; \
	b='ttan.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ttanh.sh.log: ttanh.sh
	@p='ttanh.sh'; \
	b='ttanh.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ttriple_double.sh.log: ttriple_double.sh
	@p='ttriple_double.sh'; \
	b='ttriple_double.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ttriple_double_obj.sh.log: ttriple_double_obj.sh
	@p='ttriple_double_obj.sh'; \
	b='ttriple_double_obj.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ttrue.sh.log: ttrue.sh
	@p='ttrue.sh'; \
	b='ttrue.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tv_build_end_elliptic_list.sh.log: tv_build_end_elliptic_list.sh
	@p='tv_build_end_elliptic_list.sh'; \
	b='tv_build_end_elliptic_list.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tv_build_list.sh.log: tv_build_list.sh
	@p='tv_build_list.sh'; \
	b='tv_build_list.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tv_decompose_function.sh.log: tv_decompose_function.sh
	@p='tv_decompose_function.sh'; \
	b='tv_decompose_function.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tv_fpminimax.sh.log: tv_fpminimax.sh
	@p='tv_fpminimax.sh'; \
	b='tv_fpminimax.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tv_get_subfunctions.sh.log: tv_get_subfunctions.sh
	@p='tv_get_subfunctions.sh'; \
	b='tv_get_subfunctions.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tv_implementpoly.sh.log: tv_implementpoly.sh
	@p='tv_implementpoly.sh'; \
	b='tv_implementpoly.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tv_max.sh.log: tv_max.sh
	@p='tv_max.sh'; \
	b='tv_max.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tv_min.sh.log: tv_min.sh
	@p='tv_min.sh'; \
	b='tv_min.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tv_remez.sh.log: tv_remez.sh
	@p='tv_remez.sh'; \
	b='tv_remez.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tvoid.sh.log: tvoid.sh
	@p='tvoid.sh'; \
	b='tvoid.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am

                                   # but we do not know how to explain it to automake.

libraryexample.$(OBJEXT): libraryexample.c
	$(CC) $(CFLAGS) $(AM_CPPFLAGS) -fPIC -Wall -c libraryexample.c

libraryexample.a: libraryexample.$(OBJEXT)
	$(CC) $(LDFLAGS) $(AM_LDFLAGS) -shared -o libraryexample.a libraryexample.$(OBJEXT) -lmpfi -lmpfr -lgmp

.PHONY: force_compilation$(EXEEXT)

force_compilation$(EXEEXT):
	@echo "Recompiling sollya";cd $(top_builddir); $(MAKE) libsollya.la

$(TESTS): check.proto
	@echo "Building "$@
	@echo "#!/bin/sh" > $@
	@echo "TESTFILES=\""$(@:.sh=)"\"" >> $@
	@cat check.proto >> $@
	@chmod +x $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
