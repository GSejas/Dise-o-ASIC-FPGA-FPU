/* Set of tests for TMandAD */

check = proc(L) {
  var i;
  for i in L do sup(i)-inf(i);
};

constructPoly = proc(L) {
  var i,res,n;
  res = 0; n=length(L);
  for i in revert(L) do {res := mid(i)+x*res/n; n := n-1;};
  return res;
};

print("=============== Check TMandAD #1 ================");
L=taylorform(x, 5, 1, [0,2], relative); constructPoly(autodiff(x, 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #2 ================");
L=taylorform(pi, 6, 2, [1,2]); constructPoly(autodiff(pi, 6, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #3 ================");
L=taylorform(0.1, 5, pi, [0, 4]); constructPoly(autodiff(0.1, 5, pi));
L[0]; check(L[1]);
print("=============== Check TMandAD #4 ================");
L=taylorform(-x, 6, 0.4, [0.4], absolute); constructPoly(autodiff(-x, 6, 0.4));
L[0]; check(L[1]);
print("=============== Check TMandAD #5 ================");
L=taylorform(-sin(x), 5, 3, [1,4]); constructPoly(autodiff(-sin(x), 5, 3));
L[0]; check(L[1]);
print("=============== Check TMandAD #6 ================");
L=taylorform(x+cos(x), 6, 0.2, [0, 0.3], relative); constructPoly(autodiff(x+cos(x), 6, 0.2));
L[0]; check(L[1]);
print("=============== Check TMandAD #7 ================");
L=taylorform(exp(x)+sin(x+log(x)), 5, [0.8], [0.7, 0.9]); constructPoly(autodiff(exp(x)+sin(x+log(x)), 5, [0.8]));
L[0]; check(L[1]);
print("=============== Check TMandAD #8 ================");
L=taylorform(x-cos(x), 6, pi, [3,4]); constructPoly(autodiff(x-cos(x), 6, pi));
L[0]; check(L[1]);
print("=============== Check TMandAD #9 ================");
L=taylorform(exp(x)-sin(x-log(x)), 5, 1.3, [1,1.5]); constructPoly(autodiff(exp(x)-sin(x-log(x)), 5, 1.3));
L[0]; check(L[1]);
print("=============== Check TMandAD #10 ================");
L=taylorform(x*x, 6, [pi], [2,5], relative); constructPoly(autodiff(x*x, 6, [pi]));
L[0]; check(L[1]);
print("=============== Check TMandAD #11 ================");
L=taylorform(exp(x)*asin(log(x)), 5, 1.1, [1.1, 1.2]); constructPoly(autodiff(exp(x)*asin(log(x)), 5, 1.1));
L[0]; check(L[1]);
print("=============== Check TMandAD #12 ================");
L=taylorform(x/cos(x), 6, 0, [-1, 1]); constructPoly(autodiff(x/cos(x), 6, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #13 ================");
L=taylorform(sinh(x)/cos(x/cosh(x)), 5, 0.2, [-1,1]); constructPoly(autodiff(sinh(x)/cos(x/cosh(x)), 5, 0.2));
L[0]; check(L[1]);
print("=============== Check TMandAD #14 ================");
L=taylorform(sqrt(x), 6, [pi], [1,4], relative); constructPoly(autodiff(sqrt(x), 6, [pi]));
L[0]; check(L[1]);
print("=============== Check TMandAD #15 ================");
L=taylorform(sqrt(exp(x)), 5, 0.25, [0.25]); constructPoly(autodiff(sqrt(exp(x)), 5, 0.25));
L[0]; check(L[1]);
print("=============== Check TMandAD #16 ================");
L=taylorform(acosh(sqrt(x)), 6, 7, [6,8]); constructPoly(autodiff(acosh(sqrt(x)), 6, 7));
L[0]; check(L[1]);
print("=============== Check TMandAD #17 ================");
L=taylorform(exp(x), 5, [0.1], [-2,2]); constructPoly(autodiff(exp(x), 5, [0.1]));
L[0]; check(L[1]);
print("=============== Check TMandAD #18 ================");
L=taylorform(exp(cos(x)), 6, 2, [2], absolute); constructPoly(autodiff(exp(cos(x)), 6, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #19 ================");
L=taylorform(sin(exp(x)), 5, 2, [1,3], absolute); constructPoly(autodiff(sin(exp(x)), 5, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #20 ================");
L=taylorform(log(x), 6, 2, [1.5,2.5]); constructPoly(autodiff(log(x), 6, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #21 ================");
L=taylorform(log(cosh(x)), 5, [1.1], [1,1.2], relative); constructPoly(autodiff(log(cosh(x)), 5, [1.1]));
L[0]; check(L[1]);
print("=============== Check TMandAD #22 ================");
L=taylorform(cosh(log(x)), 6, [exp(2)], [7,8]); constructPoly(autodiff(cosh(log(x)), 6, [exp(2)]));
L[0]; check(L[1]);
print("=============== Check TMandAD #23 ================");
L=taylorform(log2(x), 5, 3, [2,4]); constructPoly(autodiff(log2(x), 5, 3));
L[0]; check(L[1]);
print("=============== Check TMandAD #24 ================");
L=taylorform(log2(cosh(x)), 6, 0.25, [0.25, 0.5], absolute); constructPoly(autodiff(log2(cosh(x)), 6, 0.25));
L[0]; check(L[1]);
print("=============== Check TMandAD #25 ================");
L=taylorform(cosh(log2(x)), 5, 0.25, [0.2, 0.6]); constructPoly(autodiff(cosh(log2(x)), 5, 0.25));
L[0]; check(L[1]);
print("=============== Check TMandAD #26 ================");
L=taylorform(log10(x), 6, 0.25, [0.25], absolute); constructPoly(autodiff(log10(x), 6, 0.25));
L[0]; check(L[1]);
print("=============== Check TMandAD #27 ================");
L=taylorform(log10(cosh(x)), 5, 0.25, [0.2, 0.3]); constructPoly(autodiff(log10(cosh(x)), 5, 0.25));
L[0]; check(L[1]);
print("=============== Check TMandAD #28 ================");
L=taylorform(cosh(log10(x)), 6, 0.25, [0.21, 0.26], relative); constructPoly(autodiff(cosh(log10(x)), 6, 0.25));
L[0]; check(L[1]);
print("=============== Check TMandAD #29 ================");
L=taylorform(sin(x), 5, [3], [2, pi], relative); constructPoly(autodiff(sin(x), 5, [3]));
L[0]; check(L[1]);
print("=============== Check TMandAD #30 ================");
L=taylorform(sin(cosh(x)), 6, [3], [2,3]); constructPoly(autodiff(sin(cosh(x)), 6, [3]));
L[0]; check(L[1]);
print("=============== Check TMandAD #31 ================");
L=taylorform(cosh(sin(x)), 5, [2], [1,5], absolute); constructPoly(autodiff(cosh(sin(x)), 5, [2]));
L[0]; check(L[1]);
print("=============== Check TMandAD #32 ================");
L=taylorform(cos(x), 6, [2], [-2, 2]); constructPoly(autodiff(cos(x), 6, [2]));
L[0]; check(L[1]);
print("=============== Check TMandAD #33 ================");
L=taylorform(cos(log(x)), 5, pi, [3,4]); constructPoly(autodiff(cos(log(x)), 5, pi));
L[0]; check(L[1]);
print("=============== Check TMandAD #34 ================");
L=taylorform(log(cos(x)), 6, 0, [-0.5, 0.5], relative); constructPoly(autodiff(log(cos(x)), 6, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #35 ================");
L=taylorform(tan(x), 5, [pi], [pi-0.5, pi+0.6]); constructPoly(autodiff(tan(x), 5, [pi]));
L[0]; check(L[1]);
print("=============== Check TMandAD #36 ================");
L=taylorform(tan(asin(x)), 6, 0.5, [0.4, 0.7]); constructPoly(autodiff(tan(asin(x)), 6, 0.5));
L[0]; check(L[1]);
print("=============== Check TMandAD #37 ================");
L=taylorform(asin(tan(x)), 5, 0.1, [-0.1, 0.2], relative); constructPoly(autodiff(asin(tan(x)), 5, 0.1));
L[0]; check(L[1]);
print("=============== Check TMandAD #38 ================");
L=taylorform(asin(x), 6, 0, [-0.2, 0.1]); constructPoly(autodiff(asin(x), 6, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #39 ================");
L=taylorform(acos(x), 5, 0.2, [0.2]); constructPoly(autodiff(acos(x), 5, 0.2));
L[0]; check(L[1]);
print("=============== Check TMandAD #40 ================");
L=taylorform(acos(exp(x)), 6, -3, [-5, -1]); constructPoly(autodiff(acos(exp(x)), 6, -3));
L[0]; check(L[1]);
print("=============== Check TMandAD #41 ================");
L=taylorform(exp(acos(x)), 5, 0.5, [0, 0.9], absolute); constructPoly(autodiff(exp(acos(x)), 5, 0.5));
L[0]; check(L[1]);
print("=============== Check TMandAD #42 ================");
L=taylorform(atan(x), 6, 0.5, [0.3, 1], relative); constructPoly(autodiff(atan(x), 6, 0.5));
L[0]; check(L[1]);
print("=============== Check TMandAD #43 ================");
L=taylorform(atan(sinh(x)), 5, [pi], [3,4]); constructPoly(autodiff(atan(sinh(x)), 5, [pi]));
L[0]; check(L[1]);
print("=============== Check TMandAD #44 ================");
L=taylorform(sinh(atan(x)), 6, [pi], [pi]); constructPoly(autodiff(sinh(atan(x)), 6, [pi]));
L[0]; check(L[1]);
print("=============== Check TMandAD #45 ================");
L=taylorform(sinh(x), 5, 0.3); constructPoly(autodiff(sinh(x), 5, 0.3));
L[0]; check(L[1]);
print("=============== Check TMandAD #46 ================");
L=taylorform(cosh(x), 6, 0.3, [0.1, 0.5], absolute); constructPoly(autodiff(cosh(x), 6, 0.3));
L[0]; check(L[1]);
print("=============== Check TMandAD #47 ================");
L=taylorform(asinh(x), 5, 0.1, [0,0.25], relative); constructPoly(autodiff(asinh(x), 5, 0.1));
L[0]; check(L[1]);
print("=============== Check TMandAD #48 ================");
L=taylorform(asinh(exp(x)), 6, 2, [1.75, 2.25]); constructPoly(autodiff(asinh(exp(x)), 6, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #49 ================");
L=taylorform(exp(asinh(x)), 5, 0.1, [0.05, 0.125]); constructPoly(autodiff(exp(asinh(x)), 5, 0.1));
L[0]; check(L[1]);
print("=============== Check TMandAD #50 ================");
L=taylorform(acosh(x), 6, 3, [3, pi]); constructPoly(autodiff(acosh(x), 6, 3));
L[0]; check(L[1]);
print("=============== Check TMandAD #51 ================");
L=taylorform(atan(acosh(x)), 5, 1.3, absolute); constructPoly(autodiff(atan(acosh(x)), 5, 1.3));
L[0]; check(L[1]);
print("=============== Check TMandAD #52 ================");
L=taylorform(acosh(atan(x)), 6, 10, [10, 12]); constructPoly(autodiff(acosh(atan(x)), 6, 10));
L[0]; check(L[1]);
print("=============== Check TMandAD #53 ================");
L=taylorform(atanh(x), 5, 0.5, [0.5, 0.75], relative); constructPoly(autodiff(atanh(x), 5, 0.5));
L[0]; check(L[1]);
print("=============== Check TMandAD #54 ================");
L=taylorform(atanh(acos(x)), 6, 0.75); constructPoly(autodiff(atanh(acos(x)), 6, 0.75));
L[0]; check(L[1]);
print("=============== Check TMandAD #55 ================");
L=taylorform(acos(atanh(x)), 5, 0.01, [0.01], absolute); constructPoly(autodiff(acos(atanh(x)), 5, 0.01));
L[0]; check(L[1]);
print("=============== Check TMandAD #56 ================");
L=taylorform(erf(x), 6, 2, [1,3], relative); constructPoly(autodiff(erf(x), 6, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #57 ================");
L=taylorform(erf(atan(x)), 5, [pi], [2, 4]); constructPoly(autodiff(erf(atan(x)), 5, [pi])); 
L[0]; check(L[1]);
print("=============== Check TMandAD #58 ================");
L=taylorform(asinh(erf(x)), 6, [pi], [3, 3.5]); constructPoly(autodiff(asinh(erf(x)), 6, [pi]));
L[0]; check(L[1]);
print("=============== Check TMandAD #59 ================");
L=taylorform(erfc(acos(x)), 5, [0.1], [0.01, 1], absolute); constructPoly(autodiff(erfc(acos(x)), 5, [0.1]));
L[0]; check(L[1]);
print("=============== Check TMandAD #60 ================");
L=taylorform(acosh(erfc(x)), 6, -1, [-2,0], absolute); constructPoly(autodiff(acosh(erfc(x)), 6, -1));
L[0]; check(L[1]);
print("=============== Check TMandAD #61 ================");
L=taylorform(log1p(x), 5, 0.1);
L[0]; check(L[1]);
print("=============== Check TMandAD #62 ================");
L=taylorform(log1p(cos(x)), 6, 1.5, [1,2]); constructPoly(autodiff(log1p(cos(x)), 6, 1.5));
L[0]; check(L[1]);
print("=============== Check TMandAD #63 ================");
L=taylorform(cos(log1p(x)), 5, 1.5, [1,2], relative); constructPoly(autodiff(cos(log1p(x)), 5, 1.5));
L[0]; check(L[1]);
print("=============== Check TMandAD #64 ================");
L=taylorform(expm1(x), 6, 1, [0,2], absolute); constructPoly(autodiff(expm1(x), 6, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #65 ================");
L=taylorform(expm1(cos(x)), 5, 1, [1,3], absolute); constructPoly(autodiff(expm1(cos(x)), 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #66 ================");
L=taylorform(atanh(expm1(x)), 6, [0.1], [0,0.25], relative); constructPoly(autodiff(atanh(expm1(x)), 6, [0.1]));
L[0]; check(L[1]);
print("=============== Check TMandAD #67 ================");

L=taylorform(x^0.1, 5, 2, [1,3]); constructPoly(autodiff(x^0.1, 5, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #68 ================");
L=taylorform(0.1^x, 6, 2, [2, pi]); constructPoly(autodiff(0.1^x, 6, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #69 ================");
L=taylorform(0.1^0.1, 5, 3, [1,pi]); constructPoly(autodiff(0.1^0.1, 5, 3));
L[0]; check(L[1]);
print("=============== Check TMandAD #70 ================");
L=taylorform(x^x, 6, [pi]); constructPoly(autodiff(x^x, 6, [pi]));
L[0]; check(L[1]);
print("=============== Check TMandAD #71 ================");
L=taylorform(exp(x)^x, 5, [pi], [3,4]); constructPoly(autodiff(exp(x)^x, 5, [pi]));
L[0]; check(L[1]);
print("=============== Check TMandAD #72 ================");
L=taylorform(x^exp(x), 6, pi, [3,4]); constructPoly(autodiff(x^exp(x), 6, pi));
L[0]; check(L[1]);
print("=============== Check TMandAD #73 ================");
L=taylorform(exp(x)^exp(x), 5, 1, [0.9,1.1]); constructPoly(autodiff(exp(x)^exp(x), 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #74 ================");
L=taylorform(exp(x)^0.1, 6, 2); constructPoly(autodiff(exp(x)^0.1, 6, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #75 ================");
L=taylorform(0.1^exp(x), 5, -3, [-4,-2]); constructPoly(autodiff(0.1^exp(x), 5, -3));
L[0]; check(L[1]);
print("=============== Check TMandAD #76 ================");
L=taylorform(exp(cos(x)^sin(x)), 6, 0.2, [0.1,0.25]); constructPoly(autodiff(exp(cos(x)^sin(x)), 6, 0.2));
L[0]; check(L[1]);

print("=============== Check TMandAD #77 ================");
L=taylorform(sin(x)*tan(x)/log(1+x^2), 5, 0, relative); constructPoly(autodiff(sin(x)*tan(x)/log(1+x^2), 5, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #78 ================");
L=taylorform(sin(x)*tan(x)/log(1+x^2), 6, 0, relative); constructPoly(autodiff(sin(x)*tan(x)/log(1+x^2), 6, 0));
L[0]; check(L[1]);

print("=============== Check TMandAD #79 ================");
L=taylorform(abs(x), 6, 1, [0,2], absolute); constructPoly(autodiff(abs(x), 6, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #80 ================");
L=taylorform(abs(exp(x)), 5, 0, [0,2]); constructPoly(autodiff(abs(exp(x)), 5, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #81 ================");
L=taylorform(exp(abs(x)), 6, 2, [0,2], relative); constructPoly(autodiff(exp(abs(x)), 6, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #82 ================");
L=taylorform(single(x), 5, 1, [0,2], absolute); constructPoly(autodiff(single(x), 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #83 ================");
L=taylorform(single(exp(x)), 6, 0, [0,2]); constructPoly(autodiff(single(exp(x)), 6, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #84 ================");
L=taylorform(exp(single(x)), 5, 1, [0,2], relative); constructPoly(autodiff(exp(single(x)), 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #85 ================");
L=taylorform(double(x), 6, 2, [0,2]); constructPoly(autodiff(double(x), 6, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #86 ================");
L=taylorform(double(exp(x)), 5, 1, [0,2]); constructPoly(autodiff(double(exp(x)), 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #87 ================");
L=taylorform(exp(double(x)), 6, 0, [0,2], absolute); constructPoly(autodiff(exp(double(x)), 6, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #88 ================");
L=taylorform(DD(x), 5, 1, [0,2]); constructPoly(autodiff(DD(x), 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #89 ================");
L=taylorform(DD(exp(x)), 6, 0, [0,2], relative); constructPoly(autodiff(DD(exp(x)), 6, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #90 ================");
L=taylorform(exp(DD(x)), 5, 1, [0,2]); constructPoly(autodiff(exp(DD(x)), 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #91 ================");
L=taylorform(TD(x), 6, 1, [0,2], absolute); constructPoly(autodiff(TD(x), 6, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #92 ================");
L=taylorform(TD(exp(x)), 5, 2, [0,2]); constructPoly(autodiff(TD(exp(x)), 5, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #93 ================");
L=taylorform(exp(TD(x)), 6, 0, [0,2], relative); constructPoly(autodiff(exp(TD(x)), 6, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #94 ================");
L=taylorform(DE(x), 5, 1, [0,2], relative); constructPoly(autodiff(DE(x), 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #95 ================");
L=taylorform(DE(exp(x)), 6, 1, [0,2]); constructPoly(autodiff(DE(exp(x)), 6, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #96 ================");
L=taylorform(exp(DE(x)), 5, 2, [0,2]); constructPoly(autodiff(exp(DE(x)), 5, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #97 ================");
L=taylorform(ceil(x), 6, 1, [0,2], absolute); constructPoly(autodiff(ceil(x), 6, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #98 ================");
L=taylorform(ceil(exp(x)), 5, 0, [0,2]); constructPoly(autodiff(ceil(exp(x)), 5, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #99 ================");
L=taylorform(exp(ceil(x)), 6, 0, [0,2], relative); constructPoly(autodiff(exp(ceil(x)), 6, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #100 ================");
L=taylorform(floor(x), 5, 0, [0,2]); constructPoly(autodiff(floor(x), 5, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #101 ================");
L=taylorform(floor(exp(x)), 6, 2, [0,2], relative); constructPoly(autodiff(floor(exp(x)), 6, 2));
L[0]; check(L[1]);
print("=============== Check TMandAD #102 ================");
L=taylorform(exp(floor(x)), 5, 1, [0,2], absolute); constructPoly(autodiff(exp(floor(x)), 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #103 ================");
L=taylorform(nearestint(x), 6, 0, [0,2]); constructPoly(autodiff(nearestint(x), 6, 0));
L[0]; check(L[1]);
print("=============== Check TMandAD #104 ================");
L=taylorform(nearestint(exp(x)), 5, 1, [0,2], relative); constructPoly(autodiff(nearestint(exp(x)), 5, 1));
L[0]; check(L[1]);
print("=============== Check TMandAD #105 ================");
L=taylorform(exp(nearestint(x)), 6, 1, [0,2]); constructPoly(autodiff(exp(nearestint(x)), 6, 1));
L[0]; check(L[1]);

