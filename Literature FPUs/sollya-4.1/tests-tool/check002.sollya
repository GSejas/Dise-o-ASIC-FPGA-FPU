restart;
print("=============== Test number 21 ================");
degree(sin(x));


/*********************************************************************************/
restart;
print("=============== Test number 22 ================");
denominator(5/3);

/*********************************************************************************/
restart;
print("=============== Test number 23 ================");
denominator(exp(x));

/*********************************************************************************/
restart;
print("=============== Test number 24 ================");
a = 5/3;
b = numerator(a)/denominator(a);
print(a);
print(b);

/*********************************************************************************/
restart;
print("=============== Test number 25 ================");
a = exp(x/3);
b = numerator(a)/denominator(a);
print(a);
print(b);

/*********************************************************************************/
restart;
print("=============== Test number 26 ================");
diff(sin(x));

/*********************************************************************************/
restart;
print("=============== Test number 27 ================");
diff(x);

/*********************************************************************************/
restart;
print("=============== Test number 28 ================");
diff(x^x);

/*********************************************************************************/
restart;
print("=============== Test number 29 ================");
dirtyfindzeros(sin(x),[-5;5]);

/*********************************************************************************/
restart;
print("=============== Test number 30 ================");
p=889889516953035728989970006432565914118046095519567616686877970197303381060661650911373862730167175148439925356273269082482473781952934014048404246810557360519237b-677 + x * (392685047947827601505450851321573944986223666748888685200576755780370155425b-270 + x * (6001249631295599119794173987807978692360967732847507181353592112990700057773b-269 + x * (2810819263714567704618725647638922679615238080553927915691512053415493045486398123b-285 + x * (-1824058336184758458969066742009524525357478424213884880689936002406163518809888085b-282 + x * (-1635962643824047985870094070979551805254244569221628530659549014596616547292989167b-278 + x * (-2221893430275237204276174740150279260780200400045772335021314186970726126808696491b-277 + x * (-2344509239333157190743702590067848983609138523264986348387970421264340202282344565b-278 + x * (-3121432669974466360620808110931436402064131037978432583759915593600761236225527063b-280 + x * (-773917963800655166097602101204889507346108619385550777380687347677098189388564217b-280 + x * (-2456664134304800458388215318267381311201333055351202856339933444862365076107756847b-284 + x * (-1626720184987310978262797176693785746775034556205416914324062489909804126678683201b-286 + x * (-231104585279383115477600187708095312641841452578724474216559610155717712302025371b-286 + x * (-3680933644980096067735623537745219210440859046288758139373481017585165187552360301b-293 + x * (-3259689780494466170755267237788248621126395891437548729425851984090889527932420467b-296 + x * (-2599581435183057564397429433475659302180945474761956190281405670069071985683851999b-299 + x * (-3771179902233087427639666368377239797574764415450620446939473166738711685615183895b-303 + x * (-2508412234578166550400356517439588588327863629620629190868385191302596018780682931b-306 + x * (-1540608616477279281853195566313817469497355478589189627649550204979246859107513235b-309 + x * (-439420220920635814586214935574679946204072083482674523109789601765718916704991809b-311 + x * (-468009060720422950370977235618689599561097108833058268913827599220755870449426295b-315 + x * (-3739077119919913294750192472007104569820618708197803907725629332704076068719295703b-322 + x * (-3514943933746426633390643217415002305637086338940264554241886448080254523542173265b-326 + x * (-3121059047879984256463610608157531597037330470020568347331973617204048749182934027b-330 + x * (-1312864579354111113262887940181808301155092005746585944813912861708582761491319641b-333 + x * (-2098749518855048435933859742742670915157652108930060387529476190902580900838616375b-338 + x * (-3195552184735422400133725426132014485645520463361323915420874124693907919094524053b-343 + x * (-1161174353415833860864692662949187722583547339054896423623857188819947376179950943b-346 + x * (-3228938344731937420734334058400932964515218194142091268051871251523584603041078219b-352 + x * (-2151302959832759124631216490489706786963489942946375656340323023788975847458739825b-356)))))))))))))))))))))))))))));
d=[-4893299745940809486040077668449425316537438754630519635933996919120902374669723385b-273;2695250614315944697239070405079945412534462960416900368955895306421692489413122311b-273];
points=24;
prec=175;
dirtyfindzeros(p,d);

/*********************************************************************************/
restart;
print("=============== Test number 31 ================");
points=8;
f = -30879717245370838070712349676119593593642999021581b-262 + x * (1602925418421145866385980186544493412434987593471b-254 + x * (-144948056238098910579201b-166 + x * (-1388389088155368481780539b-165 + x * (372930446538976826977091605b-169 + x * (7333084534724264674540922032302739059645825242835b-240 + x * (-94154913290208326181858262191b-170 + x * (-152168648655806210645752736485b-169 + x * (2992713756691814828898030219764943b-179 + x * (7864786055259407372240893441876605835537257488915b-232 + x * (-6237493281774519295840632997189523667b-185 + x * (5264288383950269840958432779126676591b-184 + x * (6453344754657534210994036765929996563355b-191 + x * (-6089947420748690786646030842592001600390475761005b-219 + x * (-2139151602838708708137808745068947971942145b-197 + x * (8850601420712161663364843707773604622727713b-196 + x * (-2419778405705671295420161430155309749637707589b-204 + x * (-3913767832602863851535634495388834967093390830155b-213 + x * (784340317346483980869004045703825518731284039053b-209 + x * (-6859726825402852929223039253369380154403233703215b-212 + x * (11081394390954533787967018784553174028016039913693b-214 + x^2 * (-24561358996401390906662829513814827282875378510003b-223 + x * (-17086162780105315413330664009610314631565480702611b-226 + x * (-22781550373473753884440885346147086175420640936815b-231 + x^2 * (35889703972980190734873025529930178836354978952767b-240 + x * (10633986362364500958480896453312645581142215986005b-242 + x * (1519140908909214422640128064758949368734602283715b-244 + x^2 * (-14304370489407223620997619662649785320314783802521b-256 + x * (-29531603591034268120769279303535040661295037527785b-261 + x * (-14765801795517134060384639651767520330647518763893b-265 + x^2 * (26952194364722897108438272733351053152554472752631b-275 + x * (3080250784539759669535802598097263217434796886015b-276 + x * (43808011157898804188953636950716632425739333489991b-285 + x^2 * (-15952846168452480615038593256590978522033100104463b-293 + x * (-6544757402442043329246602361678350162885374401831b-296))))))))))))))))))))))))))))))))));
dirtyfindzeros(f,[-1/4;1/2]);

/*********************************************************************************/
restart;
print("=============== Test number 32 ================");
L1=dirtyfindzeros(x^2*sin(1/x),[0;1]);
points=1000!;
L2=dirtyfindzeros(x^2*sin(1/x),[0;1]);
length(L1); length(L2);

/*********************************************************************************/
restart;
print("=============== Test number 33 ================");
prec=175!;
points=72!;
d=[-1/4;1/4];
q= -9218359857239378053149166583414477383319548700448408553592614065149393107991574094431779300909386394607724189300652164116661978352015199072381966773909782438444550115978733458953108338817245522910437621b-747 + x * (-4918945581850403406186365246730251739531892020830917620356470726738192033495929931205b-325 + x * (-280736214993231305175183134111309934939054691730352833297755584396641782537401123811229b-323 + x * (-3296794439148309983785257966527617622126569684362773368016441937091041142082807278547641356788607659b-360 + x * (-1162815620496786429742938279084772339215067215118977341562864870861668735850030387236811817383275179b-353 + x * (-1008541912689173056903175399302104307006639210660465294545137759381337242490809077257293229781348079b-348 + x * (-2342913806489465941429371682485389038775917098603823839631204684807467024475578205433216649559568839b-345 + x * (-3845503555651277193086598769066174969324632164736960479656500661911447287579321920589602471937980643b-342 + x * (-577388972082389265291281910620877528441488726209642544260999332316920744567964515411193102000402419b-336 + x * (-519219181883197970470878489090701126949156069237610094611622947494413702365023482664291543865804873b-333 + x * (-2833359990866141307959291185985539134181537071084158331012832327708969383520113454051058610804395489b-333 + x * (-2945185149312769605397704065992698709602457770414444045223857485639187743533141939697575628713244193b-331 + x * (-1160468705007854401734543272536512039790059278102973696577338293528508320591522206996381660982531121b-328 + x * (-2723447513989440327784471543923582516019769993810371302136778008007642879840422786007059761302054621b-328 + x * (-570584550655303616960095423606880840241523063309212080829789158981209868316415767065068498275244243b-325 + x * (-2471253493541736589990015790002930883291119152102682986179125591155169242944859296371005415159337601b-327 + x * (-2392736186293296342257968331718144679176384826805684359679444147838260255459545951974398227442622079b-328 + x * (609643702336915022892676446979464315541801774685703048044330521476797219277029459405194253086689979b-327 + x * (3231097593498066092130647891005502845743365718576424144385833584357950035247553737581486666711443263b-329 + x * (-2616929422912460208671159862929181361563168014320722181061325647954659236057543538176422702212765551b-329 + x * (-1086487167545885239762353531760289115589103541139412690935586322082743117281008925919085965653794949b-327 + x * (1153825455878837467942846302880561850626910163556219817718535312940642431171044830413067264936560961b-329 + x * (426190615910837958652435841808042265057578969751017988354235596856555790286394949735695426638795801b-326 + x * (-3049261258248492512553957727488457032717889068046361580110964834482321516378120619338953799867457085b-331 + x * (-586261917347835885602204268267128317301691595415261615087931507852755272136513833664941669345299455b-327 + x * (557404050939006934986049431419816775556256361324564754562880001875773387045401098578530387413592223b-329 + x * (1387792776779230471943447791424857914519796928841252577718784103138982912056821653821032532984716727b-329 + x * (-3285995967957263591382748517270098492767877788997345843579947925264244169977616724843010359331969369b-332 + x * (-2893733837361007965265880750279330910788837913921452587000653264181468595447220905672781622950041213b-331 + x * (2199755241022371297558315217874257721807914029642563602999313936664508235707383402095170887612052351b-332 + x * (1341716602486466713792361354627466135493950524298879098494972829279985925927125951673813790414661531b-331 + x * (-2618762158988042172639597959959233154121151634038714713650241708720138932317777436297331043107894569b-333 + x * (-2222628791105864876742284319851745692732772143298609730741825215152369549318866089775799001868289055b-333 + x * (1394252569291750341939137699870781790569095818186015349376261485403297214984487021889254669548510317b-333 + x * (1639933449461612644715031920116769872569878983758303565286275554365180610123210270899340090394758633b-334 + x * (-2686057470023396416882760325090034443069344463883329368721499542644237388965710943335487207802554807b-335 + x * (-4248031130778005062883783455569307697104170780174332854998143813334933628573225956680251203811974769b-337 + x * (1182918772047457832161326831475275004541615944168604737874353936451448673730065881982623690307880759b-335 + x * (1155942155199347992714554253750644756926549142439146462958050288530938493284793615956292869693993481b-337 + x * (-3843970797311274539703466942415513626343815100833181510828503241149349525263807555842211835887304945b-338 + x * (-911896617945003768467549496971757071792384511583649215671089976857370126562063072959032092688041765b-339 + x * (2899153875447292358555647058674865557982018754475514975431680646518577945787343771760767453586380373b-339 + x * (2814711995680979197123599172392312114997239503565632824186823439044755104186889295015107391523650727b-346 + x * (-4078068662294376287769630395391036045953560687435461579992166934989325356469416963310883551455800035b-341 + x * (1578093989360301650113165157647756083606175911087206489455403622990533896570996899941806640379305599b-343 + x * (670274776634839762718996133891259887713238683778474539521833015020547136895362189421392897901904115b-340 + x * (-4319276991183372496512264650033207768343638687536414370045488224752399433905265872744718416595562123b-345 + x * (-823910437157444415290569431881368027976363385359934647481458147660890954766469931007465699329136957b-342 + x * (2069930588992432394648381630714319993106283612167245241249177946697377775227910464866309506467164921b-345 + x * (471956936811187245496581795621972370251530022010989098340371078673016223669556054707117062221148627b-343 + x * (-1682144801681154037288113413880602875598325892042327333948090678520839713740738536970627274924722261b-346 + x * (-3999428992054846599226237581872104205444421412485465539254360461538783192239568417702429208288527227b-348 + x * (614426987676766313865592763161818760240370442461047379882461858639453374203432090754069797245993535b-346 + x * (1924281412982230934592123665752061076486907029124263508746995295869043166996273560145191699834020075b-349 + x * (-828221707009915071892889554884240633428190641459446811664259375137324321171016305265421983147628791b-348 + x * (-3228859555947787361261301546703259141951112730680872932487743821293715337493903582977099568017411617b-352 + x * (2088399455699548526173998278568807469735959977808714960654457704286587767096744447139202052956622891b-351 + x * (4180181285584806296773300952793969462002402079745687195409223730823971765973558485858389778959828347b-355 + x * (-2481907107341039122200669115276819951315877544533462699078887554357896026632162111609352376691377825b-353 + x * (-881049855457576526204607872590866998927428796875075523974303014990268119597795987642082333399947437b-357 + x * 2792182385824577983264051229631298430934776956763131548378368724335093098253842026336792725034277253b-355)))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
dirtyfindzeros(q,d);

/*********************************************************************************/
restart;
print("=============== Test number 34 ================");
dirtyinfnorm(sin(x),[-10;10]);

/*********************************************************************************/
restart;
print("=============== Test number 35 ================");
prec=15!;
dirtyinfnorm(exp(cos(x))*sin(x),[0;5]);
prec=40!;
dirtyinfnorm(exp(cos(x))*sin(x),[0;5]);
prec=100!;
dirtyinfnorm(exp(cos(x))*sin(x),[0;5]);
prec=200!;
dirtyinfnorm(exp(cos(x))*sin(x),[0;5]);

/*********************************************************************************/
restart;
print("=============== Test number 36 ================");
dirtyinfnorm(x^2, [log(0);log(1)]);

/*********************************************************************************/
restart;
print("=============== Test number 37 ================");
sin(10);
dirtyintegral(cos(x),[0;10]);
points=2000!;
dirtyintegral(cos(x),[0;10]);

/*********************************************************************************/
restart;
print("=============== Test number 38 ================");
display = decimal;
a = evaluate(sin(pi * x), 0.25);
a;
display = binary;
a;
display = hexadecimal;
a;
display = dyadic;
a;
display = powers;
a;

/*********************************************************************************/
restart;
print("=============== Test number 39 ================");
5 / 2;

/*********************************************************************************/
restart;
print("=============== Test number 40 ================");
x / 2;