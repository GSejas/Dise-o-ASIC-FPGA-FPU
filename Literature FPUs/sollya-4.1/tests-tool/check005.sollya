restart;
print("=============== Test number 81 ================");
p = 0x3ff0000000000000 + x * (0x3ff0000000000000 + x * (0x3fe0000000000000 + x * (0x3fc5555555555559 + x * (0x3fa55555555555bd + x * (0x3f811111111106e2 + x * (0x3f56c16c16bf5eb7 + x * (0x3f2a01a01a292dcd + x * (0x3efa01a0218a016a + x * (0x3ec71de360331aad + x * (0x3e927e42e3823bf3 + x * (0x3e5ae6b2710c2c9a + x * (0x3e2203730c0a7c1d + x * 0x3de5da557e0781df))))))))))));
q = implementpoly(p,[-1/2;1/2],1b-60,D,"p","implementation.c",honorcoeffprec,"implementation.gappa");
if (q != p) then print("During implementation, rounding has happened.") else print("Polynomial implemented as given.");	

/*********************************************************************************/
restart;
print("=============== Test number 82 ================");
infnorm(exp(x),[-2;3]);

/*********************************************************************************/
restart;
print("=============== Test number 83 ================");
infnorm(exp(x),[-2;3],[| [0;1], [2;2.5] |]);

/*********************************************************************************/
restart;
print("=============== Test number 84 ================");
infnorm(exp(x),[-2;3],"proof.txt", [| [0;1], [2;2.5] |]);

/*********************************************************************************/
restart;
print("=============== Test number 85 ================");
infnorm(exp(x),[1;1]);

/*********************************************************************************/
restart;
print("=============== Test number 86 ================");
infnorm(exp(x), [log(0);log(1)]);


/*********************************************************************************/
restart;
print("=============== Test number 87 ================");
inf([1;3]);
inf(0);

/*********************************************************************************/
restart;
print("=============== Test number 88 ================");
display=binary!;
I=[0.111110000011111_2; 1];
inf(I);
prec=12!;
inf(I);

/*********************************************************************************/
restart;
print("=============== Test number 89 ================");
sin(10);
integral(cos(x),[0;10]);
diam=1e-5!;
integral(cos(x),[0;10]);

/*********************************************************************************/
restart;
print("=============== Test number 90 ================");
isbound(x);
isbound(f);
isbound(g);
f=sin(x);
isbound(x);
isbound(f);
isbound(g);

/*********************************************************************************/
restart;
print("=============== Test number 91 ================");
isbound(a);
{ var a; isbound(a); };
isbound(a);

/*********************************************************************************/
restart;
print("=============== Test number 92 ================");
f=sin(x);
isbound(x);
rename(x,y);
isbound(x);

/*********************************************************************************/
restart;
print("=============== Test number 93 ================");
x=1;
f=sin(y);
rename(y,x);
f;
x;
isbound(x);
rename(x,y);
isbound(x);
x;

/*********************************************************************************/
restart;
print("=============== Test number 94 ================");
isevaluable(sin(pi * 1/x), 0.75);
print(evaluate(sin(pi * 1/x), 0.75));

/*********************************************************************************/
restart;
print("=============== Test number 95 ================");
isevaluable(sin(pi * 1/x), 0.5);
print(evaluate(sin(pi * 1/x), 0.5));


/*********************************************************************************/
restart;
print("=============== Test number 96 ================");
isevaluable(sin(pi * 1/x), 0);
print(evaluate(sin(pi * 1/x), 0));

/*********************************************************************************/
restart;
print("=============== Test number 97 ================");
length("Hello World!");

/*********************************************************************************/
restart;
print("=============== Test number 98 ================");
length([|1,...,5|]);

/*********************************************************************************/
restart;
print("=============== Test number 99 ================");
length([| |]);

/*********************************************************************************/
restart;
print("=============== Test number 100 ================");
length([|1,2...|]);