restart;
print("=============== Test number 161 ================");
procedure succ(n) { return n + 1; };
succ(5);
3 + succ(0);
succ;

/*********************************************************************************/
restart;
print("=============== Test number 162 ================");
succ = proc(n) { return n + 1; };
succ(5);
3 + succ(0);
succ;

/*********************************************************************************/
restart;
print("=============== Test number 163 ================");
add = proc(m,n) { var res; res := m + n; return res; };
add(5,6);
add;
verbosity = 1!;
add(3);
add(true,false);


/*********************************************************************************/
restart;
print("=============== Test number 164 ================");
succ = proc(n) { return n + 1; };
succ(5);
succ(x);

/*********************************************************************************/
restart;
print("=============== Test number 165 ================");
hey = proc() { print("Hello world."); };
hey();
print(hey());
hey;


/*********************************************************************************/
restart;
print("=============== Test number 166 ================");
fac = proc(n) { var res; if (n == 0) then res := 1 else res := n * fac(n - 1); return res; };
fac(5);
fac(11);
fac;

/*********************************************************************************/
restart;
print("=============== Test number 167 ================");
myprocs = [| proc(m,n) { return m + n; }, proc(m,n) { return m - n; } |];
(myprocs[0])(5,6);
(myprocs[1])(5,6);
succ = proc(n) { return n + 1; };
pred = proc(n) { return n - 1; };
applier = proc(p,n) { return p(n); };
applier(succ,5);
applier(pred,5);

/*********************************************************************************/
restart;
print("=============== Test number 168 ================");
verbosity = 1!;
myquit = proc(n) { print(n); quit; };
myquit;
myquit(5);

/*********************************************************************************/
restart;
print("=============== Test number 169 ================");
printsucc = proc(n) { var succ; succ = proc(n) { return n + 1; }; print("Successor of",n,"is",succ(n)); };
printsucc(5);

/*********************************************************************************/
restart;
print("=============== Test number 170 ================");
makeadd = proc(n) { var add; print("n =",n); add = proc(m,n) { return n + m; }; return add; };
makeadd(4);
(makeadd(4))(5,6);

/*********************************************************************************/
/* restart; */
/* print("=============== Test number 171 ================"); */
/* quit; */

/*********************************************************************************/
restart;
print("=============== Test number 172 ================");
pi10 = rationalapprox(Pi,10);
pi50 = rationalapprox(Pi,50);
pi100 = rationalapprox(Pi,100);
r = rationalapprox(sin(pi/5.9),7);

print( pi10, ": ", simplify(floor(-log2(abs(pi10-Pi)/Pi))), "bits." );
print( pi50, ": ", simplify(floor(-log2(abs(pi50-Pi)/Pi))), "bits." );
print( pi100, ": ", simplify(floor(-log2(abs(pi100-Pi)/Pi))), "bits." );
print( r, ": ", simplify(floor(-log2(abs(r-sin(pi/5.9))/sin(pi/5.9)))), "bits." );

/*********************************************************************************/
restart;
print("=============== Test number 173 ================");
a=0.1;
b=rationalapprox(a,4);
numerator(b); denominator(b);
print(simplify(floor(-log2(abs((b-a)/a)))), "bits.");

/*********************************************************************************/
restart;
print("=============== Test number 174 ================");
display=binary!;
round(Pi,20,RD);

/*********************************************************************************/
restart;
print("=============== Test number 175 ================");


/*********************************************************************************/
restart;
print("=============== Test number 176 ================");
p = 11691999891702459232513188345837804387460473133465b-163 + x * (11692942107918215660346141397235181022117132379831b-163 + x * (5835438123620347449415289742932818158651775091869b-163 + x * (3984684218240970504969472776081331362033160518301b-164 + x * (26040878953088729371129411196520398147571622258327b-169 + x * 20808009114828595646273342020654371193163483094671b-170))));
degree(p);
dirtyinfnorm(p-exp(x),[0;1]);

/*********************************************************************************/
restart;
print("=============== Test number 177 ================");
p = 23384026195983479554312107615576132098315751748267b-164 + x^2 * (-46768051993840437443783072518668792259606171959529b-166 + x^2 * (15589330806475599601965639862079915077330658862695b-168 + x^2 * (-33251631244830928295499525279229507601750795147543b-174 + x^2 * 37351022179333407291017870331792433578970741553163b-180)));
canonical=on!;
p;

/*********************************************************************************/
restart;
print("=============== Test number 178 ================");
p1 = 11691999891702459232513188345837804387460473133465b-163 + x * (11692942107918215660346141397235181022117132379831b-163 + x * (5835438123620347449415289742932818158651775091869b-163 + x * (3984684218240970504969472776081331362033160518301b-164 + x * (26040878953088729371129411196520398147571622258327b-169 + x * 20808009114828595646273342020654371193163483094671b-170))));
p2 = 11691999891702299312469444817572169311673890781507b-163 + x * (23385884215836760115521942647579564654384001742411b-164 + x * (1458859530913839021906884707848785355431185024535b-161 + x * (15938736871836860565882142316746025506783124556517b-166 + x * (26040878964869758854248710691789107998476450095123b-169 + x * 41616018209593462767401219418438811660046839978843b-171))));
p3 = 11691999891702299312469444817572169311673890781507b-163 + x * (23385884215836760115521942647579564654384001742411b-164 + x * (1458859530913839021906884707848785355431185024535b-161 + x * (15938736871836860565882142316746025506783124556517b-166 + x * (26040878964869758854248710691789107998476450095123b-169 + x * 41616018209593462767401219418438811660046839978843b-171))));
dirtyinfnorm(p1-exp(x),[0;1]);
dirtyinfnorm(p2-exp(x),[0;1]);
dirtyinfnorm(p3-exp(x),[0;1]);


/*********************************************************************************/
restart;
print("=============== Test number 179 ================");
f=sin(x);
f;
rename(x,y);
f;

/*********************************************************************************/
restart;
print("=============== Test number 180 ================");
a=1;
f=sin(x);
rename(x,a);
a;
f;

/*********************************************************************************/
restart;
print("=============== Test number 181 ================");
mylist = [|"0", "1", "2", "3"|];
procedure enumerate(l) {
  var k, h;
  k = 0;
  while (l != [||]) do {
    h = head(l);
    "l = ", l;
    "k = ", k;
    "h = ", h;
    l = tail(l);
    k = k + 1;
  };
};
enumerate(mylist);
